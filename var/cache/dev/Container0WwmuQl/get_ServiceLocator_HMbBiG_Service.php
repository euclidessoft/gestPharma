<?php

namespace Container0WwmuQl;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_HMbBiG_Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.hMbBiG.' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.hMbBiG.'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'encoder' => ['privates', '.errored.Yx48Gvf', NULL, 'Cannot determine controller argument for "App\\Controller\\Security\\securityController::admin_new()": the $encoder argument is type-hinted with the non-existent class or interface: "App\\Controller\\Security\\UserPasswordEncoderInterface". Did you forget to add a use statement?'],
            'mail' => ['privates', '.errored.1htKsc6', NULL, 'Cannot determine controller argument for "App\\Controller\\Security\\securityController::admin_new()": the $mail argument is type-hinted with the non-existent class or interface: "Swift_Mailer".'],
            'tokenGenerator' => ['privates', 'security.csrf.token_generator', 'getSecurity_Csrf_TokenGeneratorService', true],
        ], [
            'encoder' => '?',
            'mail' => '?',
            'tokenGenerator' => '?',
        ]);
    }
}
