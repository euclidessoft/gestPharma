<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">C:\wamp\www\upgradegnt</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.runtime_environment">%env(default:kernel.environment:APP_RUNTIME_ENV)%</parameter>
    <parameter key="kernel.runtime_mode">%env(query_string:default:container.runtime_mode:APP_RUNTIME_MODE)%</parameter>
    <parameter key="kernel.runtime_mode.web">%env(bool:default::key:web:default:kernel.runtime_mode:)%</parameter>
    <parameter key="kernel.runtime_mode.cli">%env(not:default:kernel.runtime_mode.web:)%</parameter>
    <parameter key="kernel.runtime_mode.worker">%env(bool:default::key:worker:default:kernel.runtime_mode:)%</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.build_dir">C:\wamp\www\upgradegnt\var\cache\dev</parameter>
    <parameter key="kernel.cache_dir">C:\wamp\www\upgradegnt\var\cache\dev</parameter>
    <parameter key="kernel.logs_dir">C:\wamp\www\upgradegnt\var\log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="StimulusBundle">Symfony\UX\StimulusBundle\StimulusBundle</parameter>
      <parameter key="TurboBundle">Symfony\UX\Turbo\TurboBundle</parameter>
      <parameter key="TwigExtraBundle">Twig\Extra\TwigExtraBundle\TwigExtraBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="MakerBundle">Symfony\Bundle\MakerBundle\MakerBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">C:\wamp\www\upgradegnt\vendor\symfony\framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">C:\wamp\www\upgradegnt\vendor\doctrine\doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">C:\wamp\www\upgradegnt\vendor\doctrine\doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="path">C:\wamp\www\upgradegnt\vendor\symfony\debug-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">C:\wamp\www\upgradegnt\vendor\symfony\twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="path">C:\wamp\www\upgradegnt\vendor\symfony\web-profiler-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="StimulusBundle" type="collection">
        <parameter key="path">C:\wamp\www\upgradegnt\vendor\symfony\stimulus-bundle</parameter>
        <parameter key="namespace">Symfony\UX\StimulusBundle</parameter>
      </parameter>
      <parameter key="TurboBundle" type="collection">
        <parameter key="path">C:\wamp\www\upgradegnt\vendor\symfony\ux-turbo</parameter>
        <parameter key="namespace">Symfony\UX\Turbo</parameter>
      </parameter>
      <parameter key="TwigExtraBundle" type="collection">
        <parameter key="path">C:\wamp\www\upgradegnt\vendor\twig\extra-bundle</parameter>
        <parameter key="namespace">Twig\Extra\TwigExtraBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">C:\wamp\www\upgradegnt\vendor\symfony\security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">C:\wamp\www\upgradegnt\vendor\symfony\monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="MakerBundle" type="collection">
        <parameter key="path">C:\wamp\www\upgradegnt\vendor\symfony\maker-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MakerBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">App_KernelDevDebugContainer</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleSignalEvent">console.signal</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">false</parameter>
    <parameter key="kernel.trust_x_sendfile_type_header">false</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.enabled_locales" type="collection"/>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="debug.file_link_format">%env(default::SYMFONY_IDE)%</parameter>
    <parameter key="asset.request_context.base_path">null</parameter>
    <parameter key="asset.request_context.secure">null</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">C:\wamp\www\upgradegnt/translations</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">C:\wamp\www\upgradegnt\var\cache\dev/App_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_dir">C:\wamp\www\upgradegnt\var\cache\dev</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">C:\wamp\www\upgradegnt\var\cache\dev/serialization.php</parameter>
    <parameter key="cache.prefix.seed">_C:\wamp\www\upgradegnt.App_KernelDevDebugContainer</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">null</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="validator.mapping.cache.file">C:\wamp\www\upgradegnt\var\cache\dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_main_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:C:\wamp\www\upgradegnt\var\cache\dev/profiler</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.attribute.class">Doctrine\ORM\Mapping\Driver\AttributeDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.typed_field_mapper.default.class">Doctrine\ORM\Mapping\DefaultTypedFieldMapper</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.enable_lazy_ghost_objects">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">C:\wamp\www\upgradegnt\var\cache\dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine.migrations.preferred_em">null</parameter>
    <parameter key="doctrine.migrations.preferred_connection">null</parameter>
    <parameter key="env(VAR_DUMPER_SERVER)">127.0.0.1:9912</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>bootstrap_4_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">C:\wamp\www\upgradegnt/templates</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_CLIENT" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_RH" type="collection">
        <parameter>ROLE_EMPLOYER</parameter>
        <parameter>ROLE_BACK</parameter>
      </parameter>
      <parameter key="ROLE_STOCK" type="collection">
        <parameter>ROLE_LIVREUR</parameter>
        <parameter>ROLE_BACK</parameter>
        <parameter>ROLE_EMPLOYER</parameter>
      </parameter>
      <parameter key="ROLE_LIVREUR" type="collection">
        <parameter>ROLE_BACK</parameter>
        <parameter>ROLE_EMPLOYER</parameter>
      </parameter>
      <parameter key="ROLE_FINANCE" type="collection">
        <parameter>ROLE_BACK</parameter>
        <parameter>ROLE_EMPLOYER</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_FINANCE</parameter>
        <parameter>ROLE_STOCK</parameter>
        <parameter>ROLE_EMPLOYER</parameter>
        <parameter>ROLE_RH</parameter>
      </parameter>
      <parameter key="ROLE_POPRIETAIRE" type="collection">
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_RH</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="security.firewalls" type="collection">
      <parameter>dev</parameter>
      <parameter>main</parameter>
    </parameter>
    <parameter key="security.logout_uris" type="collection"/>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key=".data_collector.command" type="collection">
        <parameter>command</parameter>
        <parameter>@WebProfiler/Collector/command.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.http_client" type="collection">
        <parameter>http_client</parameter>
        <parameter>@WebProfiler/Collector/http_client.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.messenger" type="collection">
        <parameter>messenger</parameter>
        <parameter>@WebProfiler/Collector/messenger.html.twig</parameter>
      </parameter>
      <parameter key="mailer.data_collector" type="collection">
        <parameter>mailer</parameter>
        <parameter>@WebProfiler/Collector/mailer.html.twig</parameter>
      </parameter>
      <parameter key="notifier.data_collector" type="collection">
        <parameter>notifier</parameter>
        <parameter>@WebProfiler/Collector/notifier.html.twig</parameter>
      </parameter>
      <parameter key="serializer.data_collector" type="collection">
        <parameter>serializer</parameter>
        <parameter>@WebProfiler/Collector/serializer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection"/>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="routing.route_loader"/>
    </service>
    <service id="App\Entity" class="App\Entity" abstract="true">
      <tag name="container.excluded" source="in &quot;config/services.yaml&quot;"/>
    </service>
    <service id="App\Complement\Solde" class="App\Complement\Solde" autowire="true" autoconfigure="true"/>
    <service id="App\Controller\AbsenceController" class="App\Controller\AbsenceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\AbsenceController"/>
      </call>
    </service>
    <service id="App\Controller\AccueilController" class="App\Controller\AccueilController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\AccueilController"/>
      </call>
    </service>
    <service id="App\Controller\AchatController" class="App\Controller\AchatController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\AchatController"/>
      </call>
    </service>
    <service id="App\Controller\ApprovisionnementController" class="App\Controller\ApprovisionnementController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\ApprovisionnementController"/>
      </call>
    </service>
    <service id="App\Controller\AvoirController" class="App\Controller\AvoirController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\AvoirController"/>
      </call>
    </service>
    <service id="App\Controller\BanqueController" class="App\Controller\BanqueController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\BanqueController"/>
      </call>
    </service>
    <service id="App\Controller\CalendrierController" class="App\Controller\CalendrierController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\CalendrierController"/>
      </call>
    </service>
    <service id="App\Controller\CategorieController" class="App\Controller\CategorieController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\CategorieController"/>
      </call>
    </service>
    <service id="App\Controller\ClientController" class="App\Controller\ClientController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\ClientController"/>
      </call>
    </service>
    <service id="App\Controller\CommandeController" class="App\Controller\CommandeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\CommandeController"/>
      </call>
    </service>
    <service id="App\Controller\CongeController" class="App\Controller\CongeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\CongeController"/>
      </call>
    </service>
    <service id="App\Controller\ContratController" class="App\Controller\ContratController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\ContratController"/>
      </call>
    </service>
    <service id="App\Controller\CritereEvaluationController" class="App\Controller\CritereEvaluationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\CritereEvaluationController"/>
      </call>
    </service>
    <service id="App\Controller\DemandeExplicationController" class="App\Controller\DemandeExplicationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\DemandeExplicationController"/>
      </call>
    </service>
    <service id="App\Controller\DepartementController" class="App\Controller\DepartementController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\DepartementController"/>
      </call>
    </service>
    <service id="App\Controller\DepenseController" class="App\Controller\DepenseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\DepenseController"/>
      </call>
    </service>
    <service id="App\Controller\DetteController" class="App\Controller\DetteController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\DetteController"/>
      </call>
    </service>
    <service id="App\Controller\DocumentController" class="App\Controller\DocumentController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\DocumentController"/>
      </call>
    </service>
    <service id="App\Controller\EmployeController" class="App\Controller\EmployeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\EmployeController"/>
      </call>
    </service>
    <service id="App\Controller\EvaluationController" class="App\Controller\EvaluationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\EvaluationController"/>
      </call>
    </service>
    <service id="App\Controller\FeedbackController" class="App\Controller\FeedbackController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\FeedbackController"/>
      </call>
    </service>
    <service id="App\Controller\FinanceController" class="App\Controller\FinanceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\FinanceController"/>
      </call>
    </service>
    <service id="App\Controller\FinancementController" class="App\Controller\FinancementController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\FinancementController"/>
      </call>
    </service>
    <service id="App\Controller\FormationController" class="App\Controller\FormationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\FormationController"/>
      </call>
    </service>
    <service id="App\Controller\FournisseurController" class="App\Controller\FournisseurController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\FournisseurController"/>
      </call>
    </service>
    <service id="App\Controller\HeureSuplementaireController" class="App\Controller\HeureSuplementaireController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\HeureSuplementaireController"/>
      </call>
    </service>
    <service id="App\Controller\LivrerController" class="App\Controller\LivrerController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\LivrerController"/>
      </call>
    </service>
    <service id="App\Controller\MessageController" class="App\Controller\MessageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\MessageController"/>
      </call>
    </service>
    <service id="App\Controller\NoteServiceController" class="App\Controller\NoteServiceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\NoteServiceController"/>
      </call>
    </service>
    <service id="App\Controller\NotificationController" class="App\Controller\NotificationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\NotificationController"/>
      </call>
    </service>
    <service id="App\Controller\OrderController" class="App\Controller\OrderController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\OrderController"/>
      </call>
    </service>
    <service id="App\Controller\PaieController" class="App\Controller\PaieController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\PaieService"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\PaieController"/>
      </call>
    </service>
    <service id="App\Controller\PanierController" class="App\Controller\PanierController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\PanierController"/>
      </call>
    </service>
    <service id="App\Controller\PosteController" class="App\Controller\PosteController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\PosteController"/>
      </call>
    </service>
    <service id="App\Controller\PrimeController" class="App\Controller\PrimeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\PrimeController"/>
      </call>
    </service>
    <service id="App\Controller\PrimePerformanceController" class="App\Controller\PrimePerformanceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\PrimePerformanceController"/>
      </call>
    </service>
    <service id="App\Controller\ProduitController" class="App\Controller\ProduitController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\ProduitController"/>
      </call>
    </service>
    <service id="App\Controller\PromotionController" class="App\Controller\PromotionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\PromotionController"/>
      </call>
    </service>
    <service id="App\Controller\ReclamationController" class="App\Controller\ReclamationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\ReclamationController"/>
      </call>
    </service>
    <service id="App\Controller\RemboursementController" class="App\Controller\RemboursementController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\RemboursementController"/>
      </call>
    </service>
    <service id="App\Controller\ReponseController" class="App\Controller\ReponseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\ReponseController"/>
      </call>
    </service>
    <service id="App\Controller\SanctionController" class="App\Controller\SanctionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\SanctionController"/>
      </call>
    </service>
    <service id="App\Controller\SecurityController" class="App\Controller\SecurityController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\SecurityController"/>
      </call>
    </service>
    <service id="App\Controller\Security\securityController" class="App\Controller\Security\securityController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\Security\securityController"/>
      </call>
    </service>
    <service id="App\Controller\StockController" class="App\Controller\StockController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\StockController"/>
      </call>
    </service>
    <service id="App\Controller\SuggestionController" class="App\Controller\SuggestionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\SuggestionController"/>
      </call>
    </service>
    <service id="App\Controller\TestController" class="App\Controller\TestController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\TestController"/>
      </call>
    </service>
    <service id="App\Controller\TransfertController" class="App\Controller\TransfertController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\TransfertController"/>
      </call>
    </service>
    <service id="App\Controller\TypeCongeController" class="App\Controller\TypeCongeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\TypeCongeController"/>
      </call>
    </service>
    <service id="App\Controller\TypeContratController" class="App\Controller\TypeContratController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\TypeContratController"/>
      </call>
    </service>
    <service id="App\Controller\TypeSanctionController" class="App\Controller\TypeSanctionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.App\Controller\TypeSanctionController"/>
      </call>
    </service>
    <service id="App\Form\AbsenceType" class="App\Form\AbsenceType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\AchatType" class="App\Form\AchatType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ApprouverType" class="App\Form\ApprouverType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ApprovisionnementType" class="App\Form\ApprovisionnementType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\AvoirType" class="App\Form\AvoirType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\BanqueType" class="App\Form\BanqueType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\CalendrierType" class="App\Form\CalendrierType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\CandidatureType" class="App\Form\CandidatureType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\CategorieType" class="App\Form\CategorieType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ClientType" class="App\Form\ClientType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\CommandeType" class="App\Form\CommandeType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ContratType" class="App\Form\ContratType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\CritereEvaluationType" class="App\Form\CritereEvaluationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\CvType" class="App\Form\CvType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\DecisionType" class="App\Form\DecisionType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\DemandeCongeType" class="App\Form\DemandeCongeType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\DemandeExplicationType" class="App\Form\DemandeExplicationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\DepartementType" class="App\Form\DepartementType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\DepenseType" class="App\Form\DepenseType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\DocumentType" class="App\Form\DocumentType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\EmployeType" class="App\Form\EmployeType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\EvaluationType" class="App\Form\EvaluationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\FeedbackType" class="App\Form\FeedbackType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\FiltreBulletinType" class="App\Form\FiltreBulletinType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\FinancementBanqueType" class="App\Form\FinancementBanqueType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\FinancementType" class="App\Form\FinancementType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\FormationType" class="App\Form\FormationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\FournisseurType" class="App\Form\FournisseurType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\HeureSuplementaireType" class="App\Form\HeureSuplementaireType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\LivrerType" class="App\Form\LivrerType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\MessageReplyType" class="App\Form\MessageReplyType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\MessageType" class="App\Form\MessageType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\NoteServiceType" class="App\Form\NoteServiceType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\PaieType" class="App\Form\PaieType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\PaiementFormType" class="App\Form\PaiementFormType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\PosteType" class="App\Form\PosteType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\PrimePerformanceType" class="App\Form\PrimePerformanceType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\PrimeType" class="App\Form\PrimeType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ProduitType" class="App\Form\ProduitType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\PromotionType" class="App\Form\PromotionType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\RechercheType" class="App\Form\RechercheType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ReclamationType" class="App\Form\ReclamationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\RegistrationType" class="App\Form\RegistrationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\RemboursementType" class="App\Form\RemboursementType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\RemboursementbancaireType" class="App\Form\RemboursementbancaireType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ReponseAbsenceType" class="App\Form\ReponseAbsenceType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ReponseExplicationType" class="App\Form\ReponseExplicationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ReponseType" class="App\Form\ReponseType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\SanctionType" class="App\Form\SanctionType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ServiceType" class="App\Form\ServiceType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\SuggestionType" class="App\Form\SuggestionType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\TestType" class="App\Form\TestType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\TransfertType" class="App\Form\TransfertType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\TypeCongeType" class="App\Form\TypeCongeType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\TypeContratType" class="App\Form\TypeContratType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\TypeSanctionType" class="App\Form\TypeSanctionType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\BloodGroupType" class="App\Form\Type\BloodGroupType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\FemmesType" class="App\Form\Type\FemmesType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\LinkType" class="App\Form\Type\LinkType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\RegionType" class="App\Form\Type\RegionType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\SexeType" class="App\Form\Type\SexeType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\SituationType" class="App\Form\Type\SituationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\StatusType" class="App\Form\Type\StatusType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\VerserType" class="App\Form\Type\VerserType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\adresseType" class="App\Form\Type\adresseType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\evaluationType" class="App\Form\Type\evaluationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\promoType" class="App\Form\Type\promoType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\reponseType" class="App\Form\Type\reponseType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\UserType" class="App\Form\UserType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\VersementType" class="App\Form\VersementType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\changePasswordType" class="App\Form\changePasswordType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Repository\AbsenceRepository" class="App\Repository\AbsenceRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\AchatRepository" class="App\Repository\AchatRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\AlbumRepository" class="App\Repository\AlbumRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ApprovisionnementRepository" class="App\Repository\ApprovisionnementRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ApprovisionnerRepository" class="App\Repository\ApprovisionnerRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\AvoirRepository" class="App\Repository\AvoirRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\AvoirResteRepository" class="App\Repository\AvoirResteRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\BanqueRepository" class="App\Repository\BanqueRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CalendrierRepository" class="App\Repository\CalendrierRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CandidatureRepository" class="App\Repository\CandidatureRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CategorieRepository" class="App\Repository\CategorieRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CommandeProduitRepository" class="App\Repository\CommandeProduitRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CommandeRepository" class="App\Repository\CommandeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CompteRepository" class="App\Repository\CompteRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CongesRepository" class="App\Repository\CongesRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ContratRepository" class="App\Repository\ContratRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CreditRepository" class="App\Repository\CreditRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CritereEvaluationRepository" class="App\Repository\CritereEvaluationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CvRepository" class="App\Repository\CvRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\DebitRepository" class="App\Repository\DebitRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\DecisionRepository" class="App\Repository\DecisionRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\DemandeExplicationRepository" class="App\Repository\DemandeExplicationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\DepartementRepository" class="App\Repository\DepartementRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\DepenseRepository" class="App\Repository\DepenseRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\DocumentRepository" class="App\Repository\DocumentRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\EcritureRepository" class="App\Repository\EcritureRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\EmployeFormationRepository" class="App\Repository\EmployeFormationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\EmployeRepository" class="App\Repository\EmployeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\EvaluationDetailRepository" class="App\Repository\EvaluationDetailRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\EvaluationRepository" class="App\Repository\EvaluationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\FactureRepository" class="App\Repository\FactureRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\FeedbackRepository" class="App\Repository\FeedbackRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\FinancementRepository" class="App\Repository\FinancementRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\FormationRepository" class="App\Repository\FormationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\FournisseurProduitRepository" class="App\Repository\FournisseurProduitRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\FournisseurRepository" class="App\Repository\FournisseurRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\HeureSuplementaireRepository" class="App\Repository\HeureSuplementaireRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ImageRepository" class="App\Repository\ImageRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\LivrerProduitRepository" class="App\Repository\LivrerProduitRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\LivrerRepository" class="App\Repository\LivrerRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\LivrerResteRepository" class="App\Repository\LivrerResteRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\MessageRecipientRepository" class="App\Repository\MessageRecipientRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\MessageReplyRepository" class="App\Repository\MessageReplyRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\MessageRepository" class="App\Repository\MessageRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\MoisRepository" class="App\Repository\MoisRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\NoteServiceRepository" class="App\Repository\NoteServiceRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\NotificationRepository" class="App\Repository\NotificationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\NumeroRepository" class="App\Repository\NumeroRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PaieRepository" class="App\Repository\PaieRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PaieSalaireRepository" class="App\Repository\PaieSalaireRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PaiementRepository" class="App\Repository\PaiementRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PosteEmployeRepository" class="App\Repository\PosteEmployeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PosteRepository" class="App\Repository\PosteRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PrimePerformanceRepository" class="App\Repository\PrimePerformanceRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PrimeRepository" class="App\Repository\PrimeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ProduitRepository" class="App\Repository\ProduitRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PromotionProduitRepository" class="App\Repository\PromotionProduitRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PromotionRepository" class="App\Repository\PromotionRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ReclamationRepository" class="App\Repository\ReclamationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\RemboursementRepository" class="App\Repository\RemboursementRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ReponseAbsenceRepository" class="App\Repository\ReponseAbsenceRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ReponseExplicationRepository" class="App\Repository\ReponseExplicationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ReponseRepository" class="App\Repository\ReponseRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\RetenueRepository" class="App\Repository\RetenueRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\RetourProduitRepository" class="App\Repository\RetourProduitRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\RetourRepository" class="App\Repository\RetourRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\SanctionRepository" class="App\Repository\SanctionRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\StockRepository" class="App\Repository\StockRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\SuggestionRepository" class="App\Repository\SuggestionRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TamponAbsenceRepository" class="App\Repository\TamponAbsenceRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TestRepository" class="App\Repository\TestRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TransfertRepository" class="App\Repository\TransfertRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TypeCongeRepository" class="App\Repository\TypeCongeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TypeContratRepository" class="App\Repository\TypeContratRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TypeDecisionRepository" class="App\Repository\TypeDecisionRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TypeSanctionRepository" class="App\Repository\TypeSanctionRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\VersementRepository" class="App\Repository\VersementRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Security\AuthentAuthenticator" class="App\Security\AuthentAuthenticator" autowire="true" autoconfigure="true">
      <argument type="service" id="router.default"/>
    </service>
    <service id="App\Service\PaieService" class="App\Service\PaieService" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Repository\PaieRepository"/>
      <argument type="service" id="App\Repository\PrimeRepository"/>
      <argument type="service" id="App\Repository\HeureSuplementaireRepository"/>
      <argument type="service" id="App\Repository\SanctionRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Twig\Compos" class="App\Twig\Compos" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Twig\Composarabe" class="App\Twig\Composarabe" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Twig\Notes" class="App\Twig\Notes" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Twig\Notesarabe" class="App\Twig\Notesarabe" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory"/>
    <service id="argument_resolver.backed_enum_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.datetime" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id="clock" on-invalid="null"/>
    </service>
    <service id="argument_resolver.request_payload" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver" lazy="true">
      <tag name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver">controller.targeted_value_resolver</tag>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.serializer"/>
      <argument type="service" id="debug.validator" on-invalid="null"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver">
      <tag priority="50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver">
      <tag priority="50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">
      <tag priority="-50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id=".service_locator.JsBOv4p"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver">
      <tag priority="-100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver">
      <tag priority="-150" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.query_parameter_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver">
      <tag name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver">controller.targeted_value_resolver</tag>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
      <argument>false</argument>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>false</argument>
      <argument type="collection"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener">
      <tag name="monolog.logger" channel="request"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="controller.cache_attribute_listener" class="Symfony\Component\HttpKernel\EventListener\CacheAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\HttpKernelRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\ResponseRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\SymfonyRuntime"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
      <argument>true</argument>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true">
      <tag name="kernel.reset" method="resetRequestFormats" on_invalid="ignore"/>
    </service>
    <service id="http_cache" class="Symfony\Bundle\FrameworkBundle\HttpCache\HttpCache">
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="http_cache.store"/>
      <argument>null</argument>
      <argument type="collection">
        <argument key="debug">true</argument>
      </argument>
    </service>
    <service id="http_cache.store" class="Symfony\Component\HttpKernel\HttpCache\Store">
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/http_cache</argument>
    </service>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <tag name="container.no_preload"/>
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/App_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpFoundation\UriSigner">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.asset_mapper" type="service" id="cache.asset_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.transport" type="service" id="http_client.transport" on-invalid="ignore_uninitialized"/>
        <argument key="http_client" type="service" id=".debug.http_client" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.message_logger_listener" type="service" id="mailer.message_logger_listener" on-invalid="ignore_uninitialized"/>
        <argument key="translation.locale_switcher" type="service" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.log_processor" type="service" id="debug.log_processor" on-invalid="ignore_uninitialized"/>
        <argument key="session_listener" type="service" id="session_listener" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.in_memory.factory" type="service" id="messenger.transport.in_memory.factory" on-invalid="ignore_uninitialized"/>
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.debug_data_holder" type="service" id="doctrine.debug_data_holder" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.engine" type="service" id="twig.form.engine" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall" type="service" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_token_verifier" type="service" id="cache.security_token_verifier" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall.authenticator.main" type="service" id="debug.security.firewall.authenticator.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.console" type="service" id="monolog.handler.console" on-invalid="ignore_uninitialized"/>
        <argument key=".debug.http_client" type="service" id=".debug.http_client" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="request_stack" type="collection">
          <argument>?resetRequestFormats</argument>
        </argument>
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.asset_mapper" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.messenger.restart_workers_signal" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="http_client.transport" type="collection">
          <argument>?reset</argument>
        </argument>
        <argument key="http_client" type="collection">
          <argument>?reset</argument>
        </argument>
        <argument key="mailer.message_logger_listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="translation.locale_switcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.log_processor" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="session_listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="messenger.transport.in_memory.factory" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="profiler" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine.debug_data_holder" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="twig" type="collection">
          <argument>resetGlobals</argument>
        </argument>
        <argument key="twig.form.engine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.security_is_granted_attribute_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.security.firewall" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.security_token_verifier" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.security.firewall.authenticator.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.console" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key=".debug.http_client" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XXv1IfR"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
        <argument type="service" id="translator.default"/>
        <argument type="service" id="translation.locale_switcher"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger">
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
    </service>
    <service id="container.getenv" class="Closure">
      <tag name="routing.expression_language_function" function="env"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>getEnv</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.get_routing_condition_service" class="Closure" public="true">
      <tag name="routing.expression_language_function" function="service"/>
      <argument type="collection">
        <argument type="service" id=".service_locator.Xbsa8iG"/>
        <argument>get</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.env" class="Symfony\Component\String\LazyString" constructor="fromCallable" abstract="true">
      <argument type="service" id="container.getenv"/>
    </service>
    <service id="config_builder.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ConfigBuilderCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="clock" class="Symfony\Component\Clock\Clock"/>
    <service id="Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Request" class="Symfony\Component\HttpFoundation\Request" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Response" class="Symfony\Component\HttpFoundation\Response" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" class="Symfony\Component\HttpFoundation\Session\SessionInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id=".service_locator.lLv4pWF"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.uri_generator" class="Symfony\Component\HttpKernel\Fragment\FragmentUriGenerator">
      <argument>/_fragment</argument>
      <argument type="service" id="uri_signer"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>C:\wamp\www\upgradegnt</argument>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
        </service>
      </argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="process.messenger.process_message_handler" class="Symfony\Component\Process\Messenger\RunProcessMessageHandler">
      <tag name="messenger.message_handler"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener">
      <tag name="monolog.logger" channel="console"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>about</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about the current project</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument>C:\wamp\www\upgradegnt</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
      <call method="setDescription">
        <argument>Install bundle's web assets under a public directory</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear the cache</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.asset_mapper</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument>cache.security_token_verifier</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
      <call method="setDescription">
        <argument>Prune cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_invalidate_tags" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolInvalidateTagsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.NBUFN6A"/>
      <call method="setName">
        <argument>cache:pool:invalidate-tags</argument>
      </call>
      <call method="setDescription">
        <argument>Invalidate cache tags for all or a specific pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.asset_mapper</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument>cache.security_token_verifier</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
      <call method="setDescription">
        <argument>Delete an item from a cache pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.asset_mapper</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument>cache.security_token_verifier</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
      <call method="setDescription">
        <argument>List available cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
      <call method="setDescription">
        <argument>Warm up an empty cache</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the current configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the default configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
      <call method="setDescription">
        <argument>Display current services for an application</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
      <call method="setDescription">
        <argument>Ensure that arguments injected into services match type declarations</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
      <call method="setDescription">
        <argument>List classes/interfaces you can use for autowiring</argument>
      </call>
    </service>
    <service id="console.command.dotenv_debug" class="Symfony\Component\Dotenv\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>dev</argument>
      <argument>C:\wamp\www\upgradegnt</argument>
      <call method="setName">
        <argument>debug:dotenv</argument>
      </call>
      <call method="setDescription">
        <argument>List all dotenv files with variables and values</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator._1SGciK"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
      <call method="setDescription">
        <argument>Display configured listeners for an application</argument>
      </call>
    </service>
    <service id="console.command.messenger_consume_messages" class="Symfony\Component\Messenger\Command\ConsumeMessagesCommand">
      <tag name="console.command"/>
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.routable_message_bus"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="null"/>
      <argument type="collection">
        <argument>async</argument>
        <argument>failed</argument>
      </argument>
      <argument type="service" id="messenger.listener.reset_services" on-invalid="null"/>
      <argument type="collection">
        <argument>messenger.bus.default</argument>
      </argument>
      <argument>null</argument>
      <argument>null</argument>
      <call method="setName">
        <argument>messenger:consume</argument>
      </call>
      <call method="setDescription">
        <argument>Consume messages</argument>
      </call>
    </service>
    <service id="console.command.messenger_setup_transports" class="Symfony\Component\Messenger\Command\SetupTransportsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="collection">
        <argument>async</argument>
        <argument>failed</argument>
      </argument>
      <call method="setName">
        <argument>messenger:setup-transports</argument>
      </call>
      <call method="setDescription">
        <argument>Prepare the required infrastructure for the transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_debug" class="Symfony\Component\Messenger\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument key="messenger.bus.default" type="collection">
          <argument key="Symfony\Component\Process\Messenger\RunProcessMessage" type="collection">
            <argument type="collection">
              <argument>process.messenger.process_message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Console\Messenger\RunCommandMessage" type="collection">
            <argument type="collection">
              <argument>console.messenger.execute_command_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\HttpClient\Messenger\PingWebhookMessage" type="collection">
            <argument type="collection">
              <argument>http_client.messenger.ping_webhook_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage" type="collection">
            <argument type="collection">
              <argument>mailer.messenger.message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Messenger\Message\RedispatchMessage" type="collection">
            <argument type="collection">
              <argument>messenger.redispatch_message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Notifier\Message\ChatMessage" type="collection">
            <argument type="collection">
              <argument>chatter.messenger.chat_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Notifier\Message\SmsMessage" type="collection">
            <argument type="collection">
              <argument>texter.messenger.sms_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Notifier\Message\PushMessage" type="collection">
            <argument type="collection">
              <argument>texter.messenger.push_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
        </argument>
      </argument>
      <call method="setName">
        <argument>debug:messenger</argument>
      </call>
      <call method="setDescription">
        <argument>List messages you can dispatch using the message buses</argument>
      </call>
    </service>
    <service id="console.command.messenger_stop_workers" class="Symfony\Component\Messenger\Command\StopWorkersCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <call method="setName">
        <argument>messenger:stop-workers</argument>
      </call>
      <call method="setDescription">
        <argument>Stop workers after their current message</argument>
      </call>
    </service>
    <service id="console.command.messenger_failed_messages_retry" class="Symfony\Component\Messenger\Command\FailedMessagesRetryCommand">
      <tag name="console.command"/>
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="container.no_preload"/>
      <argument>failed</argument>
      <argument type="service" id=".service_locator.Y4J.A.e"/>
      <argument type="service" id="messenger.routable_message_bus"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="null"/>
      <argument type="service" id="messenger.transport.native_php_serializer" on-invalid="null"/>
      <argument>null</argument>
      <call method="setName">
        <argument>messenger:failed:retry</argument>
      </call>
      <call method="setDescription">
        <argument>Retry one or more messages from the failure transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_failed_messages_show" class="Symfony\Component\Messenger\Command\FailedMessagesShowCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>failed</argument>
      <argument type="service" id=".service_locator.Y4J.A.e"/>
      <argument type="service" id="messenger.transport.native_php_serializer" on-invalid="null"/>
      <call method="setName">
        <argument>messenger:failed:show</argument>
      </call>
      <call method="setDescription">
        <argument>Show one or more messages from the failure transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_failed_messages_remove" class="Symfony\Component\Messenger\Command\FailedMessagesRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>failed</argument>
      <argument type="service" id=".service_locator.Y4J.A.e"/>
      <argument type="service" id="messenger.transport.native_php_serializer" on-invalid="null"/>
      <call method="setName">
        <argument>messenger:failed:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove given messages from the failure transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_stats" class="Symfony\Component\Messenger\Command\StatsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="collection">
        <argument>async</argument>
        <argument>failed</argument>
      </argument>
      <call method="setName">
        <argument>messenger:stats</argument>
      </call>
      <call method="setDescription">
        <argument>Show the message count for one or more transports</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
      <call method="setDescription">
        <argument>Display current routes for an application</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
      <call method="setDescription">
        <argument>Help debug routes by simulating a path info match</argument>
      </call>
    </service>
    <service id="console.command.serializer_debug" class="Symfony\Component\Serializer\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <call method="setName">
        <argument>debug:serializer</argument>
      </call>
      <call method="setDescription">
        <argument>Display serialization information for classes</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>C:\wamp\www\upgradegnt/translations</argument>
      <argument>C:\wamp\www\upgradegnt/templates</argument>
      <argument type="collection">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations</argument>
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations</argument>
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\twig-bridge/Resources/views/Email</argument>
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\twig-bridge/Resources/views/Form</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
      <call method="setDescription">
        <argument>Display translation messages information</argument>
      </call>
    </service>
    <service id="console.command.translation_extract" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>C:\wamp\www\upgradegnt/translations</argument>
      <argument>C:\wamp\www\upgradegnt/templates</argument>
      <argument type="collection">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations</argument>
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations</argument>
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\twig-bridge/Resources/views/Email</argument>
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\twig-bridge/Resources/views/Form</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:extract</argument>
      </call>
      <call method="setDescription">
        <argument>Extract missing translations keys from code to translation files</argument>
      </call>
    </service>
    <service id="console.command.validator_debug" class="Symfony\Component\Validator\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.validator"/>
      <call method="setName">
        <argument>debug:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Display validation constraints for classes</argument>
      </call>
    </service>
    <service id="console.command.translation_pull" class="Symfony\Component\Translation\Command\TranslationPullCommand">
      <tag name="console.command" command="translation:pull"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument>en</argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:pull</argument>
      </call>
      <call method="setDescription">
        <argument>Pull translations from a given provider.</argument>
      </call>
    </service>
    <service id="console.command.translation_push" class="Symfony\Component\Translation\Command\TranslationPushCommand">
      <tag name="console.command" command="translation:push"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.reader"/>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:push</argument>
      </call>
      <call method="setDescription">
        <argument>Push translations to a given provider.</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Component\Translation\Command\XliffLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
      <call method="setDescription">
        <argument>Lint an XLIFF file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a YAML file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>App\Form</argument>
        <argument>App\Form\Type</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>App\Form\AbsenceType</argument>
        <argument>App\Form\AchatType</argument>
        <argument>App\Form\ApprouverType</argument>
        <argument>App\Form\ApprovisionnementType</argument>
        <argument>App\Form\AvoirType</argument>
        <argument>App\Form\BanqueType</argument>
        <argument>App\Form\CalendrierType</argument>
        <argument>App\Form\CandidatureType</argument>
        <argument>App\Form\CategorieType</argument>
        <argument>App\Form\ClientType</argument>
        <argument>App\Form\CommandeType</argument>
        <argument>App\Form\ContratType</argument>
        <argument>App\Form\CritereEvaluationType</argument>
        <argument>App\Form\CvType</argument>
        <argument>App\Form\DecisionType</argument>
        <argument>App\Form\DemandeCongeType</argument>
        <argument>App\Form\DemandeExplicationType</argument>
        <argument>App\Form\DepartementType</argument>
        <argument>App\Form\DepenseType</argument>
        <argument>App\Form\DocumentType</argument>
        <argument>App\Form\EmployeType</argument>
        <argument>App\Form\EvaluationType</argument>
        <argument>App\Form\FeedbackType</argument>
        <argument>App\Form\FiltreBulletinType</argument>
        <argument>App\Form\FinancementBanqueType</argument>
        <argument>App\Form\FinancementType</argument>
        <argument>App\Form\FormationType</argument>
        <argument>App\Form\FournisseurType</argument>
        <argument>App\Form\HeureSuplementaireType</argument>
        <argument>App\Form\LivrerType</argument>
        <argument>App\Form\MessageReplyType</argument>
        <argument>App\Form\MessageType</argument>
        <argument>App\Form\NoteServiceType</argument>
        <argument>App\Form\PaieType</argument>
        <argument>App\Form\PaiementFormType</argument>
        <argument>App\Form\PosteType</argument>
        <argument>App\Form\PrimePerformanceType</argument>
        <argument>App\Form\PrimeType</argument>
        <argument>App\Form\ProduitType</argument>
        <argument>App\Form\PromotionType</argument>
        <argument>App\Form\RechercheType</argument>
        <argument>App\Form\ReclamationType</argument>
        <argument>App\Form\RegistrationType</argument>
        <argument>App\Form\RemboursementType</argument>
        <argument>App\Form\RemboursementbancaireType</argument>
        <argument>App\Form\ReponseAbsenceType</argument>
        <argument>App\Form\ReponseExplicationType</argument>
        <argument>App\Form\ReponseType</argument>
        <argument>App\Form\SanctionType</argument>
        <argument>App\Form\ServiceType</argument>
        <argument>App\Form\SuggestionType</argument>
        <argument>App\Form\TestType</argument>
        <argument>App\Form\TransfertType</argument>
        <argument>App\Form\TypeCongeType</argument>
        <argument>App\Form\TypeContratType</argument>
        <argument>App\Form\TypeSanctionType</argument>
        <argument>App\Form\Type\BloodGroupType</argument>
        <argument>App\Form\Type\FemmesType</argument>
        <argument>App\Form\Type\LinkType</argument>
        <argument>App\Form\Type\RegionType</argument>
        <argument>App\Form\Type\SexeType</argument>
        <argument>App\Form\Type\SituationType</argument>
        <argument>App\Form\Type\StatusType</argument>
        <argument>App\Form\Type\VerserType</argument>
        <argument>App\Form\Type\adresseType</argument>
        <argument>App\Form\Type\evaluationType</argument>
        <argument>App\Form\Type\promoType</argument>
        <argument>App\Form\Type\reponseType</argument>
        <argument>App\Form\UserType</argument>
        <argument>App\Form\VersementType</argument>
        <argument>App\Form\changePasswordType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ColorType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</argument>
        <argument>Symfony\Component\Form\Extension\PasswordHasher\Type\FormTypePasswordHasherExtension</argument>
        <argument>Symfony\Component\Form\Extension\PasswordHasher\Type\PasswordTypePasswordHasherExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
      <call method="setDescription">
        <argument>Display form type information</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
      <call method="setDescription">
        <argument>Set a secret in the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove a secret from the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
      <call method="setDescription">
        <argument>Generate new encryption keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
      <call method="setDescription">
        <argument>List all secrets</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
      <call method="setDescription">
        <argument>Decrypt all secrets and stores them in the local vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
      <call method="setDescription">
        <argument>Encrypt all local secrets to the vault</argument>
      </call>
    </service>
    <service id="console.messenger.application" class="Symfony\Bundle\FrameworkBundle\Console\Application" shared="false">
      <argument type="service" id="kernel"/>
      <call method="setAutoExit">
        <argument>false</argument>
      </call>
    </service>
    <service id="console.messenger.execute_command_handler" class="Symfony\Component\Console\Messenger\RunCommandMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="console.messenger.application"/>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <tag name="cache.taggable" pool="cache.app"/>
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.property_info.recorder_inner"/>
    </service>
    <service id="cache.asset_mapper" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.asset_mapper.recorder_inner"/>
    </service>
    <service id="cache.messenger.restart_workers_signal" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.messenger.restart_workers_signal.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument type="abstract">PSR-6 provider service</argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.redis_tag_aware" class="Symfony\Component\Cache\Adapter\RedisTagAwareAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Memcached connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine_dbal" class="Symfony\Component\Cache\Adapter\DoctrineDbalAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_dbal_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">DBAL connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">PDO connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller">
      <argument>null</argument>
      <argument>true</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.asset_mapper" type="service" id="cache.asset_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_token_verifier" type="service" id="cache.security_token_verifier" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.asset_mapper" type="service" id="cache.asset_mapper" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_token_verifier" type="service" id="cache.security_token_verifier" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator"/>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service" id="asset_mapper.asset_package"/>
      <argument type="tagged_iterator" tag="assets.package" index-by="package" default-index-method="getDefaultPackageName" default-priority-method="getDefaultPackagePriority"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
      <argument type="service">
        <service class="string">
          <factory service="router.request_context" method="getBaseUrl"/>
        </service>
      </argument>
      <argument type="service">
        <service class="bool">
          <factory service="router.request_context" method="isSecure"/>
        </service>
      </argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument type="abstract">base path</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument type="abstract">base URLs</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument type="abstract">version</argument>
      <argument type="abstract">format</argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" abstract="true">
      <argument type="abstract">manifest path</argument>
      <argument type="service" id=".debug.http_client" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="asset_mapper" class="Symfony\Component\AssetMapper\AssetMapper">
      <argument type="service" id="asset_mapper.repository"/>
      <argument type="service" id="asset_mapper.cached_mapped_asset_factory"/>
      <argument type="service" id="asset_mapper.compiled_asset_mapper_config_reader"/>
    </service>
    <service id="asset_mapper.cached_mapped_asset_factory" class="Symfony\Component\AssetMapper\Factory\CachedMappedAssetFactory">
      <tag name="container.decorator" id="asset_mapper.mapped_asset_factory" inner="asset_mapper.cached_mapped_asset_factory.inner"/>
      <argument type="service" id="asset_mapper.cached_mapped_asset_factory.inner"/>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/asset_mapper</argument>
      <argument>true</argument>
    </service>
    <service id="asset_mapper.repository" class="Symfony\Component\AssetMapper\AssetMapperRepository">
      <argument type="collection">
        <argument key="C:\wamp\www\upgradegnt\vendor\symfony\ux-turbo\src\DependencyInjection/../../assets/dist">@symfony/ux-turbo</argument>
        <argument key="C:\wamp\www\upgradegnt\vendor\symfony\stimulus-bundle\src\DependencyInjection/../../assets/dist">@symfony/stimulus-bundle</argument>
        <argument key="assets/"></argument>
      </argument>
      <argument>C:\wamp\www\upgradegnt</argument>
      <argument type="collection">
        <argument>#^(?=[^\.]).*\.d\.ts$#</argument>
        <argument>#^(?=[^\.]).*.*/(?=[^\.])controllers\.json$#</argument>
      </argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="asset_mapper.public_assets_path_resolver" class="Symfony\Component\AssetMapper\Path\PublicAssetsPathResolver">
      <argument>/assets/</argument>
    </service>
    <service id="asset_mapper.local_public_assets_filesystem" class="Symfony\Component\AssetMapper\Path\LocalPublicAssetsFilesystem">
      <argument>C:\wamp\www\upgradegnt/public</argument>
    </service>
    <service id="asset_mapper.compiled_asset_mapper_config_reader" class="Symfony\Component\AssetMapper\CompiledAssetMapperConfigReader">
      <argument>C:\wamp\www\upgradegnt/public/assets</argument>
    </service>
    <service id="asset_mapper.asset_package" class="Symfony\Component\AssetMapper\MapperAwareAssetPackage">
      <tag name="container.decorator" id="assets._default_package" inner="asset_mapper.asset_package.inner"/>
      <argument type="service" id="asset_mapper.asset_package.inner"/>
      <argument type="service" id="asset_mapper"/>
    </service>
    <service id="asset_mapper.dev_server_subscriber" class="Symfony\Component\AssetMapper\AssetMapperDevServerSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="asset_mapper"/>
      <argument>/assets/</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.asset_mapper"/>
      <argument type="service" id="profiler" on-invalid="null"/>
    </service>
    <service id="asset_mapper.command.compile" class="Symfony\Component\AssetMapper\Command\AssetMapperCompileCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.compiled_asset_mapper_config_reader"/>
      <argument type="service" id="asset_mapper"/>
      <argument type="service" id="asset_mapper.importmap.generator"/>
      <argument type="service" id="asset_mapper.local_public_assets_filesystem"/>
      <argument>C:\wamp\www\upgradegnt</argument>
      <argument>true</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <call method="setName">
        <argument>asset-map:compile</argument>
      </call>
      <call method="setDescription">
        <argument>Compile all mapped assets and writes them to the final public output directory</argument>
      </call>
    </service>
    <service id="asset_mapper.command.debug" class="Symfony\Component\AssetMapper\Command\DebugAssetMapperCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper"/>
      <argument type="service" id="asset_mapper.repository"/>
      <argument>C:\wamp\www\upgradegnt</argument>
      <call method="setName">
        <argument>debug:asset-map</argument>
      </call>
      <call method="setDescription">
        <argument>Output all mapped assets</argument>
      </call>
    </service>
    <service id="asset_mapper_compiler" class="Symfony\Component\AssetMapper\AssetMapperCompiler">
      <argument type="tagged_iterator" tag="asset_mapper.compiler"/>
      <argument type="service_closure" id="asset_mapper"/>
    </service>
    <service id="asset_mapper.compiler.css_asset_url_compiler" class="Symfony\Component\AssetMapper\Compiler\CssAssetUrlCompiler">
      <tag name="asset_mapper.compiler"/>
      <tag name="monolog.logger" channel="asset_mapper"/>
      <argument>strict</argument>
      <argument type="service" id="monolog.logger.asset_mapper"/>
    </service>
    <service id="asset_mapper.compiler.source_mapping_urls_compiler" class="Symfony\Component\AssetMapper\Compiler\SourceMappingUrlsCompiler">
      <tag name="asset_mapper.compiler"/>
    </service>
    <service id="asset_mapper.compiler.javascript_import_path_compiler" class="Symfony\Component\AssetMapper\Compiler\JavaScriptImportPathCompiler">
      <tag name="asset_mapper.compiler"/>
      <tag name="monolog.logger" channel="asset_mapper"/>
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
      <argument>strict</argument>
      <argument type="service" id="monolog.logger.asset_mapper"/>
    </service>
    <service id="asset_mapper.importmap.config_reader" class="Symfony\Component\AssetMapper\ImportMap\ImportMapConfigReader">
      <argument>C:\wamp\www\upgradegnt/importmap.php</argument>
      <argument type="service" id="asset_mapper.importmap.remote_package_storage"/>
    </service>
    <service id="asset_mapper.importmap.manager" class="Symfony\Component\AssetMapper\ImportMap\ImportMapManager">
      <argument type="service" id="asset_mapper"/>
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
      <argument type="service" id="asset_mapper.importmap.remote_package_downloader"/>
      <argument type="service" id="asset_mapper.importmap.resolver"/>
    </service>
    <service id="asset_mapper.importmap.generator" class="Symfony\Component\AssetMapper\ImportMap\ImportMapGenerator">
      <argument type="service" id="asset_mapper"/>
      <argument type="service" id="asset_mapper.compiled_asset_mapper_config_reader"/>
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
    </service>
    <service id="asset_mapper.importmap.remote_package_storage" class="Symfony\Component\AssetMapper\ImportMap\RemotePackageStorage">
      <argument>C:\wamp\www\upgradegnt/assets/vendor</argument>
    </service>
    <service id="asset_mapper.importmap.remote_package_downloader" class="Symfony\Component\AssetMapper\ImportMap\RemotePackageDownloader">
      <argument type="service" id="asset_mapper.importmap.remote_package_storage"/>
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
      <argument type="service" id="asset_mapper.importmap.resolver"/>
    </service>
    <service id="asset_mapper.importmap.version_checker" class="Symfony\Component\AssetMapper\ImportMap\ImportMapVersionChecker">
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
      <argument type="service" id="asset_mapper.importmap.remote_package_downloader"/>
    </service>
    <service id="asset_mapper.importmap.resolver" class="Symfony\Component\AssetMapper\ImportMap\Resolver\JsDelivrEsmResolver">
      <argument type="service" id=".debug.http_client"/>
    </service>
    <service id="asset_mapper.importmap.renderer" class="Symfony\Component\AssetMapper\ImportMap\ImportMapRenderer">
      <argument type="service" id="asset_mapper.importmap.generator"/>
      <argument type="service" id="assets.packages" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>es-module-shims</argument>
      <argument type="collection">
        <argument key="data-turbo-track">reload</argument>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="asset_mapper.importmap.auditor" class="Symfony\Component\AssetMapper\ImportMap\ImportMapAuditor">
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
      <argument type="service" id=".debug.http_client"/>
    </service>
    <service id="asset_mapper.importmap.update_checker" class="Symfony\Component\AssetMapper\ImportMap\ImportMapUpdateChecker">
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
      <argument type="service" id=".debug.http_client"/>
    </service>
    <service id="asset_mapper.importmap.command.require" class="Symfony\Component\AssetMapper\Command\ImportMapRequireCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.importmap.manager"/>
      <argument type="service" id="asset_mapper.importmap.version_checker"/>
      <call method="setName">
        <argument>importmap:require</argument>
      </call>
      <call method="setDescription">
        <argument>Require JavaScript packages</argument>
      </call>
    </service>
    <service id="asset_mapper.importmap.command.remove" class="Symfony\Component\AssetMapper\Command\ImportMapRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.importmap.manager"/>
      <call method="setName">
        <argument>importmap:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove JavaScript packages</argument>
      </call>
    </service>
    <service id="asset_mapper.importmap.command.update" class="Symfony\Component\AssetMapper\Command\ImportMapUpdateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.importmap.manager"/>
      <argument type="service" id="asset_mapper.importmap.version_checker"/>
      <call method="setName">
        <argument>importmap:update</argument>
      </call>
      <call method="setDescription">
        <argument>Update JavaScript packages to their latest versions</argument>
      </call>
    </service>
    <service id="asset_mapper.importmap.command.install" class="Symfony\Component\AssetMapper\Command\ImportMapInstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.importmap.remote_package_downloader"/>
      <argument>C:\wamp\www\upgradegnt</argument>
      <call method="setName">
        <argument>importmap:install</argument>
      </call>
      <call method="setDescription">
        <argument>Download all assets that should be downloaded</argument>
      </call>
    </service>
    <service id="asset_mapper.importmap.command.audit" class="Symfony\Component\AssetMapper\Command\ImportMapAuditCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.importmap.auditor"/>
      <call method="setName">
        <argument>importmap:audit</argument>
      </call>
      <call method="setDescription">
        <argument>Check for security vulnerability advisories for dependencies</argument>
      </call>
    </service>
    <service id="asset_mapper.importmap.command.outdated" class="Symfony\Component\AssetMapper\Command\ImportMapOutdatedCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="asset_mapper.importmap.update_checker"/>
      <call method="setName">
        <argument>importmap:outdated</argument>
      </call>
      <call method="setDescription">
        <argument>List outdated JavaScript packages and their latest versions</argument>
      </call>
    </service>
    <service id="http_client.transport" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <tag name="monolog.logger" channel="http_client"/>
      <tag name="kernel.reset" method="reset" on_invalid="ignore"/>
      <argument type="collection"/>
      <argument>6</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.http_client" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="http_client.abstract_retry_strategy" class="Symfony\Component\HttpClient\Retry\GenericRetryStrategy" abstract="true">
      <argument type="abstract">http codes</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
      <argument type="abstract">jitter</argument>
    </service>
    <service id="http_client.uri_template" class="Symfony\Component\HttpClient\UriTemplateHttpClient">
      <argument type="service" id="http_client.uri_template.inner"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="http_client.uri_template_expander.guzzle" class="Closure">
      <argument type="collection">
        <argument>GuzzleHttp\UriTemplate\UriTemplate</argument>
        <argument>expand</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="http_client.uri_template_expander.rize" class="Closure">
      <argument type="collection">
        <argument type="service">
          <service class="Rize\UriTemplate"/>
        </argument>
        <argument>expand</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="http_client.messenger.ping_webhook_handler" class="Symfony\Component\HttpClient\Messenger\PingWebhookMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id=".debug.http_client"/>
    </service>
    <service id="mailer.mailer" class="Symfony\Component\Mailer\Mailer">
      <argument type="service" id="mailer.transports"/>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="mailer.transports" class="Symfony\Component\Mailer\Transport\Transports">
      <argument type="collection">
        <argument key="main">%env(MAILER_DSN)%</argument>
      </argument>
      <factory service="mailer.transport_factory" method="fromStrings"/>
    </service>
    <service id="mailer.transport_factory" class="Symfony\Component\Mailer\Transport">
      <argument type="tagged_iterator" tag="mailer.transport_factory"/>
    </service>
    <service id="mailer.messenger.message_handler" class="Symfony\Component\Mailer\Messenger\MessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="mailer.transports"/>
    </service>
    <service id="mailer.envelope_listener" class="Symfony\Component\Mailer\EventListener\EnvelopeListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="mailer.message_logger_listener" class="Symfony\Component\Mailer\EventListener\MessageLoggerListener">
      <tag name="kernel.reset" method="reset"/>
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="mailer.messenger_transport_listener" class="Symfony\Component\Mailer\EventListener\MessengerTransportListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="console.command.mailer_test" class="Symfony\Component\Mailer\Command\MailerTestCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="mailer.transports"/>
      <call method="setName">
        <argument>mailer:test</argument>
      </call>
      <call method="setDescription">
        <argument>Test Mailer transports by sending an email</argument>
      </call>
    </service>
    <service id="mailer.transport_factory.abstract" class="Symfony\Component\Mailer\Transport\AbstractTransportFactory" abstract="true">
      <tag name="monolog.logger" channel="mailer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.null" class="Symfony\Component\Mailer\Transport\NullTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.sendmail" class="Symfony\Component\Mailer\Transport\SendmailTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.smtp" class="Symfony\Component\Mailer\Transport\Smtp\EsmtpTransportFactory">
      <tag name="mailer.transport_factory" priority="-100"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.native" class="Symfony\Component\Mailer\Transport\NativeTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.yY.p4P7"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">C:\wamp\www\upgradegnt\var\cache\dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.af.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.af.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.ar.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.ar.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.az.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.az.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.be.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.be.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.bg.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.bg.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.bg.xlf</argument>
          </argument>
          <argument key="bs" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.bs.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.bs.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.bs.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.ca.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.ca.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.ca.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.cs.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.cs.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.cs.xlf</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.cy.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.cy.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.da.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.da.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.de.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.de.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.de.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.el.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.el.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.en.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.en.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.en.xlf</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.es.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.es.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.es.xlf</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.et.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.et.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.eu.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.eu.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.fa.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.fa.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.fa.xlf</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.fi.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.fi.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.fi.xlf</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.fr.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.fr.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.gl.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.gl.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.he.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.he.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.hr.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.hr.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.hr.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.hu.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.hu.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.hu.xlf</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.hy.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.hy.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.id.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.id.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.it.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.it.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.ja.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.ja.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.lb.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.lb.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.lt.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.lt.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.lt.xlf</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.lv.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.lv.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.lv.xlf</argument>
          </argument>
          <argument key="mk" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.mk.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.mk.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.mk.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.mn.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.mn.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.mn.xlf</argument>
          </argument>
          <argument key="my" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.my.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.my.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.my.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.nb.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.nb.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.nl.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.nl.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.nl.xlf</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.nn.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.nn.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.no.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.no.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.pl.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.pl.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.pl.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.pt.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.pt.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.pt_BR.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.ro.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.ro.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.ru.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.ru.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.ru.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.sk.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.sk.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.sl.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.sl.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.sl.xlf</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.sq.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.sq.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.sv.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.sv.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.th.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.th.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.tl.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.tl.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.tr.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.tr.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.tr.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.uk.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.uk.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.uk.xlf</argument>
          </argument>
          <argument key="ur" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.ur.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.ur.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.ur.xlf</argument>
          </argument>
          <argument key="uz" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.uz.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.uz.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.uz.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.vi.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.vi.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations\validators.zh_TW.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations\validators.zh_TW.xlf</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations\security.zh_TW.xlf</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations</argument>
          <argument>C:\wamp\www\upgradegnt/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\symfony\framework-bundle/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\doctrine\doctrine-bundle/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\doctrine\doctrine-migrations-bundle/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\symfony\debug-bundle/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\symfony\twig-bundle/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\symfony\web-profiler-bundle/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\symfony\stimulus-bundle/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\symfony\ux-turbo/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\twig\extra-bundle/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-bundle/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\symfony\monolog-bundle/translations</argument>
          <argument>C:\wamp\www\upgradegnt\vendor\symfony\maker-bundle/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\validator/Resources/translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-core/Resources/translations</argument>
            <argument>translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\framework-bundle/translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\doctrine\doctrine-bundle/translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\doctrine\doctrine-migrations-bundle/translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\debug-bundle/translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\twig-bundle/translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\web-profiler-bundle/translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\stimulus-bundle/translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\ux-turbo/translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\twig\extra-bundle/translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-bundle/translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\monolog-bundle/translations</argument>
            <argument>C:\wamp\www\upgradegnt\vendor\symfony\maker-bundle/translations</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yaml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.xliff.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xliff"/>
      <argument>xliff</argument>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php_ast" class="Symfony\Component\Translation\Extractor\PhpAstExtractor">
      <tag name="translation.extractor" alias="php"/>
      <argument type="tagged_iterator" tag="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.trans_method" class="Symfony\Component\Translation\Extractor\Visitor\TransMethodVisitor">
      <tag name="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.translatable_message" class="Symfony\Component\Translation\Extractor\Visitor\TranslatableMessageVisitor">
      <tag name="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.constraint" class="Symfony\Component\Translation\Extractor\Visitor\ConstraintVisitor">
      <tag name="translation.extractor.visitor"/>
      <argument type="collection">
        <argument>All</argument>
        <argument>AtLeastOneOf</argument>
        <argument>Bic</argument>
        <argument>Blank</argument>
        <argument>Callback</argument>
        <argument>CardScheme</argument>
        <argument>Choice</argument>
        <argument>Cidr</argument>
        <argument>Collection</argument>
        <argument>Compound</argument>
        <argument>Count</argument>
        <argument>Country</argument>
        <argument>CssColor</argument>
        <argument>Currency</argument>
        <argument>DateTime</argument>
        <argument>Date</argument>
        <argument>DivisibleBy</argument>
        <argument>Email</argument>
        <argument>EqualTo</argument>
        <argument>ExpressionSyntax</argument>
        <argument>Expression</argument>
        <argument>File</argument>
        <argument>GreaterThanOrEqual</argument>
        <argument>GreaterThan</argument>
        <argument>Hostname</argument>
        <argument>Iban</argument>
        <argument>IdenticalTo</argument>
        <argument>Image</argument>
        <argument>Ip</argument>
        <argument>IsFalse</argument>
        <argument>IsNull</argument>
        <argument>IsTrue</argument>
        <argument>Isbn</argument>
        <argument>Isin</argument>
        <argument>Issn</argument>
        <argument>Json</argument>
        <argument>Language</argument>
        <argument>Length</argument>
        <argument>LessThanOrEqual</argument>
        <argument>LessThan</argument>
        <argument>Locale</argument>
        <argument>Luhn</argument>
        <argument>NoSuspiciousCharacters</argument>
        <argument>NotBlank</argument>
        <argument>NotCompromisedPassword</argument>
        <argument>NotEqualTo</argument>
        <argument>NotIdenticalTo</argument>
        <argument>NotNull</argument>
        <argument>PasswordStrength</argument>
        <argument>Range</argument>
        <argument>Regex</argument>
        <argument>Sequentially</argument>
        <argument>Time</argument>
        <argument>Timezone</argument>
        <argument>Type</argument>
        <argument>Ulid</argument>
        <argument>Unique</argument>
        <argument>Url</argument>
        <argument>Uuid</argument>
        <argument>Valid</argument>
        <argument>When</argument>
        <argument>Expression</argument>
        <argument>Email</argument>
        <argument>NotCompromisedPassword</argument>
        <argument>When</argument>
        <argument>NoSuspiciousCharacters</argument>
        <argument>UniqueEntity</argument>
        <argument>UserPassword</argument>
      </argument>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php_ast"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>xliff</argument>
        <argument type="service" id="translation.dumper.xliff.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.fuYM_Z..translation.warmer"/>
    </service>
    <service id="translation.locale_switcher" class="Symfony\Component\Translation\LocaleSwitcher">
      <tag name="kernel.reset" method="reset"/>
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
      <argument type="tagged_iterator" tag="kernel.locale_aware" exclude="translation.locale_switcher"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="translation.provider_collection" class="Symfony\Component\Translation\Provider\TranslationProviderCollection">
      <argument type="collection"/>
      <factory service="translation.provider_collection_factory" method="fromConfig"/>
    </service>
    <service id="translation.provider_collection_factory" class="Symfony\Component\Translation\Provider\TranslationProviderCollectionFactory">
      <argument type="tagged_iterator" tag="translation.provider_factory"/>
      <argument type="collection"/>
    </service>
    <service id="translation.provider_factory.null" class="Symfony\Component\Translation\Provider\NullProviderFactory">
      <tag name="translation.provider_factory"/>
    </service>
    <service id="debug.error_handler_configurator" class="Symfony\Component\HttpKernel\Debug\ErrorHandlerConfigurator" public="true">
      <tag name="monolog.logger" channel="php"/>
      <argument type="service" id="monolog.logger.php"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="service" id="monolog.logger.deprecation"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument>%env(bool:default::key:web:default:kernel.runtime_mode:)%</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter">
      <argument>%env(default::SYMFONY_IDE)%</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>C:\wamp\www\upgradegnt</argument>
      <argument type="service_closure" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="container.hot_path"/>
      <tag name="event_dispatcher">event_dispatcher.dispatcher</tag>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="event_dispatcher" inner="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id=".virtual_request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="doctrine_migrations.schema_filter_listener"/>
          <argument>onConsoleCommand</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="turbo.kernel.request_listener"/>
          <argument>__invoke</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.context_listener.0"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="argument_resolver.request_payload"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>removeCspHeader</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="asset_mapper.dev_server_subscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>35</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="asset_mapper.dev_server_subscriber"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.envelope_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.message_logger_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.messenger_transport_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.retry.send_failed_message_for_retry_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.failure.add_error_details_stamp_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>200</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.failure.send_failed_message_to_failure_transport_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerStartedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener"/>
          <argument>onWorkerStarted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Notifier\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="notifier.notification_logger_listener"/>
          <argument>onNotification</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="console_profiler_listener"/>
          <argument>initialize</argument>
        </argument>
        <argument>4096</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console_profiler_listener"/>
          <argument>catch</argument>
        </argument>
        <argument>-2048</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="console_profiler_listener"/>
          <argument>profile</argument>
        </argument>
        <argument>-4096</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageHandledEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager"/>
          <argument>onWorkerMessageHandled</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager"/>
          <argument>onWorkerMessageFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.template_attribute_listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="twig.mailer.message_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.is_granted_attribute_listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>20</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="maker.console_error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="maker.console_error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.decorator" id="controller_resolver" inner="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <tag name="container.decorator" id="argument_resolver" inner="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id=".service_locator.JsBOv4p"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id=".virtual_request_stack"/>
    </service>
    <service id="debug.debug_logger_configurator" class="Symfony\Component\HttpKernel\Log\DebugLoggerConfigurator">
      <argument type="service" id="debug.log_processor"/>
      <argument>%env(bool:default::key:web:default:kernel.runtime_mode:)%</argument>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.attribute"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.attribute.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.attribute.file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.psr4"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.LD5oJC8"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.attribute" class="Symfony\Bundle\FrameworkBundle\Routing\AttributeRouteControllerLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.attribute.directory" class="Symfony\Component\Routing\Loader\AttributeDirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.attribute"/>
    </service>
    <service id="routing.loader.attribute.file" class="Symfony\Component\Routing\Loader\AttributeFileLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.attribute"/>
    </service>
    <service id="routing.loader.psr4" class="Symfony\Component\Routing\Loader\Psr4DirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.bN.V_Nq.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">C:\wamp\www\upgradegnt\var\cache\dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="addExpressionLanguageProvider">
        <argument type="service" id="router.expression_language_provider"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" constructor="fromUri">
      <argument></argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
      <call method="setParameter">
        <argument>_functions</argument>
        <argument type="service" id="router.expression_language_provider" on-invalid="ignore"/>
      </call>
    </service>
    <service id="router.expression_language_provider" class="Symfony\Component\Routing\Matcher\ExpressionLanguageProvider">
      <tag name="routing.expression_language_provider"/>
      <argument type="service" id=".service_locator.Kl0E_Fe"/>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.cUcW89y.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="monolog.logger" channel="request"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>C:\wamp\www\upgradegnt</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>3</argument>
      <argument>2</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>C:\wamp\www\upgradegnt/config/secrets/%env(default:kernel.environment:APP_RUNTIME_ENV)%</argument>
      <argument type="service" id="secrets.decryption_key" on-invalid="ignore"/>
    </service>
    <service id="secrets.decryption_key" class="Symfony\Component\String\LazyString" constructor="fromCallable">
      <argument type="service" id="container.getenv"/>
      <argument>base64:default::SYMFONY_DECRYPTION_SECRET</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>C:\wamp\www\upgradegnt/.env.dev.local</argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" autowire="true">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.mime_message" class="Symfony\Component\Serializer\Normalizer\MimeMessageNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="service" id="serializer.normalizer.property"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer">
      <tag name="serializer.normalizer" priority="-950"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument key="0">true</argument>
      <argument key="translator" type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="serializer.denormalizer.unwrapping" class="Symfony\Component\Serializer\Normalizer\UnwrappingDenormalizer">
      <tag name="serializer.normalizer" priority="1000"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="serializer.normalizer.uid" class="Symfony\Component\Serializer\Normalizer\UidNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
    </service>
    <service id="serializer.normalizer.translatable" class="Symfony\Component\Serializer\Normalizer\TranslatableNormalizer">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="serializer.normalizer.form_error" class="Symfony\Component\Serializer\Normalizer\FormErrorNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
    </service>
    <service id="serializer.normalizer.property" class="Symfony\Component\Serializer\Normalizer\PropertyNormalizer">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AttributeLoader">
            <argument>null</argument>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory">
      <argument type="service" id="serializer.mapping.chain_loader"/>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AttributeLoader">
            <argument>null</argument>
          </service>
        </argument>
      </argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface">
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder">
      <tag name="serializer.encoder"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder">
      <tag name="serializer.encoder"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer">
      <argument type="service" id="debug.serializer"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
        </service>
      </argument>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="serializer.normalizer.backed_enum" class="Symfony\Component\Serializer\Normalizer\BackedEnumNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.phpstan_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.phpstan_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpStanExtractor">
      <tag name="property_info.type_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="web_link.http_header_serializer" class="Symfony\Component\WebLink\HttpHeaderSerializer"/>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="web_link.http_header_serializer"/>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" constructor="createConnection">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" constructor="createConnection">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="session.factory" class="Symfony\Component\HttpFoundation\Session\SessionFactory">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="session.storage.factory.native"/>
      <argument type="collection">
        <argument type="service" id="session_listener"/>
        <argument>onSessionUsage</argument>
      </argument>
    </service>
    <service id="session.storage.factory.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorageFactory">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorageFactory">
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorageFactory">
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
    </service>
    <service id="session.handler.native" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="SessionHandler"/>
      </argument>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
          <argument>null</argument>
        </service>
      </argument>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler">
      <argument type="abstract">A string or a connection object</argument>
      <argument type="collection"/>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.reset" method="reset"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.TpoC7U9"/>
      <argument>true</argument>
      <argument>%session.storage.options%</argument>
    </service>
    <service id="session.marshaller" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\IdentityMarshaller"/>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service">
        <service class="Symfony\Component\Form\ResolvedFormTypeFactory"/>
      </argument>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension">
      <argument type="service" id=".service_locator.mQ6TcDr"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="form.type_extension.form.data_collector"/>
          <argument type="service" id="form.type_extension.form.password_hasher"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\PasswordType" type="iterator">
          <argument type="service" id="form.type_extension.password.password_hasher"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type.color" class="Symfony\Component\Form\Extension\Core\Type\ColorType">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="debug.validator"/>
      <argument>false</argument>
      <argument type="service" id="twig.form.renderer" on-invalid="ignore"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setGroupProviderLocator">
        <argument type="service" id=".service_locator.Xbsa8iG"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>C:\wamp\www\upgradegnt\vendor\symfony\form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAttributeMapping">
        <argument>true</argument>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" constructor="create">
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory">
      <argument type="service" id=".service_locator.F9PKc.7"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionLanguageSyntaxValidator" class="Symfony\Component\Validator\Constraints\ExpressionLanguageSyntaxValidator" abstract="true">
      <tag name="container.excluded" source="in &quot;config/validator.php&quot;"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AllValidator" class="Symfony\Component\Validator\Constraints\AllValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" class="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BicValidator" class="Symfony\Component\Validator\Constraints\BicValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BlankValidator" class="Symfony\Component\Validator\Constraints\BlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CallbackValidator" class="Symfony\Component\Validator\Constraints\CallbackValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CardSchemeValidator" class="Symfony\Component\Validator\Constraints\CardSchemeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ChoiceValidator" class="Symfony\Component\Validator\Constraints\ChoiceValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CidrValidator" class="Symfony\Component\Validator\Constraints\CidrValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CollectionValidator" class="Symfony\Component\Validator\Constraints\CollectionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CompoundValidator" class="Symfony\Component\Validator\Constraints\CompoundValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountValidator" class="Symfony\Component\Validator\Constraints\CountValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountryValidator" class="Symfony\Component\Validator\Constraints\CountryValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CssColorValidator" class="Symfony\Component\Validator\Constraints\CssColorValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CurrencyValidator" class="Symfony\Component\Validator\Constraints\CurrencyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateTimeValidator" class="Symfony\Component\Validator\Constraints\DateTimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateValidator" class="Symfony\Component\Validator\Constraints\DateValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DivisibleByValidator" class="Symfony\Component\Validator\Constraints\DivisibleByValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EmailValidator" class="Symfony\Component\Validator\Constraints\EmailValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EqualToValidator" class="Symfony\Component\Validator\Constraints\EqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" class="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionValidator" class="Symfony\Component\Validator\Constraints\ExpressionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\FileValidator" class="Symfony\Component\Validator\Constraints\FileValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanValidator" class="Symfony\Component\Validator\Constraints\GreaterThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\HostnameValidator" class="Symfony\Component\Validator\Constraints\HostnameValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IbanValidator" class="Symfony\Component\Validator\Constraints\IbanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IdenticalToValidator" class="Symfony\Component\Validator\Constraints\IdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ImageValidator" class="Symfony\Component\Validator\Constraints\ImageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IpValidator" class="Symfony\Component\Validator\Constraints\IpValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsFalseValidator" class="Symfony\Component\Validator\Constraints\IsFalseValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsNullValidator" class="Symfony\Component\Validator\Constraints\IsNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsTrueValidator" class="Symfony\Component\Validator\Constraints\IsTrueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsbnValidator" class="Symfony\Component\Validator\Constraints\IsbnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsinValidator" class="Symfony\Component\Validator\Constraints\IsinValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IssnValidator" class="Symfony\Component\Validator\Constraints\IssnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\JsonValidator" class="Symfony\Component\Validator\Constraints\JsonValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LanguageValidator" class="Symfony\Component\Validator\Constraints\LanguageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LengthValidator" class="Symfony\Component\Validator\Constraints\LengthValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanValidator" class="Symfony\Component\Validator\Constraints\LessThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LocaleValidator" class="Symfony\Component\Validator\Constraints\LocaleValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LuhnValidator" class="Symfony\Component\Validator\Constraints\LuhnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" class="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotBlankValidator" class="Symfony\Component\Validator\Constraints\NotBlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotEqualToValidator" class="Symfony\Component\Validator\Constraints\NotEqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" class="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotNullValidator" class="Symfony\Component\Validator\Constraints\NotNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\PasswordStrengthValidator" class="Symfony\Component\Validator\Constraints\PasswordStrengthValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RangeValidator" class="Symfony\Component\Validator\Constraints\RangeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RegexValidator" class="Symfony\Component\Validator\Constraints\RegexValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\SequentiallyValidator" class="Symfony\Component\Validator\Constraints\SequentiallyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimeValidator" class="Symfony\Component\Validator\Constraints\TimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimezoneValidator" class="Symfony\Component\Validator\Constraints\TimezoneValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TypeValidator" class="Symfony\Component\Validator\Constraints\TypeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UlidValidator" class="Symfony\Component\Validator\Constraints\UlidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UniqueValidator" class="Symfony\Component\Validator\Constraints\UniqueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UrlValidator" class="Symfony\Component\Validator\Constraints\UrlValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UuidValidator" class="Symfony\Component\Validator\Constraints\UuidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ValidValidator" class="Symfony\Component\Validator\Constraints\ValidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\WhenValidator" class="Symfony\Component\Validator\Constraints\WhenValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.validator_expression_language" on-invalid="null"/>
      <call method="registerProvider">
        <argument type="service" id="validator.expression_language_provider" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.validator_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator_expression_language.recorder_inner"/>
    </service>
    <service id="validator.expression_language_provider" class="Symfony\Component\Validator\Constraints\ExpressionLanguageProvider"/>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id=".debug.http_client" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.when" class="Symfony\Component\Validator\Constraints\WhenValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.no_suspicious_characters" class="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator"/>
      <argument type="collection"/>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="messenger.senders_locator" class="Symfony\Component\Messenger\Transport\Sender\SendersLocator">
      <argument type="collection">
        <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage" type="collection">
          <argument>async</argument>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\ChatMessage" type="collection">
          <argument>async</argument>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\SmsMessage" type="collection">
          <argument>async</argument>
        </argument>
      </argument>
      <argument type="service" id=".service_locator.c7f47p7"/>
    </service>
    <service id="messenger.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware" abstract="true">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="messenger.senders_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.transport.symfony_serializer" class="Symfony\Component\Messenger\Transport\Serialization\Serializer">
      <argument type="service" id="debug.serializer"/>
      <argument>json</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.normalizer.flatten_exception" class="Symfony\Component\Messenger\Transport\Serialization\Normalizer\FlattenExceptionNormalizer">
      <tag name="serializer.normalizer" priority="-880"/>
    </service>
    <service id="messenger.transport.native_php_serializer" class="Symfony\Component\Messenger\Transport\Serialization\PhpSerializer"/>
    <service id="messenger.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware" abstract="true">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="abstract">bus handler resolver</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware" abstract="true"/>
    <service id="messenger.middleware.dispatch_after_current_bus" class="Symfony\Component\Messenger\Middleware\DispatchAfterCurrentBusMiddleware"/>
    <service id="messenger.middleware.validation" class="Symfony\Component\Messenger\Middleware\ValidationMiddleware">
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="messenger.middleware.reject_redelivered_message_middleware" class="Symfony\Component\Messenger\Middleware\RejectRedeliveredMessageMiddleware"/>
    <service id="messenger.middleware.failed_message_processing_middleware" class="Symfony\Component\Messenger\Middleware\FailedMessageProcessingMiddleware"/>
    <service id="messenger.middleware.traceable" class="Symfony\Component\Messenger\Middleware\TraceableMiddleware" abstract="true">
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="messenger.middleware.router_context" class="Symfony\Component\Messenger\Middleware\RouterContextMiddleware">
      <argument type="service" id="router.default"/>
    </service>
    <service id="messenger.receiver_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.transport.async"/>
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="messenger.transport.async" type="service_closure" id="messenger.transport.async"/>
        <argument key="messenger.transport.failed" type="service_closure" id="messenger.transport.failed"/>
      </argument>
    </service>
    <service id="messenger.transport_factory" class="Symfony\Component\Messenger\Transport\TransportFactory">
      <argument type="tagged_iterator" tag="messenger.transport_factory"/>
    </service>
    <service id="messenger.transport.amqp.factory" class="Symfony\Component\Messenger\Bridge\Amqp\Transport\AmqpTransportFactory"/>
    <service id="messenger.transport.redis.factory" class="Symfony\Component\Messenger\Bridge\Redis\Transport\RedisTransportFactory"/>
    <service id="messenger.transport.sync.factory" class="Symfony\Component\Messenger\Transport\Sync\SyncTransportFactory">
      <tag name="messenger.transport_factory"/>
      <argument type="service" id="messenger.routable_message_bus"/>
    </service>
    <service id="messenger.transport.in_memory.factory" class="Symfony\Component\Messenger\Transport\InMemory\InMemoryTransportFactory">
      <tag name="messenger.transport_factory"/>
      <tag name="kernel.reset" method="reset"/>
    </service>
    <service id="messenger.transport.sqs.factory" class="Symfony\Component\Messenger\Bridge\AmazonSqs\Transport\AmazonSqsTransportFactory">
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="container.error" message="Invalid service &quot;messenger.transport.sqs.factory&quot;: class &quot;Symfony\Component\Messenger\Bridge\AmazonSqs\Transport\AmazonSqsTransportFactory&quot; does not exist."/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.transport.beanstalkd.factory" class="Symfony\Component\Messenger\Bridge\Beanstalkd\Transport\BeanstalkdTransportFactory"/>
    <service id="messenger.retry_strategy_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.retry.multiplier_retry_strategy.async"/>
        <argument key="failed" type="service_closure" id="messenger.retry.multiplier_retry_strategy.failed"/>
      </argument>
    </service>
    <service id="messenger.retry.abstract_multiplier_retry_strategy" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy" abstract="true">
      <argument type="abstract">max retries</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
    </service>
    <service id="messenger.retry.send_failed_message_for_retry_listener" class="Symfony\Component\Messenger\EventListener\SendFailedMessageForRetryListener">
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id=".service_locator.c7f47p7"/>
      <argument type="service" id="messenger.retry_strategy_locator"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="messenger.failure.add_error_details_stamp_listener" class="Symfony\Component\Messenger\EventListener\AddErrorDetailsStampListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.failure.send_failed_message_to_failure_transport_listener" class="Symfony\Component\Messenger\EventListener\SendFailedMessageToFailureTransportListener">
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id=".service_locator._wyX1Dp"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.listener.dispatch_pcntl_signal_listener" class="Symfony\Component\Messenger\EventListener\DispatchPcntlSignalListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.stop_worker_on_restart_signal_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnRestartSignalListener">
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.listener.stop_worker_signals_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnSignalsListener">
      <tag name="monolog.logger" channel="messenger"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      <deprecated package="6.4" version="symfony/messenger">The "%service_id%" service is deprecated, use the "Symfony\Component\Console\Command\SignalableCommandInterface" instead.</deprecated>
    </service>
    <service id="messenger.listener.stop_worker_on_stop_exception_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnCustomStopExceptionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.reset_services" class="Symfony\Component\Messenger\EventListener\ResetServicesListener">
      <argument type="service" id="services_resetter"/>
    </service>
    <service id="messenger.routable_message_bus" class="Symfony\Component\Messenger\RoutableMessageBus">
      <argument type="service" id=".service_locator.5cAhUFF"/>
      <argument type="service" id="debug.traced.messenger.bus.default"/>
    </service>
    <service id="messenger.redispatch_message_handler" class="Symfony\Component\Messenger\Handler\RedispatchMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="debug.traced.messenger.bus.default"/>
    </service>
    <service id="messenger.transport.async" class="Symfony\Component\Messenger\Transport\TransportInterface">
      <tag name="messenger.receiver" alias="async" is_failure_transport=""/>
      <argument>%env(MESSENGER_TRANSPORT_DSN)%</argument>
      <argument type="collection">
        <argument key="use_notify">true</argument>
        <argument key="check_delayed_interval">60000</argument>
        <argument key="transport_name">async</argument>
      </argument>
      <argument type="service" id="messenger.transport.native_php_serializer"/>
      <factory service="messenger.transport_factory" method="createTransport"/>
    </service>
    <service id="messenger.retry.multiplier_retry_strategy.async" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy">
      <argument>3</argument>
      <argument>1000</argument>
      <argument>2</argument>
      <argument>0</argument>
    </service>
    <service id="messenger.transport.failed" class="Symfony\Component\Messenger\Transport\TransportInterface">
      <tag name="messenger.receiver" alias="failed" is_failure_transport="1"/>
      <argument>doctrine://default?queue_name=failed</argument>
      <argument type="collection">
        <argument key="transport_name">failed</argument>
      </argument>
      <argument type="service" id="messenger.transport.native_php_serializer"/>
      <factory service="messenger.transport_factory" method="createTransport"/>
    </service>
    <service id="messenger.retry.multiplier_retry_strategy.failed" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy">
      <argument>3</argument>
      <argument>1000</argument>
      <argument>2</argument>
      <argument>0</argument>
    </service>
    <service id=".service_locator.c7f47p7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.transport.async"/>
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="messenger.transport.async" type="service_closure" id="messenger.transport.async"/>
        <argument key="messenger.transport.failed" type="service_closure" id="messenger.transport.failed"/>
      </argument>
    </service>
    <service id=".service_locator._wyX1Dp" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.transport.failed"/>
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
      </argument>
    </service>
    <service id="notifier" class="Symfony\Component\Notifier\Notifier">
      <argument type="service" id=".service_locator.0TACwl3"/>
      <argument type="service" id="notifier.channel_policy" on-invalid="ignore"/>
      <call method="addAdminRecipient">
        <argument type="service" id="notifier.admin_recipient.0"/>
      </call>
    </service>
    <service id="notifier.channel_policy" class="Symfony\Component\Notifier\Channel\ChannelPolicy">
      <argument type="collection">
        <argument key="urgent" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="high" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="medium" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="low" type="collection">
          <argument>email</argument>
        </argument>
      </argument>
    </service>
    <service id="notifier.flash_message_importance_mapper" class="Symfony\Component\Notifier\FlashMessage\DefaultFlashMessageImportanceMapper">
      <argument type="collection"/>
    </service>
    <service id="notifier.channel.browser" class="Symfony\Component\Notifier\Channel\BrowserChannel">
      <tag name="notifier.channel" channel="browser"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="notifier.flash_message_importance_mapper"/>
    </service>
    <service id="notifier.channel.chat" class="Symfony\Component\Notifier\Channel\ChatChannel">
      <tag name="notifier.channel" channel="chat"/>
      <argument>null</argument>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="null"/>
    </service>
    <service id="notifier.channel.sms" class="Symfony\Component\Notifier\Channel\SmsChannel">
      <tag name="notifier.channel" channel="sms"/>
      <argument>null</argument>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="null"/>
    </service>
    <service id="notifier.channel.email" class="Symfony\Component\Notifier\Channel\EmailChannel">
      <tag name="notifier.channel" channel="email"/>
      <argument>null</argument>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="null"/>
      <argument>null</argument>
    </service>
    <service id="notifier.channel.push" class="Symfony\Component\Notifier\Channel\PushChannel">
      <tag name="notifier.channel" channel="push"/>
      <argument>null</argument>
      <argument type="service" id="debug.traced.messenger.bus.default" on-invalid="null"/>
    </service>
    <service id="notifier.monolog_handler" class="Symfony\Bridge\Monolog\Handler\NotifierHandler">
      <argument type="service" id="notifier"/>
    </service>
    <service id="notifier.failed_message_listener" class="Symfony\Component\Notifier\EventListener\SendFailedMessageToNotifierListener">
      <argument type="service" id="notifier"/>
    </service>
    <service id="chatter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="chatter.transport_factory" method="fromStrings"/>
    </service>
    <service id="chatter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="chatter.transport_factory"/>
    </service>
    <service id="chatter.messenger.chat_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\ChatMessage"/>
      <argument type="service" id="chatter.transports"/>
    </service>
    <service id="texter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="texter.transport_factory" method="fromStrings"/>
    </service>
    <service id="texter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="texter.transport_factory"/>
    </service>
    <service id="texter.messenger.sms_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\SmsMessage"/>
      <argument type="service" id="texter.transports"/>
    </service>
    <service id="texter.messenger.push_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\PushMessage"/>
      <argument type="service" id="texter.transports"/>
    </service>
    <service id="notifier.notification_logger_listener" class="Symfony\Component\Notifier\EventListener\NotificationLoggerListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="notifier.transport_factory.abstract" class="Symfony\Component\Notifier\Transport\AbstractTransportFactory" abstract="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
    </service>
    <service id="notifier.transport_factory.null" class="Symfony\Component\Notifier\Transport\NullTransportFactory">
      <tag name="chatter.transport_factory"/>
      <tag name="texter.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id=".debug.http_client" on-invalid="ignore"/>
    </service>
    <service id="notifier.admin_recipient.0" class="Symfony\Component\Notifier\Recipient\Recipient">
      <argument>admin@example.com</argument>
      <argument></argument>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="container.private" package="symfony/framework-bundle" version="5.4"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <argument>true</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id=".data_collector.command"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.http_client"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.messenger"/>
      </call>
      <call method="add">
        <argument type="service" id="mailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="notifier.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="serializer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage">
      <argument>file:C:\wamp\www\upgradegnt\var\cache\dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
    </service>
    <service id="console_profiler_listener" class="Symfony\Bundle\FrameworkBundle\EventListener\ConsoleProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".lazy_profiler"/>
      <argument type="service" id=".virtual_request_stack"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument>%env(not:default:kernel.runtime_mode.web:)%</argument>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id=".lazy_profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" lazy="true">
      <argument type="collection">
        <argument type="service" id="profiler"/>
      </argument>
      <factory function="current"/>
    </service>
    <service id=".virtual_request_stack" class="Symfony\Component\HttpKernel\Debug\VirtualRequestStack" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".virtual_request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.request.session_collector" class="Closure">
      <argument type="collection">
        <argument type="service" id="data_collector.request"/>
        <argument>collectSessionUsage</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="tagged_iterator" tag="event_dispatcher.dispatcher" index-by="name" default-index-method="getDefaultNameName" default-priority-method="getDefaultNamePriority"/>
      <argument type="service" id=".virtual_request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/App_KernelDevDebugContainer</argument>
      <argument type="service" id=".virtual_request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="container.hot_path"/>
    </service>
    <service id=".data_collector.command" class="Symfony\Component\Console\DataCollector\CommandDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/command.html.twig" id="command" priority="335"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector" public="true">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
      <call method="addInstance">
        <argument>cache.property_info</argument>
        <argument type="service" id="cache.property_info"/>
      </call>
      <call method="addInstance">
        <argument>cache.asset_mapper</argument>
        <argument type="service" id="cache.asset_mapper"/>
      </call>
      <call method="addInstance">
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument type="service" id="cache.messenger.restart_workers_signal"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator_expression_language</argument>
        <argument type="service" id="cache.validator_expression_language"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.result</argument>
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.query</argument>
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_expression_language</argument>
        <argument type="service" id="cache.security_expression_language"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument type="service" id="cache.security_is_granted_attribute_expression_language"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_token_verifier</argument>
        <argument type="service" id="cache.security_token_verifier"/>
      </call>
    </service>
    <service id="cache_pool_clearer.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\CachePoolClearerCacheWarmer">
      <tag name="kernel.cache_warmer" priority="64"/>
      <argument type="service" id="cache.system_clearer"/>
      <argument type="collection">
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
      </argument>
    </service>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="validator" inner="debug.validator.inner"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="translator.data_collector" class="Symfony\Component\Translation\DataCollectorTranslator">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="data_collector.messenger" class="Symfony\Component\Messenger\DataCollector\MessengerDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/messenger.html.twig" id="messenger" priority="100"/>
      <call method="registerBus">
        <argument>messenger.bus.default</argument>
        <argument type="service" id="debug.traced.messenger.bus.default"/>
      </call>
    </service>
    <service id="mailer.data_collector" class="Symfony\Component\Mailer\DataCollector\MessageDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/mailer.html.twig" id="mailer"/>
      <argument type="service" id="mailer.message_logger_listener"/>
    </service>
    <service id="data_collector.http_client" class="Symfony\Component\HttpClient\DataCollector\HttpClientDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/http_client.html.twig" id="http_client" priority="250"/>
      <call method="registerClient">
        <argument>http_client</argument>
        <argument type="service" id=".debug.http_client"/>
      </call>
    </service>
    <service id="notifier.data_collector" class="Symfony\Component\Notifier\DataCollector\NotificationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/notifier.html.twig" id="notifier"/>
      <argument type="service" id="notifier.notification_logger_listener"/>
    </service>
    <service id="debug.serializer" class="Symfony\Component\Serializer\Debug\TraceableSerializer">
      <tag name="container.decorator" id="serializer" inner="debug.serializer.inner"/>
      <argument type="service" id="debug.serializer.inner"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id="serializer.data_collector" class="Symfony\Component\Serializer\DataCollector\SerializerDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/serializer.html.twig" id="serializer"/>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <argument>true</argument>
      <argument type="service" id="doctrine.debug_data_holder" on-invalid="null"/>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
      <argument type="service" id="doctrine.dbal.connection_factory.dsn_parser"/>
    </service>
    <service id="doctrine.dbal.connection_factory.dsn_parser" class="Doctrine\DBAL\Tools\DsnParser">
      <argument type="collection">
        <argument key="db2">ibm_db2</argument>
        <argument key="mssql">pdo_sqlsrv</argument>
        <argument key="mysql">pdo_mysql</argument>
        <argument key="mysql2">pdo_mysql</argument>
        <argument key="postgres">pdo_pgsql</argument>
        <argument key="postgresql">pdo_pgsql</argument>
        <argument key="pgsql">pdo_pgsql</argument>
        <argument key="sqlite">pdo_sqlite</argument>
        <argument key="sqlite3">pdo_sqlite</argument>
      </argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" class="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand">
      <tag name="console.command" command="dbal:run-sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>dbal:run-sql</argument>
      </call>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Controller\ProfilerController" class="Doctrine\Bundle\DoctrineBundle\Controller\ProfilerController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="profiler"/>
    </service>
    <service id="doctrine.dbal.default_schema_manager_factory" class="Doctrine\DBAL\Schema\DefaultSchemaManagerFactory"/>
    <service id="doctrine.dbal.legacy_schema_manager_factory" class="Doctrine\DBAL\Schema\LegacySchemaManagerFactory"/>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration">
      <call method="setSchemaManagerFactory">
        <argument type="service" id="doctrine.dbal.legacy_schema_manager_factory"/>
      </call>
      <call method="setSchemaAssetsFilter">
        <argument type="service" id="doctrine.dbal.default_schema_asset_filter_manager"/>
      </call>
      <call method="setMiddlewares">
        <argument type="collection">
          <argument type="service" id="doctrine.dbal.logging_middleware.default"/>
          <argument type="service" id="doctrine.dbal.debug_middleware.default"/>
        </argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager">
      <argument type="service" id=".service_locator.MfxSDRP"/>
      <argument type="collection">
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.messenger.doctrine_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>onSchemaCreateTable</argument>
          </argument>
          <argument>doctrine.orm.messenger.doctrine_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.doctrine_token_provider_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.pdo_session_handler_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.lock_store_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>loadClassMetadata</argument>
          </argument>
          <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>onFlush</argument>
          </argument>
          <argument>turbo.doctrine.event_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postFlush</argument>
          </argument>
          <argument>turbo.doctrine.event_listener</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="url">%env(resolve:DATABASE_URL)%</argument>
        <argument key="use_savepoints">true</argument>
        <argument key="driver">pdo_mysql</argument>
        <argument key="idle_connection_ttl">600</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <call method="setNestTransactionsWithSavepoints">
        <argument>true</argument>
      </call>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" class="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider">
      <argument type="service">
        <service class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
          <tag name="kernel.reset" method="reset"/>
          <argument type="service" id="service_container"/>
          <argument>%doctrine.connections%</argument>
          <argument>%doctrine.entity_managers%</argument>
          <argument>default</argument>
          <argument>default</argument>
        </service>
      </argument>
    </service>
    <service id="doctrine.dbal.connection_expiries" class="ArrayObject"/>
    <service id="doctrine.dbal.logging_middleware" class="Doctrine\DBAL\Logging\Middleware" abstract="true">
      <tag name="monolog.logger" channel="doctrine"/>
      <tag name="doctrine.middleware" connection="default" priority="10"/>
      <argument type="service" id="monolog.logger.doctrine"/>
    </service>
    <service id="doctrine.debug_data_holder" class="Doctrine\Bundle\DoctrineBundle\Middleware\BacktraceDebugDataHolder">
      <tag name="kernel.reset" method="reset"/>
      <argument type="collection">
        <argument>default</argument>
      </argument>
    </service>
    <service id="doctrine.dbal.debug_middleware" class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware" abstract="true">
      <tag name="doctrine.middleware" connection="default" priority="10"/>
      <argument type="service" id="doctrine.debug_data_holder"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="messenger.middleware.doctrine_transaction" class="Symfony\Bridge\Doctrine\Messenger\DoctrineTransactionMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_ping_connection" class="Symfony\Bridge\Doctrine\Messenger\DoctrinePingConnectionMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_close_connection" class="Symfony\Bridge\Doctrine\Messenger\DoctrineCloseConnectionMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_open_transaction_logger" class="Symfony\Bridge\Doctrine\Messenger\DoctrineOpenTransactionLoggerMiddleware" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="doctrine.orm.messenger.event_subscriber.doctrine_clear_entity_manager" class="Symfony\Bridge\Doctrine\Messenger\DoctrineClearEntityManagerWorkerSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.transport.doctrine.factory" class="Symfony\Component\Messenger\Bridge\Doctrine\Transport\DoctrineTransportFactory">
      <tag name="messenger.transport_factory"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.messenger.doctrine_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\MessengerTransportDoctrineSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <tag name="doctrine.event_listener" event="onSchemaCreateTable"/>
      <argument type="tagged_iterator" tag="messenger.receiver"/>
    </service>
    <service id=".1_ServiceLocator~XF1Dx2v" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true"/>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory">
      <argument type="service" id=".service_locator.RrKXv4I"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener"/>
    <service id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\DoctrineDbalCacheAdapterSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.listeners.doctrine_token_provider_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\RememberMeTokenProviderDoctrineSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="tagged_iterator" tag="security.remember_me_handler"/>
    </service>
    <service id="doctrine.orm.listeners.pdo_session_handler_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\PdoSessionHandlerSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="service" id="session.handler.native"/>
    </service>
    <service id="doctrine.orm.listeners.lock_store_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\LockStoreSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="tagged_iterator" tag="lock.store"/>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy"/>
    <service id="doctrine.orm.typed_field_mapper.default" class="Doctrine\ORM\Mapping\DefaultTypedFieldMapper"/>
    <service id="doctrine.ulid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UlidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.uuid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UuidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.orm.command.entity_manager_provider" class="Doctrine\Bundle\DoctrineBundle\Orm\ManagerRegistryAwareEntityManagerProvider">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.entity_value_resolver" class="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver">
      <tag name="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver" priority="110">controller.argument_value_resolver</tag>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="doctrine.orm.entity_value_resolver.expression_language" on-invalid="ignore"/>
    </service>
    <service id="doctrine.orm.entity_value_resolver.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\MetadataCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\QueryCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\ResultCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\CollectionRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\CreateCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\DropCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\EntityRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\ORM\Tools\Console\Command\InfoCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\QueryRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\ORM\Tools\Console\Command\RunDqlCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\UpdateCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\ORM\Tools\Console\Command\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration">
      <tag name="doctrine.orm.configuration"/>
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCache">
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCache">
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCache">
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id=".doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>C:\wamp\www\upgradegnt\var\cache\dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setSchemaIgnoreClasses">
        <argument type="collection"/>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\Bundle\DoctrineBundle\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore_number_aware"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setTypedFieldMapper">
        <argument type="service" id="doctrine.orm.typed_field_mapper.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setLazyGhostObjectEnabled">
        <argument>true</argument>
      </call>
      <call method="setIdentityGenerationPreferences">
        <argument type="collection"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_attribute_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AttributeDriver">
      <argument type="collection">
        <argument>C:\wamp\www\upgradegnt\src\Entity</argument>
      </argument>
      <argument>true</argument>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.result.recorder_inner"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.query.recorder_inner"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <tag name="container.preload" class="Doctrine\ORM\Proxy\Autoloader"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.migrations.dependency_factory" class="Doctrine\Migrations\DependencyFactory" constructor="fromEntityManager">
      <argument type="service" id="doctrine.migrations.configuration_loader"/>
      <argument type="service" id="doctrine.migrations.entity_manager_registry_loader"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <call method="setDefinition">
        <argument>Doctrine\Migrations\Version\MigrationFactory</argument>
        <argument type="service_closure" id="doctrine.migrations.container_aware_migrations_factory"/>
      </call>
    </service>
    <service id="doctrine.migrations.configuration_loader" class="Doctrine\Migrations\Configuration\Migration\ExistingConfiguration">
      <argument type="service" id="doctrine.migrations.configuration"/>
    </service>
    <service id="doctrine.migrations.connection_loader" class="Doctrine\Migrations\Configuration\Connection\ExistingConnection"/>
    <service id="doctrine.migrations.em_loader" class="Doctrine\Migrations\Configuration\EntityManager\ExistingEntityManager"/>
    <service id="doctrine.migrations.entity_manager_registry_loader" class="Doctrine\Migrations\Configuration\EntityManager\ManagerRegistryEntityManager" constructor="withSimpleDefault">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.migrations.connection_registry_loader" class="Doctrine\Migrations\Configuration\Connection\ConnectionRegistryConnection" constructor="withSimpleDefault">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.migrations.configuration" class="Doctrine\Migrations\Configuration\Configuration">
      <call method="addMigrationsDirectory">
        <argument>DoctrineMigrations</argument>
        <argument>C:\wamp\www\upgradegnt/migrations</argument>
      </call>
      <call method="setAllOrNothing">
        <argument>false</argument>
      </call>
      <call method="setCheckDatabasePlatform">
        <argument>true</argument>
      </call>
      <call method="setTransactional">
        <argument>true</argument>
      </call>
      <call method="setMetadataStorageConfiguration">
        <argument type="service" id="doctrine.migrations.storage.table_storage"/>
      </call>
    </service>
    <service id="doctrine.migrations.container_aware_migrations_factory" class="Doctrine\Bundle\MigrationsBundle\MigrationsFactory\ContainerAwareMigrationFactory">
      <tag name="container.decorator" id="doctrine.migrations.migrations_factory" inner="doctrine.migrations.container_aware_migrations_factory.inner"/>
      <argument type="service" id="doctrine.migrations.container_aware_migrations_factory.inner"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Migrations\Tools\Console\Command\DiffCommand">
      <tag name="console.command" command="doctrine:migrations:diff"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:diff</argument>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
      <call method="setDescription">
        <argument>Generate a migration by comparing your current database to your mapping information.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.sync_metadata_command" class="Doctrine\Migrations\Tools\Console\Command\SyncMetadataCommand">
      <tag name="console.command" command="doctrine:migrations:sync-metadata-storage"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:sync-metadata-storage</argument>
      <call method="setName">
        <argument>doctrine:migrations:sync-metadata-storage</argument>
      </call>
      <call method="setDescription">
        <argument>Ensures that the metadata storage is at the latest version.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.versions_command" class="Doctrine\Migrations\Tools\Console\Command\ListCommand">
      <tag name="console.command" command="doctrine:migrations:list"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:versions</argument>
      <call method="setName">
        <argument>doctrine:migrations:list</argument>
      </call>
      <call method="setDescription">
        <argument>Display a list of all available migrations and their status.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.current_command" class="Doctrine\Migrations\Tools\Console\Command\CurrentCommand">
      <tag name="console.command" command="doctrine:migrations:current"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:current</argument>
      <call method="setName">
        <argument>doctrine:migrations:current</argument>
      </call>
      <call method="setDescription">
        <argument>Outputs the current version</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Migrations\Tools\Console\Command\DumpSchemaCommand">
      <tag name="console.command" command="doctrine:migrations:dump-schema"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:dump-schema</argument>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the schema for your database to a migration.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Migrations\Tools\Console\Command\ExecuteCommand">
      <tag name="console.command" command="doctrine:migrations:execute"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:execute</argument>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
      <call method="setDescription">
        <argument>Execute one or more migration versions up or down manually.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Migrations\Tools\Console\Command\GenerateCommand">
      <tag name="console.command" command="doctrine:migrations:generate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:generate</argument>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
      <call method="setDescription">
        <argument>Generate a blank migration class.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Migrations\Tools\Console\Command\LatestCommand">
      <tag name="console.command" command="doctrine:migrations:latest"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:latest</argument>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
      <call method="setDescription">
        <argument>Outputs the latest version</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Migrations\Tools\Console\Command\MigrateCommand">
      <tag name="console.command" command="doctrine:migrations:migrate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:migrate</argument>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
      <call method="setDescription">
        <argument>Execute a migration to a specified version or the latest available version.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Migrations\Tools\Console\Command\RollupCommand">
      <tag name="console.command" command="doctrine:migrations:rollup"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:rollup</argument>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
      <call method="setDescription">
        <argument>Rollup migrations by deleting all tracked versions and insert the one version that exists.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Migrations\Tools\Console\Command\StatusCommand">
      <tag name="console.command" command="doctrine:migrations:status"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:status</argument>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
      <call method="setDescription">
        <argument>View the status of a set of migrations.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Migrations\Tools\Console\Command\UpToDateCommand">
      <tag name="console.command" command="doctrine:migrations:up-to-date"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:up-to-date</argument>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
      <call method="setDescription">
        <argument>Tells you if your schema is up-to-date.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Migrations\Tools\Console\Command\VersionCommand">
      <tag name="console.command" command="doctrine:migrations:version"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:version</argument>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
      <call method="setDescription">
        <argument>Manually add and delete migration versions from the version table.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.schema_filter_listener" class="Doctrine\Bundle\MigrationsBundle\EventListener\SchemaFilterListener">
      <tag name="doctrine.dbal.schema_filter"/>
      <tag name="kernel.event_listener" event="console.command" method="onConsoleCommand"/>
      <tag name="container.no_preload"/>
      <argument>doctrine_migration_versions</argument>
    </service>
    <service id="doctrine.migrations.storage.table_storage" class="Doctrine\Migrations\Metadata\Storage\TableMetadataStorageConfiguration"/>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector" public="true">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument type="service" id=".virtual_request_stack"/>
      <argument type="service" id="var_dumper.server_connection"/>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.contextualized_cli_dumper"/>
      <argument type="service" id="var_dumper.server_connection"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner" public="true">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMinDepth">
        <argument>1</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
      <call method="addCasters">
        <argument type="collection">
          <argument key="Closure">Symfony\Component\VarDumper\Caster\ReflectionCaster::unsetClosureFileInfo</argument>
        </argument>
      </call>
    </service>
    <service id="var_dumper.contextualized_cli_dumper" class="Symfony\Component\VarDumper\Dumper\ContextualizedDumper">
      <tag name="container.decorator" id="var_dumper.cli_dumper" inner="var_dumper.contextualized_cli_dumper.inner"/>
      <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
      <argument type="collection">
        <argument key="source" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider">
            <argument>UTF-8</argument>
            <argument>C:\wamp\www\upgradegnt</argument>
            <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="var_dumper.server_connection" class="Symfony\Component\VarDumper\Server\Connection">
      <argument>tcp://%env(VAR_DUMPER_SERVER)%</argument>
      <argument type="collection">
        <argument key="source" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider">
            <argument>UTF-8</argument>
            <argument>C:\wamp\www\upgradegnt</argument>
            <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
          </service>
        </argument>
        <argument key="request" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\RequestContextProvider">
            <argument type="service" id="request_stack"/>
          </service>
        </argument>
        <argument key="cli" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\CliContextProvider"/>
        </argument>
      </argument>
    </service>
    <service id="var_dumper.dump_server" class="Symfony\Component\VarDumper\Server\DumpServer">
      <tag name="monolog.logger" channel="debug"/>
      <argument>tcp://%env(VAR_DUMPER_SERVER)%</argument>
      <argument type="service" id="monolog.logger.debug" on-invalid="null"/>
    </service>
    <service id="var_dumper.command.server_dump" class="Symfony\Component\VarDumper\Command\ServerDumpCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="var_dumper.dump_server"/>
      <argument type="collection">
        <argument key="cli" type="service">
          <service class="Symfony\Component\VarDumper\Command\Descriptor\CliDescriptor">
            <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
          </service>
        </argument>
        <argument key="html" type="service">
          <service class="Symfony\Component\VarDumper\Command\Descriptor\HtmlDescriptor">
            <argument type="service" id="var_dumper.html_dumper"/>
          </service>
        </argument>
      </argument>
      <call method="setName">
        <argument>server:dump</argument>
      </call>
      <call method="setDescription">
        <argument>Start a dump server that collects and displays dumps in a single place</argument>
      </call>
    </service>
    <service id="monolog.command.server_log" class="Symfony\Bridge\Monolog\Command\ServerLogCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>server:log</argument>
      </call>
      <call method="setDescription">
        <argument>Start a log server that displays logs in real time</argument>
      </call>
    </service>
    <service id="twig" class="Twig\Environment">
      <tag name="container.preload" class="Twig\Cache\FilesystemCache"/>
      <tag name="container.preload" class="Twig\Extension\CoreExtension"/>
      <tag name="container.preload" class="Twig\Extension\EscaperExtension"/>
      <tag name="container.preload" class="Twig\Extension\OptimizerExtension"/>
      <tag name="container.preload" class="Twig\Extension\StagingExtension"/>
      <tag name="container.preload" class="Twig\ExtensionSet"/>
      <tag name="container.preload" class="Twig\Template"/>
      <tag name="container.preload" class="Twig\TemplateWrapper"/>
      <tag name="kernel.reset" method="resetGlobals"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="autoescape">name</argument>
        <argument key="cache">C:\wamp\www\upgradegnt\var\cache\dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.importmap"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\Twig\Compos"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\Twig\Composarabe"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\Twig\Notes"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\Twig\Notesarabe"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="stimulus.ux_controllers_twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="turbo.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="stimulus.twig_extension"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="registerUndefinedFilterCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFilter</argument>
        </argument>
      </call>
      <call method="registerUndefinedFunctionCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFunction</argument>
        </argument>
      </call>
      <call method="registerUndefinedTokenParserCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestTag</argument>
        </argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
      <call method="setLocaleSwitcher">
        <argument type="service" id="translation.locale_switcher" on-invalid="ignore"/>
      </call>
      <call method="setEnabledLocales">
        <argument type="collection"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator">
      <argument type="service" id="kernel"/>
      <argument type="collection">
        <argument key="C:\wamp\www\upgradegnt\vendor\symfony\twig-bridge/Resources/views/Email">email</argument>
        <argument key="C:\wamp\www\upgradegnt\vendor\symfony\twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>C:\wamp\www\upgradegnt/templates</argument>
      <argument type="collection">
        <argument>*.twig</argument>
      </argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.etVElvN.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>C:\wamp\www\upgradegnt</argument>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\doctrine\doctrine-bundle/templates</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\doctrine\doctrine-bundle/templates</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\doctrine\doctrine-migrations-bundle/templates</argument>
        <argument>DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\doctrine\doctrine-migrations-bundle/templates</argument>
        <argument>!DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\debug-bundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\debug-bundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt/templates/bundles/TwigBundle</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt/templates/bundles/TwigBundle</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\ux-turbo/templates</argument>
        <argument>Turbo</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\ux-turbo/templates</argument>
        <argument>!Turbo</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\maker-bundle/templates</argument>
        <argument>Maker</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\maker-bundle/templates</argument>
        <argument>!Maker</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt/templates</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\twig-bridge/Resources/views/Email</argument>
        <argument>email</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\twig-bridge/Resources/views/Email</argument>
        <argument>!email</argument>
      </call>
      <call method="addPath">
        <argument>C:\wamp\www\upgradegnt\vendor\symfony\twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>C:\wamp\www\upgradegnt</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.htmlsanitizer" class="Symfony\Bridge\Twig\Extension\HtmlSanitizerExtension">
      <argument type="service" id=".service_locator.Xbsa8iG"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
      <argument type="service" id="fragment.uri_generator" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension"/>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader">
      <argument type="service" id=".service_locator.i0..Ry2"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service">
        <service class="bool">
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="twig.runtime.serializer" class="Symfony\Bridge\Twig\Extension\SerializerRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="debug.serializer"/>
    </service>
    <service id="twig.extension.serializer" class="Symfony\Bridge\Twig\Extension\SerializerExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="controller.template_attribute_listener" class="Symfony\Bridge\Twig\EventListener\TemplateAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine">
      <tag name="kernel.reset" method="reset"/>
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument>C:\wamp\www\upgradegnt</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>C:\wamp\www\upgradegnt/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Show a list of twig functions, filters, globals and tests</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument>*.twig</argument>
      </argument>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a Twig template and outputs encountered errors</argument>
      </call>
    </service>
    <service id="twig.mailer.message_listener" class="Symfony\Component\Mailer\EventListener\MessageListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service" id="twig.mime_body_renderer"/>
    </service>
    <service id="twig.mime_body_renderer" class="Symfony\Bridge\Twig\Mime\BodyRenderer">
      <argument key="0" type="service" id="twig"/>
      <argument key="localeSwitcher" type="service" id="translation.locale_switcher" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.importmap" class="Symfony\Bridge\Twig\Extension\ImportMapRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="asset_mapper.importmap.renderer"/>
    </service>
    <service id="twig.extension.importmap" class="Symfony\Bridge\Twig\Extension\ImportMapExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>C:\wamp\www\upgradegnt</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>null</argument>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
    </service>
    <service id="web_profiler.controller.exception_panel" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionPanelController" public="true">
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id="profiler" on-invalid="null"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler">
      <argument type="service">
        <service class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator"/>
      </argument>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service">
        <service class="Symfony\Component\VarDumper\Dumper\HtmlDumper">
          <argument>null</argument>
          <argument>UTF-8</argument>
          <argument>1</argument>
          <call method="setDisplayOptions">
            <argument type="collection">
              <argument key="maxStringLength">4096</argument>
              <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/((index|app(_[\w]+)?)\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument type="service" id="data_collector.dump" on-invalid="ignore"/>
    </service>
    <service id="stimulus.helper" class="Symfony\UX\StimulusBundle\Helper\StimulusHelper">
      <argument type="service" id="twig" on-invalid="null"/>
    </service>
    <service id="stimulus.twig_extension" class="Symfony\UX\StimulusBundle\Twig\StimulusTwigExtension">
      <tag name="twig.extension" priority="-10"/>
      <argument type="service" id="stimulus.helper"/>
    </service>
    <service id="stimulus.asset_mapper.ux_package_reader" class="Symfony\UX\StimulusBundle\Ux\UxPackageReader">
      <argument>C:\wamp\www\upgradegnt</argument>
    </service>
    <service id="stimulus.ux_controllers_twig_extension" class="Symfony\UX\StimulusBundle\Twig\UxControllersTwigExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="stimulus.ux_controllers_twig_runtime" class="Symfony\UX\StimulusBundle\Twig\UxControllersTwigRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="stimulus.asset_mapper.controllers_map_generator"/>
      <argument type="service" id="asset_mapper"/>
      <argument type="service" id="stimulus.asset_mapper.ux_package_reader"/>
      <argument>C:\wamp\www\upgradegnt</argument>
    </service>
    <service id="stimulus.asset_mapper.controllers_map_generator" class="Symfony\UX\StimulusBundle\AssetMapper\ControllersMapGenerator">
      <argument type="service" id="asset_mapper"/>
      <argument type="service" id="stimulus.asset_mapper.ux_package_reader"/>
      <argument type="collection">
        <argument>C:\wamp\www\upgradegnt/assets/controllers</argument>
      </argument>
      <argument>C:\wamp\www\upgradegnt/assets/controllers.json</argument>
      <argument type="service" id="stimulus.asset_mapper.auto_import_locator" on-invalid="null"/>
    </service>
    <service id="stimulus.asset_mapper.auto_import_locator" class="Symfony\UX\StimulusBundle\AssetMapper\AutoImportLocator">
      <argument type="service" id="asset_mapper.importmap.config_reader"/>
      <argument type="service" id="asset_mapper"/>
    </service>
    <service id="stimulus.asset_mapper.loader_javascript_compiler" class="Symfony\UX\StimulusBundle\AssetMapper\StimulusLoaderJavaScriptCompiler">
      <tag name="asset_mapper.compiler" priority="100"/>
      <argument type="service" id="stimulus.asset_mapper.controllers_map_generator"/>
      <argument>true</argument>
    </service>
    <service id="turbo.id_accessor" class="Symfony\UX\Turbo\Broadcaster\IdAccessor">
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <argument type="service" id="doctrine" on-invalid="null"/>
    </service>
    <service id="turbo.broadcaster.action_renderer" class="Symfony\UX\Turbo\Broadcaster\TwigBroadcaster">
      <tag name="container.decorator" id="turbo.broadcaster.imux" inner="turbo.broadcaster.action_renderer.inner"/>
      <argument type="service" id="turbo.broadcaster.action_renderer.inner"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="App\Entity\">broadcast/</argument>
      </argument>
      <argument type="service" id="turbo.id_accessor"/>
    </service>
    <service id="turbo.twig.extension" class="Symfony\UX\Turbo\Twig\TwigExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="turbo.twig.runtime" class="Symfony\UX\Turbo\Twig\TurboRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id=".service_locator.Xbsa8iG"/>
      <argument>default</argument>
    </service>
    <service id="turbo.doctrine.event_listener" class="Symfony\UX\Turbo\Doctrine\BroadcastListener">
      <tag name="doctrine.event_listener" event="onFlush"/>
      <tag name="doctrine.event_listener" event="postFlush"/>
      <argument type="service" id="turbo.broadcaster.action_renderer"/>
      <argument>null</argument>
    </service>
    <service id="turbo.kernel.request_listener" class="Symfony\UX\Turbo\Request\RequestListener">
      <tag name="kernel.event_listener" event="kernel.request" priority="256"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="twig.missing_extension_suggestor" class="Twig\Extra\TwigExtraBundle\MissingExtensionSuggestor"/>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.LcVn9Hr"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.helper" class="Symfony\Bundle\SecurityBundle\Security">
      <argument type="service" id=".service_locator.e_.xxAP"/>
      <argument type="collection">
        <argument key="dev">null</argument>
        <argument key="main" type="service" id=".service_locator.qlpi89Y"/>
      </argument>
    </service>
    <service id="security.user_value_resolver" class="Symfony\Component\Security\Http\Controller\UserValueResolver">
      <tag priority="120" name="Symfony\Component\Security\Http\Controller\UserValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.security_token_value_resolver" class="Symfony\Component\Security\Http\Controller\SecurityTokenValueResolver">
      <tag priority="120" name="Symfony\Component\Security\Http\Controller\SecurityTokenValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver"/>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>migrate</argument>
      <argument type="service" id="security.csrf.token_storage" on-invalid="ignore"/>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>none</argument>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\InMemoryUserChecker"/>
    <service id="security.user_checker_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="main" type="service_closure" id="security.user_checker"/>
      </argument>
    </service>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage">
      <argument type="service" id="cache.security_expression_language" on-invalid="null"/>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.impersonate_url_generator" class="Symfony\Component\Security\Http\Impersonate\ImpersonateUrlGenerator">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap">
      <argument type="service" id=".service_locator.zJyh7qS"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.kLbKLHa"/>
        <argument key="security.firewall.map.context.main">null</argument>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" abstract="true">
      <argument type="abstract">name</argument>
      <argument type="abstract">user_checker</argument>
      <argument type="abstract">request_matcher</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>main</argument>
        <argument>security_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.route_loader.logout" class="Symfony\Bundle\SecurityBundle\Routing\LogoutRouteLoader">
      <tag name="routing.route_loader"/>
      <argument type="collection"/>
      <argument>security.logout_uris</argument>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" abstract="true">
      <argument type="abstract">firewall</argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" abstract="true">
      <argument type="abstract">security.ldap.ldap</argument>
      <argument type="abstract">base dn</argument>
      <argument type="abstract">search dn</argument>
      <argument type="abstract">search password</argument>
      <argument type="abstract">default_roles</argument>
      <argument type="abstract">uid key</argument>
      <argument type="abstract">filter</argument>
      <argument type="abstract">password_attribute</argument>
      <argument type="abstract">extra_fields (email etc)</argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>{^https://%%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_expression_language.recorder_inner"/>
    </service>
    <service id="controller.is_granted_attribute_listener" class="Symfony\Component\Security\Http\EventListener\IsGrantedAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.is_granted_attribute_expression_language" on-invalid="null"/>
    </service>
    <service id="security.is_granted_attribute_expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="null"/>
    </service>
    <service id="cache.security_is_granted_attribute_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_is_granted_attribute_expression_language.recorder_inner"/>
    </service>
    <service id="security.password_hasher_factory" class="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory">
      <argument type="collection">
        <argument key="Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" type="collection">
          <argument key="class">Symfony\Component\PasswordHasher\Hasher\NativePasswordHasher</argument>
          <argument key="arguments" type="collection">
            <argument>null</argument>
            <argument>null</argument>
            <argument>null</argument>
            <argument>2y</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_hasher" class="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher">
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="form.listener.password_hasher" class="Symfony\Component\Form\Extension\PasswordHasher\EventListener\PasswordHasherListener">
      <argument type="service" id="security.user_password_hasher"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="form.type_extension.form.password_hasher" class="Symfony\Component\Form\Extension\PasswordHasher\Type\FormTypePasswordHasherExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="form.listener.password_hasher"/>
    </service>
    <service id="form.type_extension.password.password_hasher" class="Symfony\Component\Form\Extension\PasswordHasher\Type\PasswordTypePasswordHasherExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\PasswordType"/>
      <argument type="service" id="form.listener.password_hasher"/>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap"/>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.sakkane"/>
      </argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">event dispatcher</argument>
      <argument type="collection"/>
    </service>
    <service id="security.logout.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener" abstract="true"/>
    <service id="security.logout.listener.clear_site_data" class="Symfony\Component\Security\Http\EventListener\ClearSiteDataLogoutListener" abstract="true"/>
    <service id="security.logout.listener.cookie_clearing" class="Symfony\Component\Security\Http\EventListener\CookieClearingLogoutListener" abstract="true"/>
    <service id="security.logout.listener.default" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">target url</argument>
    </service>
    <service id="security.authentication.listener.abstract" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" abstract="true">
      <argument type="abstract">The custom success handler service</argument>
      <argument type="collection"/>
      <argument type="abstract">Provider-shared Key</argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" abstract="true">
      <argument type="abstract">The custom failure handler service</argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">User Checker</argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="abstract">Target Route</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.event_dispatcher_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="main" type="service_closure" id="debug.security.event_dispatcher.main"/>
      </argument>
    </service>
    <service id="security.authenticator.manager" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">authenticators</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="abstract">provider key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="abstract">required badges</argument>
    </service>
    <service id="security.authenticator.managers_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="main" type="service_closure" id="security.authenticator.manager.main"/>
      </argument>
    </service>
    <service id="security.user_authenticator" class="Symfony\Bundle\SecurityBundle\Security\UserAuthenticator">
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.authenticator.managers_locator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.firewall.authenticator" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener" abstract="true">
      <argument type="abstract">authenticator manager</argument>
    </service>
    <service id="security.listener.check_authenticator_credentials" class="Symfony\Component\Security\Http\EventListener\CheckCredentialsListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.listener.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="1024" method="checkPassport"/>
      <argument type="service" id="security.user.provider.concrete.sakkane"/>
    </service>
    <service id="security.listener.user_provider.abstract" class="Symfony\Component\Security\Http\EventListener\UserProviderListener" abstract="true">
      <argument type="abstract">user provider</argument>
    </service>
    <service id="security.listener.password_migrating" class="Symfony\Component\Security\Http\EventListener\PasswordMigratingListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.listener.user_checker" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener" abstract="true">
      <argument type="abstract">user checker</argument>
    </service>
    <service id="security.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionStrategyListener" abstract="true">
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.listener.login_throttling" class="Symfony\Component\Security\Http\EventListener\LoginThrottlingListener" abstract="true">
      <argument type="service" id="request_stack"/>
      <argument type="abstract">request rate limiter</argument>
    </service>
    <service id="security.authenticator.http_basic" class="Symfony\Component\Security\Http\Authenticator\HttpBasicAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">realm name</argument>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.form_login" class="Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">user provider</argument>
      <argument type="abstract">authentication success handler</argument>
      <argument type="abstract">authentication failure handler</argument>
      <argument type="abstract">options</argument>
    </service>
    <service id="security.authenticator.json_login" class="Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">user provider</argument>
      <argument type="abstract">authentication success handler</argument>
      <argument type="abstract">authentication failure handler</argument>
      <argument type="abstract">options</argument>
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
      </call>
    </service>
    <service id="security.authenticator.x509" class="Symfony\Component\Security\Http\Authenticator\X509Authenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">firewall name</argument>
      <argument type="abstract">user key</argument>
      <argument type="abstract">credentials key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="abstract">credentials user identifier</argument>
    </service>
    <service id="security.authenticator.remote_user" class="Symfony\Component\Security\Http\Authenticator\RemoteUserAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">firewall name</argument>
      <argument type="abstract">user key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_token_extractor.header" class="Symfony\Component\Security\Http\AccessToken\HeaderAccessTokenExtractor"/>
    <service id="security.access_token_extractor.query_string" class="Symfony\Component\Security\Http\AccessToken\QueryAccessTokenExtractor"/>
    <service id="security.access_token_extractor.request_body" class="Symfony\Component\Security\Http\AccessToken\FormEncodedBodyExtractor"/>
    <service id="security.authenticator.access_token" class="Symfony\Component\Security\Http\Authenticator\AccessTokenAuthenticator" abstract="true">
      <argument type="abstract">access token handler</argument>
      <argument type="abstract">access token extractor</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authenticator.access_token.chain_extractor" class="Symfony\Component\Security\Http\AccessToken\ChainAccessTokenExtractor" abstract="true">
      <argument type="abstract">access token extractors</argument>
    </service>
    <service id="security.access_token_handler.oidc_user_info.http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface" abstract="true">
      <argument type="abstract">http client options</argument>
      <factory service=".debug.http_client" method="withOptions"/>
    </service>
    <service id="security.access_token_handler.oidc_user_info" class="Symfony\Component\Security\Http\AccessToken\Oidc\OidcUserInfoTokenHandler" abstract="true">
      <argument type="abstract">http client</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument type="abstract">claim</argument>
    </service>
    <service id="security.access_token_handler.oidc" class="Symfony\Component\Security\Http\AccessToken\Oidc\OidcTokenHandler" abstract="true">
      <argument type="abstract">signature algorithm</argument>
      <argument type="abstract">signature key</argument>
      <argument type="abstract">audience</argument>
      <argument type="abstract">issuers</argument>
      <argument>sub</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument type="service" id="clock"/>
    </service>
    <service id="security.access_token_handler.oidc.jwk" class="Jose\Component\Core\JWK" constructor="createFromJson" abstract="true">
      <argument type="abstract">signature key</argument>
    </service>
    <service id="security.access_token_handler.oidc.signature" class="Jose\Component\Core\Algorithm" abstract="true">
      <argument type="abstract">signature algorithm</argument>
      <factory class="Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SignatureAlgorithmFactory" method="create"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.ES256" class="Jose\Component\Signature\Algorithm\ES256">
      <argument>ES256</argument>
      <factory class="Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SignatureAlgorithmFactory" method="create"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.ES384" class="Jose\Component\Signature\Algorithm\ES384">
      <argument>ES384</argument>
      <factory class="Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SignatureAlgorithmFactory" method="create"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.ES512" class="Jose\Component\Signature\Algorithm\ES512">
      <argument>ES512</argument>
      <factory class="Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SignatureAlgorithmFactory" method="create"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
      <argument type="service" id="security.impersonate_url_generator" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager">
      <tag name="container.decorator" id="security.access.decision_manager" inner="debug.security.access.decision_manager.inner"/>
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener">
      <tag name="kernel.reset" method="reset"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.command.debug_firewall" class="Symfony\Bundle\SecurityBundle\Command\DebugFirewallCommand">
      <tag name="console.command" command="debug:firewall"/>
      <tag name="container.no_preload"/>
      <argument>%security.firewalls%</argument>
      <argument type="service" id=".service_locator.zJyh7qS"/>
      <argument type="service" id=".service_locator._1SGciK"/>
      <argument type="collection">
        <argument key="main" type="collection">
          <argument type="service" id="App\Security\AuthentAuthenticator"/>
          <argument type="service" id="security.authenticator.remember_me.main"/>
        </argument>
      </argument>
      <argument>false</argument>
      <call method="setName">
        <argument>debug:firewall</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about your security firewall(s)</argument>
      </call>
    </service>
    <service id="security.user.provider.concrete.sakkane" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider">
      <argument type="service" id="doctrine"/>
      <argument>App\Entity\User</argument>
      <argument>email</argument>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.kLbKLHa</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.q1UFWmc" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id=".security.request_matcher.kLbKLHa" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.q1UFWmc"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.sakkane</argument>
      <argument>main</argument>
      <argument>App\Security\AuthentAuthenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>remember_me</argument>
        <argument>App\Security\AuthentAuthenticator</argument>
      </argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="path">security_logout</argument>
        <argument key="target">security_login</argument>
        <argument key="enable_csrf">null</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="invalidate_session">true</argument>
        <argument key="clear_site_data" type="collection"/>
        <argument key="delete_cookies" type="collection"/>
      </argument>
    </service>
    <service id="security.listener.main.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" dispatcher="debug.security.event_dispatcher.main" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="2048" method="checkPassport"/>
      <argument type="service" id="security.user.provider.concrete.sakkane"/>
    </service>
    <service id="security.user_checker.chain.main" class="Symfony\Component\Security\Core\User\ChainUserChecker">
      <argument type="tagged_iterator" tag="security.user_checker.main"/>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.sakkane"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.security.event_dispatcher.main"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.listener.session.main" class="Symfony\Component\Security\Http\EventListener\SessionStrategyListener">
      <tag name="kernel.event_subscriber" dispatcher="debug.security.event_dispatcher.main"/>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="debug.security.event_dispatcher.main"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">security_logout</argument>
      </argument>
    </service>
    <service id="security.logout.listener.default.main" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="debug.security.event_dispatcher.main"/>
      <argument type="service" id="security.http_utils"/>
      <argument>security_login</argument>
    </service>
    <service id="security.logout.listener.session.main" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="debug.security.event_dispatcher.main"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="security.authenticator.remember_me_signature_hasher" class="Symfony\Component\Security\Core\Signature\SignatureHasher">
      <argument type="service" id="property_accessor"/>
      <argument type="abstract">signature properties</argument>
      <argument>%env(APP_SECRET)%</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authenticator.signature_remember_me_handler" class="Symfony\Component\Security\Http\RememberMe\SignatureRememberMeHandler" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">signature hasher</argument>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="request_stack"/>
      <argument type="abstract">options</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.persistent_remember_me_handler" class="Symfony\Component\Security\Http\RememberMe\PersistentRememberMeHandler" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">token provider</argument>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="request_stack"/>
      <argument type="abstract">options</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="abstract">token verifier</argument>
    </service>
    <service id="security.authenticator.firewall_aware_remember_me_handler" class="Symfony\Bundle\SecurityBundle\RememberMe\FirewallAwareRememberMeHandler">
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id=".service_locator.Ar70cHn"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.listener.check_remember_me_conditions" class="Symfony\Component\Security\Http\EventListener\CheckRememberMeConditionsListener" abstract="true">
      <argument type="abstract">options</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="security.listener.remember_me" class="Symfony\Component\Security\Http\EventListener\RememberMeListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">remember me handler</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.remember_me" class="Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">remember me handler</argument>
      <argument>%env(APP_SECRET)%</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">options</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="cache.security_token_verifier" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_token_verifier.recorder_inner"/>
    </service>
    <service id="security.authenticator.remember_me_signature_hasher.main" class="Symfony\Component\Security\Core\Signature\SignatureHasher">
      <argument type="service" id="property_accessor"/>
      <argument type="collection">
        <argument>password</argument>
      </argument>
      <argument>%env(APP_SECRET)%</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authenticator.remember_me_handler.main" class="Symfony\Component\Security\Http\RememberMe\SignatureRememberMeHandler">
      <tag name="security.remember_me_handler" firewall="main"/>
      <argument type="service" id="security.authenticator.remember_me_signature_hasher.main"/>
      <argument type="service" id="security.user.provider.concrete.sakkane"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="secret">%env(APP_SECRET)%</argument>
        <argument key="lifetime">604800</argument>
        <argument key="path">/</argument>
        <argument key="user_providers" type="collection"/>
        <argument key="catch_exceptions">true</argument>
        <argument key="signature_properties" type="collection">
          <argument>password</argument>
        </argument>
        <argument key="name">REMEMBERME</argument>
        <argument key="domain">null</argument>
        <argument key="secure">null</argument>
        <argument key="httponly">true</argument>
        <argument key="samesite">lax</argument>
        <argument key="always_remember_me">false</argument>
        <argument key="remember_me_parameter">_remember_me</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.listener.check_remember_me_conditions.main" class="Symfony\Component\Security\Http\EventListener\CheckRememberMeConditionsListener">
      <tag name="kernel.event_subscriber" dispatcher="debug.security.event_dispatcher.main"/>
      <argument type="collection">
        <argument key="always_remember_me">false</argument>
        <argument key="remember_me_parameter">_remember_me</argument>
      </argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="security.listener.remember_me.main" class="Symfony\Component\Security\Http\EventListener\RememberMeListener">
      <tag name="kernel.event_subscriber" dispatcher="debug.security.event_dispatcher.main"/>
      <argument type="service" id="security.authenticator.remember_me_handler.main"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.remember_me.main" class="Symfony\Component\Security\Http\Authenticator\RememberMeAuthenticator">
      <argument type="service" id="security.authenticator.remember_me_handler.main"/>
      <argument>%env(APP_SECRET)%</argument>
      <argument type="service" id="security.token_storage"/>
      <argument>REMEMBERME</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.manager.main" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection">
        <argument type="service" id="App\Security\AuthentAuthenticator"/>
        <argument type="service" id="security.authenticator.remember_me.main"/>
      </argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.event_dispatcher.main"/>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="debug.security.firewall.authenticator.main" class="Symfony\Component\Security\Http\Authenticator\Debug\TraceableAuthenticatorManagerListener">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="security.firewall.authenticator.main" inner="debug.security.firewall.authenticator.main.inner"/>
      <argument type="service" id="debug.security.firewall.authenticator.main.inner"/>
    </service>
    <service id="security.listener.user_checker.main" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener">
      <tag name="kernel.event_subscriber" dispatcher="debug.security.event_dispatcher.main"/>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="App\Security\AuthentAuthenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id=".service_locator.qlpi89Y" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Security\AuthentAuthenticator" type="service_closure" id="App\Security\AuthentAuthenticator"/>
        <argument key="security.authenticator.remember_me.main" type="service_closure" id="security.authenticator.remember_me.main"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="debug.security.firewall.authenticator.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.logout_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id=".service_locator.zJyh7qS" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.dev" type="service_closure" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service_closure" id="security.firewall.map.context.main"/>
      </argument>
    </service>
    <service id="security.command.user_password_hash" class="Symfony\Component\PasswordHasher\Command\UserPasswordHashCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument type="collection">
        <argument>Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface</argument>
      </argument>
      <call method="setName">
        <argument>security:hash-password</argument>
      </call>
      <call method="setDescription">
        <argument>Hash a user password</argument>
      </call>
    </service>
    <service id="monolog.logger" class="Monolog\Logger">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger_prototype" class="Monolog\Logger" abstract="true">
      <argument></argument>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter">
      <argument>app</argument>
    </service>
    <service id="monolog.http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>C:\wamp\www\upgradegnt\var\log/dev.log</argument>
      <argument>debug</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.reset" method="reset"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="maker.file_manager" class="Symfony\Bundle\MakerBundle\FileManager">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="maker.autoloader_util"/>
      <argument type="service" id="maker.file_link_formatter"/>
      <argument>C:\wamp\www\upgradegnt</argument>
      <argument>C:\wamp\www\upgradegnt/templates</argument>
    </service>
    <service id="maker.autoloader_finder" class="Symfony\Bundle\MakerBundle\Util\ComposerAutoloaderFinder">
      <argument>App</argument>
    </service>
    <service id="maker.autoloader_util" class="Symfony\Bundle\MakerBundle\Util\AutoloaderUtil">
      <argument type="service" id="maker.autoloader_finder"/>
    </service>
    <service id="maker.file_link_formatter" class="Symfony\Bundle\MakerBundle\Util\MakerFileLinkFormatter">
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
    </service>
    <service id="maker.event_registry" class="Symfony\Bundle\MakerBundle\EventRegistry">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="maker.console_error_listener" class="Symfony\Bundle\MakerBundle\Event\ConsoleErrorSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="maker.doctrine_helper" class="Symfony\Bundle\MakerBundle\Doctrine\DoctrineHelper">
      <argument>App\Entity</argument>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="default" type="collection">
          <argument type="collection">
            <argument>App\Entity</argument>
            <argument type="service" id="doctrine.orm.default_attribute_metadata_driver"/>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="maker.template_linter" class="Symfony\Bundle\MakerBundle\Util\TemplateLinter">
      <argument>%env(default::string:MAKER_PHP_CS_FIXER_BINARY_PATH)%</argument>
      <argument>%env(default::string:MAKER_PHP_CS_FIXER_CONFIG_PATH)%</argument>
    </service>
    <service id="maker.auto_command.abstract" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" abstract="true">
      <argument></argument>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
    </service>
    <service id="maker.generator" class="Symfony\Bundle\MakerBundle\Generator">
      <argument type="service" id="maker.file_manager"/>
      <argument>App</argument>
      <argument>null</argument>
      <argument type="service" id="maker.template_component_generator"/>
    </service>
    <service id="maker.entity_class_generator" class="Symfony\Bundle\MakerBundle\Doctrine\EntityClassGenerator">
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.user_class_builder" class="Symfony\Bundle\MakerBundle\Security\UserClassBuilder"/>
    <service id="maker.security_config_updater" class="Symfony\Bundle\MakerBundle\Security\SecurityConfigUpdater"/>
    <service id="maker.renderer.form_type_renderer" class="Symfony\Bundle\MakerBundle\Renderer\FormTypeRenderer">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.security_controller_builder" class="Symfony\Bundle\MakerBundle\Security\SecurityControllerBuilder"/>
    <service id="maker.php_compat_util" class="Symfony\Bundle\MakerBundle\Util\PhpCompatUtil">
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.template_component_generator" class="Symfony\Bundle\MakerBundle\Util\TemplateComponentGenerator">
      <argument>true</argument>
      <argument>false</argument>
      <argument>App</argument>
    </service>
    <service id="maker.maker.make_authenticator" class="Symfony\Bundle\MakerBundle\Maker\MakeAuthenticator">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.security_controller_builder"/>
    </service>
    <service id="maker.maker.make_command" class="Symfony\Bundle\MakerBundle\Maker\MakeCommand">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_twig_component" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigComponent">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeController">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_crud" class="Symfony\Bundle\MakerBundle\Maker\MakeCrud">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_docker_database" class="Symfony\Bundle\MakerBundle\Maker\MakeDockerDatabase">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_entity" class="Symfony\Bundle\MakerBundle\Maker\MakeEntity">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument>null</argument>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_fixtures" class="Symfony\Bundle\MakerBundle\Maker\MakeFixtures">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form" class="Symfony\Bundle\MakerBundle\Maker\MakeForm">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_functional_test" class="Symfony\Bundle\MakerBundle\Maker\MakeFunctionalTest">
      <tag name="maker.command"/>
      <deprecated package="symfony/maker-bundle" version="1.29">The "%service_id%" service is deprecated, use "maker.maker.make_test" instead.</deprecated>
    </service>
    <service id="maker.maker.make_listener" class="Symfony\Bundle\MakerBundle\Maker\MakeListener">
      <tag name="maker.command"/>
      <argument type="service" id="maker.event_registry"/>
    </service>
    <service id="maker.maker.make_message" class="Symfony\Bundle\MakerBundle\Maker\MakeMessage">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Maker\MakeMessengerMiddleware">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_registration_form" class="Symfony\Bundle\MakerBundle\Maker\MakeRegistrationForm">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="maker.maker.make_reset_password" class="Symfony\Bundle\MakerBundle\Maker\MakeResetPassword">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.entity_class_generator"/>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="maker.maker.make_schedule" class="Symfony\Bundle\MakerBundle\Maker\MakeSchedule">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerEncoder">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerNormalizer">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_subscriber" class="Symfony\Bundle\MakerBundle\Maker\MakeSubscriber">
      <tag name="maker.command"/>
      <argument type="service" id="maker.event_registry"/>
      <deprecated package="symfony/maker-bundle" version="1.51">The "%service_id%" service is deprecated, use "maker.maker.make_listener" instead.</deprecated>
    </service>
    <service id="maker.maker.make_twig_extension" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigExtension">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_test" class="Symfony\Bundle\MakerBundle\Maker\MakeTest">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_unit_test" class="Symfony\Bundle\MakerBundle\Maker\MakeUnitTest">
      <tag name="maker.command"/>
      <deprecated package="symfony/maker-bundle" version="1.29">The "%service_id%" service is deprecated, use "maker.maker.make_test" instead.</deprecated>
    </service>
    <service id="maker.maker.make_validator" class="Symfony\Bundle\MakerBundle\Maker\MakeValidator">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_voter" class="Symfony\Bundle\MakerBundle\Maker\MakeVoter">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_user" class="Symfony\Bundle\MakerBundle\Maker\MakeUser">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.user_class_builder"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.entity_class_generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.maker.make_migration" class="Symfony\Bundle\MakerBundle\Maker\MakeMigration">
      <tag name="maker.command"/>
      <argument>C:\wamp\www\upgradegnt</argument>
      <argument type="service" id="maker.file_link_formatter"/>
    </service>
    <service id="maker.maker.make_stimulus_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeStimulusController">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form_login" class="Symfony\Bundle\MakerBundle\Maker\Security\MakeFormLogin">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.security_controller_builder"/>
    </service>
    <service id="maker.maker.make_custom_authenticator" class="Symfony\Bundle\MakerBundle\Maker\Security\MakeCustomAuthenticator">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.maker.make_webhook" class="Symfony\Bundle\MakerBundle\Maker\MakeWebhook">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
    </service>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\AbsenceController" class="App\Controller\AbsenceController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\AbsenceController" class="App\Controller\AbsenceController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\AbsenceController" class="App\Controller\AbsenceController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\AccueilController" class="App\Controller\AccueilController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\AccueilController" class="App\Controller\AccueilController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\AccueilController" class="App\Controller\AccueilController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\AchatController" class="App\Controller\AchatController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\AchatController" class="App\Controller\AchatController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\AchatController" class="App\Controller\AchatController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ApprovisionnementController" class="App\Controller\ApprovisionnementController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ApprovisionnementController" class="App\Controller\ApprovisionnementController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ApprovisionnementController" class="App\Controller\ApprovisionnementController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\AvoirController" class="App\Controller\AvoirController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\AvoirController" class="App\Controller\AvoirController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\AvoirController" class="App\Controller\AvoirController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\BanqueController" class="App\Controller\BanqueController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\BanqueController" class="App\Controller\BanqueController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\BanqueController" class="App\Controller\BanqueController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\CalendrierController" class="App\Controller\CalendrierController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\CalendrierController" class="App\Controller\CalendrierController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\CalendrierController" class="App\Controller\CalendrierController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\CategorieController" class="App\Controller\CategorieController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\CategorieController" class="App\Controller\CategorieController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\CategorieController" class="App\Controller\CategorieController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ClientController" class="App\Controller\ClientController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ClientController" class="App\Controller\ClientController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ClientController" class="App\Controller\ClientController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\CommandeController" class="App\Controller\CommandeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\CommandeController" class="App\Controller\CommandeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\CommandeController" class="App\Controller\CommandeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\CongeController" class="App\Controller\CongeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\CongeController" class="App\Controller\CongeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\CongeController" class="App\Controller\CongeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ContratController" class="App\Controller\ContratController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ContratController" class="App\Controller\ContratController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ContratController" class="App\Controller\ContratController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\CritereEvaluationController" class="App\Controller\CritereEvaluationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\CritereEvaluationController" class="App\Controller\CritereEvaluationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\CritereEvaluationController" class="App\Controller\CritereEvaluationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\DemandeExplicationController" class="App\Controller\DemandeExplicationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\DemandeExplicationController" class="App\Controller\DemandeExplicationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\DemandeExplicationController" class="App\Controller\DemandeExplicationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\DepartementController" class="App\Controller\DepartementController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\DepartementController" class="App\Controller\DepartementController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\DepartementController" class="App\Controller\DepartementController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\DepenseController" class="App\Controller\DepenseController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\DepenseController" class="App\Controller\DepenseController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\DepenseController" class="App\Controller\DepenseController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\DetteController" class="App\Controller\DetteController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\DetteController" class="App\Controller\DetteController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\DetteController" class="App\Controller\DetteController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\DocumentController" class="App\Controller\DocumentController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\DocumentController" class="App\Controller\DocumentController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\DocumentController" class="App\Controller\DocumentController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\EmployeController" class="App\Controller\EmployeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\EmployeController" class="App\Controller\EmployeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\EmployeController" class="App\Controller\EmployeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\EvaluationController" class="App\Controller\EvaluationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\EvaluationController" class="App\Controller\EvaluationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\EvaluationController" class="App\Controller\EvaluationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\FeedbackController" class="App\Controller\FeedbackController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\FeedbackController" class="App\Controller\FeedbackController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\FeedbackController" class="App\Controller\FeedbackController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\FinanceController" class="App\Controller\FinanceController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\FinanceController" class="App\Controller\FinanceController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\FinanceController" class="App\Controller\FinanceController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\FinancementController" class="App\Controller\FinancementController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\FinancementController" class="App\Controller\FinancementController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\FinancementController" class="App\Controller\FinancementController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\FormationController" class="App\Controller\FormationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\FormationController" class="App\Controller\FormationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\FormationController" class="App\Controller\FormationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\FournisseurController" class="App\Controller\FournisseurController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\FournisseurController" class="App\Controller\FournisseurController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\FournisseurController" class="App\Controller\FournisseurController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\HeureSuplementaireController" class="App\Controller\HeureSuplementaireController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\HeureSuplementaireController" class="App\Controller\HeureSuplementaireController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\HeureSuplementaireController" class="App\Controller\HeureSuplementaireController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\LivrerController" class="App\Controller\LivrerController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\LivrerController" class="App\Controller\LivrerController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\LivrerController" class="App\Controller\LivrerController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\MessageController" class="App\Controller\MessageController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\MessageController" class="App\Controller\MessageController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\MessageController" class="App\Controller\MessageController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\NoteServiceController" class="App\Controller\NoteServiceController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\NoteServiceController" class="App\Controller\NoteServiceController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\NoteServiceController" class="App\Controller\NoteServiceController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\NotificationController" class="App\Controller\NotificationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\NotificationController" class="App\Controller\NotificationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\NotificationController" class="App\Controller\NotificationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\OrderController" class="App\Controller\OrderController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\OrderController" class="App\Controller\OrderController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\OrderController" class="App\Controller\OrderController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\PaieController" class="App\Controller\PaieController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\PaieController" class="App\Controller\PaieController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\PaieController" class="App\Controller\PaieController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\PanierController" class="App\Controller\PanierController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\PanierController" class="App\Controller\PanierController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\PanierController" class="App\Controller\PanierController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\PosteController" class="App\Controller\PosteController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\PosteController" class="App\Controller\PosteController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\PosteController" class="App\Controller\PosteController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\PrimeController" class="App\Controller\PrimeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\PrimeController" class="App\Controller\PrimeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\PrimeController" class="App\Controller\PrimeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\PrimePerformanceController" class="App\Controller\PrimePerformanceController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\PrimePerformanceController" class="App\Controller\PrimePerformanceController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\PrimePerformanceController" class="App\Controller\PrimePerformanceController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ProduitController" class="App\Controller\ProduitController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ProduitController" class="App\Controller\ProduitController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ProduitController" class="App\Controller\ProduitController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\PromotionController" class="App\Controller\PromotionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\PromotionController" class="App\Controller\PromotionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\PromotionController" class="App\Controller\PromotionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ReclamationController" class="App\Controller\ReclamationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ReclamationController" class="App\Controller\ReclamationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ReclamationController" class="App\Controller\ReclamationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\RemboursementController" class="App\Controller\RemboursementController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\RemboursementController" class="App\Controller\RemboursementController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\RemboursementController" class="App\Controller\RemboursementController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ReponseController" class="App\Controller\ReponseController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ReponseController" class="App\Controller\ReponseController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ReponseController" class="App\Controller\ReponseController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\SanctionController" class="App\Controller\SanctionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\SanctionController" class="App\Controller\SanctionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SanctionController" class="App\Controller\SanctionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Security\securityController" class="App\Controller\Security\securityController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Security\securityController" class="App\Controller\Security\securityController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Security\securityController" class="App\Controller\Security\securityController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\StockController" class="App\Controller\StockController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\StockController" class="App\Controller\StockController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\StockController" class="App\Controller\StockController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\SuggestionController" class="App\Controller\SuggestionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\SuggestionController" class="App\Controller\SuggestionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SuggestionController" class="App\Controller\SuggestionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\TestController" class="App\Controller\TestController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\TestController" class="App\Controller\TestController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TestController" class="App\Controller\TestController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\TransfertController" class="App\Controller\TransfertController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\TransfertController" class="App\Controller\TransfertController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TransfertController" class="App\Controller\TransfertController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\TypeCongeController" class="App\Controller\TypeCongeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\TypeCongeController" class="App\Controller\TypeCongeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TypeCongeController" class="App\Controller\TypeCongeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\TypeContratController" class="App\Controller\TypeContratController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\TypeContratController" class="App\Controller\TypeContratController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TypeContratController" class="App\Controller\TypeContratController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\TypeSanctionController" class="App\Controller\TypeSanctionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\TypeSanctionController" class="App\Controller\TypeSanctionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TypeSanctionController" class="App\Controller\TypeSanctionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\AbsenceType" class="App\Form\AbsenceType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\AbsenceType" class="App\Form\AbsenceType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\AchatType" class="App\Form\AchatType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\AchatType" class="App\Form\AchatType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ApprouverType" class="App\Form\ApprouverType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ApprouverType" class="App\Form\ApprouverType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ApprovisionnementType" class="App\Form\ApprovisionnementType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ApprovisionnementType" class="App\Form\ApprovisionnementType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\AvoirType" class="App\Form\AvoirType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\AvoirType" class="App\Form\AvoirType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\BanqueType" class="App\Form\BanqueType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\BanqueType" class="App\Form\BanqueType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\CalendrierType" class="App\Form\CalendrierType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\CalendrierType" class="App\Form\CalendrierType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\CandidatureType" class="App\Form\CandidatureType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\CandidatureType" class="App\Form\CandidatureType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\CategorieType" class="App\Form\CategorieType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\CategorieType" class="App\Form\CategorieType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ClientType" class="App\Form\ClientType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ClientType" class="App\Form\ClientType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\CommandeType" class="App\Form\CommandeType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\CommandeType" class="App\Form\CommandeType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ContratType" class="App\Form\ContratType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ContratType" class="App\Form\ContratType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\CritereEvaluationType" class="App\Form\CritereEvaluationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\CritereEvaluationType" class="App\Form\CritereEvaluationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\CvType" class="App\Form\CvType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\CvType" class="App\Form\CvType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\DecisionType" class="App\Form\DecisionType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\DecisionType" class="App\Form\DecisionType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\DemandeCongeType" class="App\Form\DemandeCongeType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\DemandeCongeType" class="App\Form\DemandeCongeType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\DemandeExplicationType" class="App\Form\DemandeExplicationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\DemandeExplicationType" class="App\Form\DemandeExplicationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\DepartementType" class="App\Form\DepartementType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\DepartementType" class="App\Form\DepartementType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\DepenseType" class="App\Form\DepenseType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\DepenseType" class="App\Form\DepenseType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\DocumentType" class="App\Form\DocumentType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\DocumentType" class="App\Form\DocumentType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\EmployeType" class="App\Form\EmployeType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\EmployeType" class="App\Form\EmployeType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\EvaluationType" class="App\Form\EvaluationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\EvaluationType" class="App\Form\EvaluationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\FeedbackType" class="App\Form\FeedbackType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\FeedbackType" class="App\Form\FeedbackType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\FiltreBulletinType" class="App\Form\FiltreBulletinType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\FiltreBulletinType" class="App\Form\FiltreBulletinType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\FinancementBanqueType" class="App\Form\FinancementBanqueType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\FinancementBanqueType" class="App\Form\FinancementBanqueType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\FinancementType" class="App\Form\FinancementType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\FinancementType" class="App\Form\FinancementType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\FormationType" class="App\Form\FormationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\FormationType" class="App\Form\FormationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\FournisseurType" class="App\Form\FournisseurType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\FournisseurType" class="App\Form\FournisseurType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\HeureSuplementaireType" class="App\Form\HeureSuplementaireType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\HeureSuplementaireType" class="App\Form\HeureSuplementaireType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\LivrerType" class="App\Form\LivrerType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\LivrerType" class="App\Form\LivrerType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\MessageReplyType" class="App\Form\MessageReplyType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\MessageReplyType" class="App\Form\MessageReplyType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\MessageType" class="App\Form\MessageType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\MessageType" class="App\Form\MessageType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\NoteServiceType" class="App\Form\NoteServiceType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\NoteServiceType" class="App\Form\NoteServiceType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PaieType" class="App\Form\PaieType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PaieType" class="App\Form\PaieType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PaiementFormType" class="App\Form\PaiementFormType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PaiementFormType" class="App\Form\PaiementFormType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PosteType" class="App\Form\PosteType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PosteType" class="App\Form\PosteType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PrimePerformanceType" class="App\Form\PrimePerformanceType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PrimePerformanceType" class="App\Form\PrimePerformanceType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PrimeType" class="App\Form\PrimeType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PrimeType" class="App\Form\PrimeType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ProduitType" class="App\Form\ProduitType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ProduitType" class="App\Form\ProduitType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PromotionType" class="App\Form\PromotionType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PromotionType" class="App\Form\PromotionType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\RechercheType" class="App\Form\RechercheType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\RechercheType" class="App\Form\RechercheType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ReclamationType" class="App\Form\ReclamationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ReclamationType" class="App\Form\ReclamationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\RegistrationType" class="App\Form\RegistrationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\RegistrationType" class="App\Form\RegistrationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\RemboursementType" class="App\Form\RemboursementType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\RemboursementType" class="App\Form\RemboursementType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\RemboursementbancaireType" class="App\Form\RemboursementbancaireType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\RemboursementbancaireType" class="App\Form\RemboursementbancaireType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ReponseAbsenceType" class="App\Form\ReponseAbsenceType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ReponseAbsenceType" class="App\Form\ReponseAbsenceType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ReponseExplicationType" class="App\Form\ReponseExplicationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ReponseExplicationType" class="App\Form\ReponseExplicationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ReponseType" class="App\Form\ReponseType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ReponseType" class="App\Form\ReponseType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\SanctionType" class="App\Form\SanctionType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\SanctionType" class="App\Form\SanctionType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ServiceType" class="App\Form\ServiceType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ServiceType" class="App\Form\ServiceType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\SuggestionType" class="App\Form\SuggestionType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\SuggestionType" class="App\Form\SuggestionType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\TestType" class="App\Form\TestType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\TestType" class="App\Form\TestType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\TransfertType" class="App\Form\TransfertType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\TransfertType" class="App\Form\TransfertType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\TypeCongeType" class="App\Form\TypeCongeType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\TypeCongeType" class="App\Form\TypeCongeType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\TypeContratType" class="App\Form\TypeContratType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\TypeContratType" class="App\Form\TypeContratType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\TypeSanctionType" class="App\Form\TypeSanctionType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\TypeSanctionType" class="App\Form\TypeSanctionType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\BloodGroupType" class="App\Form\Type\BloodGroupType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\BloodGroupType" class="App\Form\Type\BloodGroupType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\FemmesType" class="App\Form\Type\FemmesType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\FemmesType" class="App\Form\Type\FemmesType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LinkType" class="App\Form\Type\LinkType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LinkType" class="App\Form\Type\LinkType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\RegionType" class="App\Form\Type\RegionType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\RegionType" class="App\Form\Type\RegionType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\SexeType" class="App\Form\Type\SexeType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\SexeType" class="App\Form\Type\SexeType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\SituationType" class="App\Form\Type\SituationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\SituationType" class="App\Form\Type\SituationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\StatusType" class="App\Form\Type\StatusType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\StatusType" class="App\Form\Type\StatusType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\VerserType" class="App\Form\Type\VerserType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\VerserType" class="App\Form\Type\VerserType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\adresseType" class="App\Form\Type\adresseType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\adresseType" class="App\Form\Type\adresseType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\evaluationType" class="App\Form\Type\evaluationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\evaluationType" class="App\Form\Type\evaluationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\promoType" class="App\Form\Type\promoType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\promoType" class="App\Form\Type\promoType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\reponseType" class="App\Form\Type\reponseType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\reponseType" class="App\Form\Type\reponseType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\UserType" class="App\Form\UserType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\UserType" class="App\Form\UserType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\VersementType" class="App\Form\VersementType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\VersementType" class="App\Form\VersementType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\changePasswordType" class="App\Form\changePasswordType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\changePasswordType" class="App\Form\changePasswordType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AbsenceRepository" class="App\Repository\AbsenceRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AbsenceRepository" class="App\Repository\AbsenceRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AchatRepository" class="App\Repository\AchatRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AchatRepository" class="App\Repository\AchatRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AlbumRepository" class="App\Repository\AlbumRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AlbumRepository" class="App\Repository\AlbumRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ApprovisionnementRepository" class="App\Repository\ApprovisionnementRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ApprovisionnementRepository" class="App\Repository\ApprovisionnementRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ApprovisionnerRepository" class="App\Repository\ApprovisionnerRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ApprovisionnerRepository" class="App\Repository\ApprovisionnerRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AvoirRepository" class="App\Repository\AvoirRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AvoirRepository" class="App\Repository\AvoirRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AvoirResteRepository" class="App\Repository\AvoirResteRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AvoirResteRepository" class="App\Repository\AvoirResteRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\BanqueRepository" class="App\Repository\BanqueRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\BanqueRepository" class="App\Repository\BanqueRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CalendrierRepository" class="App\Repository\CalendrierRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CalendrierRepository" class="App\Repository\CalendrierRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CandidatureRepository" class="App\Repository\CandidatureRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CandidatureRepository" class="App\Repository\CandidatureRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CategorieRepository" class="App\Repository\CategorieRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CategorieRepository" class="App\Repository\CategorieRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CommandeProduitRepository" class="App\Repository\CommandeProduitRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CommandeProduitRepository" class="App\Repository\CommandeProduitRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CommandeRepository" class="App\Repository\CommandeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CommandeRepository" class="App\Repository\CommandeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CompteRepository" class="App\Repository\CompteRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CompteRepository" class="App\Repository\CompteRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CongesRepository" class="App\Repository\CongesRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CongesRepository" class="App\Repository\CongesRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ContratRepository" class="App\Repository\ContratRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ContratRepository" class="App\Repository\ContratRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CreditRepository" class="App\Repository\CreditRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CreditRepository" class="App\Repository\CreditRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CritereEvaluationRepository" class="App\Repository\CritereEvaluationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CritereEvaluationRepository" class="App\Repository\CritereEvaluationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CvRepository" class="App\Repository\CvRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CvRepository" class="App\Repository\CvRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\DebitRepository" class="App\Repository\DebitRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\DebitRepository" class="App\Repository\DebitRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\DecisionRepository" class="App\Repository\DecisionRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\DecisionRepository" class="App\Repository\DecisionRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\DemandeExplicationRepository" class="App\Repository\DemandeExplicationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\DemandeExplicationRepository" class="App\Repository\DemandeExplicationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\DepartementRepository" class="App\Repository\DepartementRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\DepartementRepository" class="App\Repository\DepartementRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\DepenseRepository" class="App\Repository\DepenseRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\DepenseRepository" class="App\Repository\DepenseRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\DocumentRepository" class="App\Repository\DocumentRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\DocumentRepository" class="App\Repository\DocumentRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EcritureRepository" class="App\Repository\EcritureRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EcritureRepository" class="App\Repository\EcritureRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EmployeFormationRepository" class="App\Repository\EmployeFormationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EmployeFormationRepository" class="App\Repository\EmployeFormationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EmployeRepository" class="App\Repository\EmployeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EmployeRepository" class="App\Repository\EmployeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EvaluationDetailRepository" class="App\Repository\EvaluationDetailRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EvaluationDetailRepository" class="App\Repository\EvaluationDetailRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EvaluationRepository" class="App\Repository\EvaluationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EvaluationRepository" class="App\Repository\EvaluationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\FactureRepository" class="App\Repository\FactureRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\FactureRepository" class="App\Repository\FactureRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\FeedbackRepository" class="App\Repository\FeedbackRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\FeedbackRepository" class="App\Repository\FeedbackRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\FinancementRepository" class="App\Repository\FinancementRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\FinancementRepository" class="App\Repository\FinancementRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\FormationRepository" class="App\Repository\FormationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\FormationRepository" class="App\Repository\FormationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\FournisseurProduitRepository" class="App\Repository\FournisseurProduitRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\FournisseurProduitRepository" class="App\Repository\FournisseurProduitRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\FournisseurRepository" class="App\Repository\FournisseurRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\FournisseurRepository" class="App\Repository\FournisseurRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\HeureSuplementaireRepository" class="App\Repository\HeureSuplementaireRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\HeureSuplementaireRepository" class="App\Repository\HeureSuplementaireRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ImageRepository" class="App\Repository\ImageRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ImageRepository" class="App\Repository\ImageRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\LivrerProduitRepository" class="App\Repository\LivrerProduitRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\LivrerProduitRepository" class="App\Repository\LivrerProduitRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\LivrerRepository" class="App\Repository\LivrerRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\LivrerRepository" class="App\Repository\LivrerRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\LivrerResteRepository" class="App\Repository\LivrerResteRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\LivrerResteRepository" class="App\Repository\LivrerResteRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\MessageRecipientRepository" class="App\Repository\MessageRecipientRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\MessageRecipientRepository" class="App\Repository\MessageRecipientRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\MessageReplyRepository" class="App\Repository\MessageReplyRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\MessageReplyRepository" class="App\Repository\MessageReplyRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\MessageRepository" class="App\Repository\MessageRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\MessageRepository" class="App\Repository\MessageRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\MoisRepository" class="App\Repository\MoisRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\MoisRepository" class="App\Repository\MoisRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\NoteServiceRepository" class="App\Repository\NoteServiceRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\NoteServiceRepository" class="App\Repository\NoteServiceRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\NotificationRepository" class="App\Repository\NotificationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\NotificationRepository" class="App\Repository\NotificationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\NumeroRepository" class="App\Repository\NumeroRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\NumeroRepository" class="App\Repository\NumeroRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PaieRepository" class="App\Repository\PaieRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PaieRepository" class="App\Repository\PaieRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PaieSalaireRepository" class="App\Repository\PaieSalaireRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PaieSalaireRepository" class="App\Repository\PaieSalaireRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PaiementRepository" class="App\Repository\PaiementRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PaiementRepository" class="App\Repository\PaiementRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PosteEmployeRepository" class="App\Repository\PosteEmployeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PosteEmployeRepository" class="App\Repository\PosteEmployeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PosteRepository" class="App\Repository\PosteRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PosteRepository" class="App\Repository\PosteRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PrimePerformanceRepository" class="App\Repository\PrimePerformanceRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PrimePerformanceRepository" class="App\Repository\PrimePerformanceRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PrimeRepository" class="App\Repository\PrimeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PrimeRepository" class="App\Repository\PrimeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ProduitRepository" class="App\Repository\ProduitRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ProduitRepository" class="App\Repository\ProduitRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PromotionProduitRepository" class="App\Repository\PromotionProduitRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PromotionProduitRepository" class="App\Repository\PromotionProduitRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PromotionRepository" class="App\Repository\PromotionRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PromotionRepository" class="App\Repository\PromotionRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ReclamationRepository" class="App\Repository\ReclamationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ReclamationRepository" class="App\Repository\ReclamationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\RemboursementRepository" class="App\Repository\RemboursementRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\RemboursementRepository" class="App\Repository\RemboursementRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ReponseAbsenceRepository" class="App\Repository\ReponseAbsenceRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ReponseAbsenceRepository" class="App\Repository\ReponseAbsenceRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ReponseExplicationRepository" class="App\Repository\ReponseExplicationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ReponseExplicationRepository" class="App\Repository\ReponseExplicationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ReponseRepository" class="App\Repository\ReponseRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ReponseRepository" class="App\Repository\ReponseRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\RetenueRepository" class="App\Repository\RetenueRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\RetenueRepository" class="App\Repository\RetenueRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\RetourProduitRepository" class="App\Repository\RetourProduitRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\RetourProduitRepository" class="App\Repository\RetourProduitRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\RetourRepository" class="App\Repository\RetourRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\RetourRepository" class="App\Repository\RetourRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\SanctionRepository" class="App\Repository\SanctionRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\SanctionRepository" class="App\Repository\SanctionRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\StockRepository" class="App\Repository\StockRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\StockRepository" class="App\Repository\StockRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\SuggestionRepository" class="App\Repository\SuggestionRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\SuggestionRepository" class="App\Repository\SuggestionRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TamponAbsenceRepository" class="App\Repository\TamponAbsenceRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TamponAbsenceRepository" class="App\Repository\TamponAbsenceRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TestRepository" class="App\Repository\TestRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TestRepository" class="App\Repository\TestRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TransfertRepository" class="App\Repository\TransfertRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TransfertRepository" class="App\Repository\TransfertRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TypeCongeRepository" class="App\Repository\TypeCongeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TypeCongeRepository" class="App\Repository\TypeCongeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TypeContratRepository" class="App\Repository\TypeContratRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TypeContratRepository" class="App\Repository\TypeContratRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TypeDecisionRepository" class="App\Repository\TypeDecisionRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TypeDecisionRepository" class="App\Repository\TypeDecisionRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TypeSanctionRepository" class="App\Repository\TypeSanctionRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TypeSanctionRepository" class="App\Repository\TypeSanctionRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\VersementRepository" class="App\Repository\VersementRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\VersementRepository" class="App\Repository\VersementRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\Twig\Compos" class="App\Twig\Compos" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Twig\Compos" class="App\Twig\Compos" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\Twig\Composarabe" class="App\Twig\Composarabe" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Twig\Composarabe" class="App\Twig\Composarabe" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\Twig\Notes" class="App\Twig\Notes" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Twig\Notes" class="App\Twig\Notes" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\Twig\Notesarabe" class="App\Twig\Notesarabe" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Twig\Notesarabe" class="App\Twig\Notesarabe" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.w7.f4fT" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service_closure" id="container.env_var_processor"/>
        <argument key="bool" type="service_closure" id="container.env_var_processor"/>
        <argument key="const" type="service_closure" id="container.env_var_processor"/>
        <argument key="csv" type="service_closure" id="container.env_var_processor"/>
        <argument key="default" type="service_closure" id="container.env_var_processor"/>
        <argument key="defined" type="service_closure" id="container.env_var_processor"/>
        <argument key="enum" type="service_closure" id="container.env_var_processor"/>
        <argument key="file" type="service_closure" id="container.env_var_processor"/>
        <argument key="float" type="service_closure" id="container.env_var_processor"/>
        <argument key="int" type="service_closure" id="container.env_var_processor"/>
        <argument key="json" type="service_closure" id="container.env_var_processor"/>
        <argument key="key" type="service_closure" id="container.env_var_processor"/>
        <argument key="not" type="service_closure" id="container.env_var_processor"/>
        <argument key="query_string" type="service_closure" id="container.env_var_processor"/>
        <argument key="require" type="service_closure" id="container.env_var_processor"/>
        <argument key="resolve" type="service_closure" id="container.env_var_processor"/>
        <argument key="shuffle" type="service_closure" id="container.env_var_processor"/>
        <argument key="string" type="service_closure" id="container.env_var_processor"/>
        <argument key="trim" type="service_closure" id="container.env_var_processor"/>
        <argument key="url" type="service_closure" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id="maker.auto_command.make_auth" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:auth" description="Create a Guard authenticator of different flavors"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_authenticator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:auth</argument>
      </call>
      <call method="setDescription">
        <argument>Create a Guard authenticator of different flavors</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_command" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:command" description="Create a new console command class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:command</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new console command class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_component" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:twig-component" description="Create a twig (or live) component"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_twig_component"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:twig-component</argument>
      </call>
      <call method="setDescription">
        <argument>Create a twig (or live) component</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:controller" description="Create a new controller class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:controller</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new controller class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_crud" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:crud" description="Create CRUD for Doctrine entity class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_crud"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:crud</argument>
      </call>
      <call method="setDescription">
        <argument>Create CRUD for Doctrine entity class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_docker_database" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:docker:database" description="Add a database container to your compose.yaml file"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_docker_database"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:docker:database</argument>
      </call>
      <call method="setDescription">
        <argument>Add a database container to your compose.yaml file</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_entity" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:entity" description="Create or update a Doctrine entity class, and optionally an API Platform resource"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_entity"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:entity</argument>
      </call>
      <call method="setDescription">
        <argument>Create or update a Doctrine entity class, and optionally an API Platform resource</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_fixtures" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:fixtures" description="Create a new class to load Doctrine fixtures"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_fixtures"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:fixtures</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new class to load Doctrine fixtures</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:form" description="Create a new form class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:form</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new form class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_listener" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:listener" description="Creates a new event subscriber class or a new event listener class"/>
      <tag name="console.command" command="make:subscriber" description="Deprecated alias of &quot;make:listener&quot;"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_listener"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:listener</argument>
      </call>
      <call method="setAliases">
        <argument type="collection">
          <argument>make:subscriber</argument>
        </argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new event subscriber class or a new event listener class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_message" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:message" description="Create a new message and handler"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_message"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:message</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new message and handler</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:messenger-middleware" description="Create a new messenger middleware"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_messenger_middleware"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:messenger-middleware</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new messenger middleware</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_registration_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:registration-form" description="Create a new registration form system"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_registration_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:registration-form</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new registration form system</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_reset_password" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:reset-password" description="Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_reset_password"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:reset-password</argument>
      </call>
      <call method="setDescription">
        <argument>Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_schedule" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:schedule" description="Create a scheduler component"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_schedule"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:schedule</argument>
      </call>
      <call method="setDescription">
        <argument>Create a scheduler component</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:serializer:encoder" description="Create a new serializer encoder class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_serializer_encoder"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:serializer:encoder</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new serializer encoder class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:serializer:normalizer" description="Create a new serializer normalizer class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_serializer_normalizer"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:serializer:normalizer</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new serializer normalizer class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_extension" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:twig-extension" description="Create a new Twig extension with its runtime class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_twig_extension"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:twig-extension</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new Twig extension with its runtime class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:test" description="Create a new test class"/>
      <tag name="console.command" command="make:unit-test" description="Deprecated alias of &quot;make:test&quot;"/>
      <tag name="console.command" command="make:functional-test" description="Deprecated alias of &quot;make:test&quot;"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:test</argument>
      </call>
      <call method="setAliases">
        <argument type="collection">
          <argument>make:unit-test</argument>
          <argument>make:functional-test</argument>
        </argument>
      </call>
      <call method="setDescription">
        <argument>Create a new test class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_validator" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:validator" description="Create a new validator and constraint class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_validator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new validator and constraint class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_voter" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:voter" description="Create a new security voter class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_voter"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:voter</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new security voter class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_user" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:user" description="Create a new security user class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_user"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:user</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new security user class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_migration" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:migration" description="Create a new migration based on database changes"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_migration"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:migration</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new migration based on database changes</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_stimulus_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:stimulus-controller" description="Create a new Stimulus controller"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_stimulus_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:stimulus-controller</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new Stimulus controller</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_security_form_login" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:security:form-login" description="Generate the code needed for the form_login authenticator"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_form_login"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:security:form-login</argument>
      </call>
      <call method="setDescription">
        <argument>Generate the code needed for the form_login authenticator</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_security_custom" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:security:custom" description="Create a custom security authenticator."/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_custom_authenticator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:security:custom</argument>
      </call>
      <call method="setDescription">
        <argument>Create a custom security authenticator.</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_webhook" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:webhook" description="Create a new Webhook"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_webhook"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.template_linter"/>
      <call method="setName">
        <argument>make:webhook</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new Webhook</argument>
      </call>
    </service>
    <service id=".service_locator.y4_Zrx." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="loader" type="service_closure" id=".errored..service_locator.y4_Zrx..Symfony\Component\Config\Loader\LoaderInterface"/>
      </argument>
    </service>
    <service id=".service_locator.IwVW4W." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="absenceRepository" type="service_closure" id="App\Repository\AbsenceRepository"/>
      </argument>
    </service>
    <service id=".service_locator.c8ntken" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="absence" type="service_closure" id=".errored..service_locator.c8ntken.App\Entity\Absence"/>
      </argument>
    </service>
    <service id=".service_locator.ATt7aga" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security" type="service_closure" id="security.helper"/>
      </argument>
    </service>
    <service id=".service_locator.V.4pGB4" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="absence" type="service_closure" id=".errored..service_locator.V.4pGB4.App\Entity\Absence"/>
        <argument key="security" type="service_closure" id="security.helper"/>
      </argument>
    </service>
    <service id=".service_locator.GHuQGlo" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="absenceRepository" type="service_closure" id="App\Repository\AbsenceRepository"/>
        <argument key="security" type="service_closure" id="security.helper"/>
      </argument>
    </service>
    <service id=".service_locator.izgUQZX" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="album" type="service_closure" id=".errored..service_locator.izgUQZX.App\Entity\Album"/>
        <argument key="repository" type="service_closure" id="App\Repository\ImageRepository"/>
      </argument>
    </service>
    <service id=".service_locator.36EpRsA" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="achatRepository" type="service_closure" id="App\Repository\AchatRepository"/>
      </argument>
    </service>
    <service id=".service_locator.872Jsnj" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service_closure" id="App\Repository\FactureRepository"/>
      </argument>
    </service>
    <service id=".service_locator.bpW2Pi_" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="facture" type="service_closure" id=".errored..service_locator.bpW2Pi_.App\Entity\Facture"/>
        <argument key="solde" type="service_closure" id="App\Complement\Solde"/>
      </argument>
    </service>
    <service id=".service_locator.CxwWrHG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="achat" type="service_closure" id=".errored..service_locator.CxwWrHG.App\Entity\Achat"/>
      </argument>
    </service>
    <service id=".service_locator.jgJPVaA" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="approvisionnementRepository" type="service_closure" id="App\Repository\ApprovisionnementRepository"/>
        <argument key="fournisseurRepository" type="service_closure" id="App\Repository\FournisseurRepository"/>
        <argument key="produitRepository" type="service_closure" id="App\Repository\ProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.zNobzAI" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service_closure" id="App\Repository\ApprovisionnerRepository"/>
      </argument>
    </service>
    <service id=".service_locator.H_twZrM" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fournisseurRepository" type="service_closure" id="App\Repository\FournisseurRepository"/>
        <argument key="produitRepository" type="service_closure" id="App\Repository\ProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.swmLS._" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service_closure" id="App\Repository\ProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.KJUDKN5" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="approvisionner" type="service_closure" id=".errored..service_locator.KJUDKN5.App\Entity\Approvisionner"/>
        <argument key="repository" type="service_closure" id="App\Repository\ApprovisionnementRepository"/>
      </argument>
    </service>
    <service id=".service_locator.SplMHih" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="avoirRepository" type="service_closure" id="App\Repository\AvoirRepository"/>
      </argument>
    </service>
    <service id=".service_locator.a2YEA1b" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service_closure" id="App\Repository\LivrerRepository"/>
      </argument>
    </service>
    <service id=".service_locator._pA1AYV" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service_closure" id="App\Repository\ReclamationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.TrbL_Ht" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="commande" type="service_closure" id=".errored..service_locator.TrbL_Ht.App\Entity\Commande"/>
        <argument key="comprodrepository" type="service_closure" id="App\Repository\CommandeProduitRepository"/>
        <argument key="livrerResteRepository" type="service_closure" id="App\Repository\LivrerResteRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\ProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.nkRrMOH" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="livrerProduitRepository" type="service_closure" id="App\Repository\LivrerProduitRepository"/>
        <argument key="livrerResteRepository" type="service_closure" id="App\Repository\LivrerResteRepository"/>
        <argument key="reclamation" type="service_closure" id=".errored..service_locator.nkRrMOH.App\Entity\Reclamation"/>
        <argument key="repository" type="service_closure" id="App\Repository\ProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.0n1fkzc" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="livrerResteRepository" type="service_closure" id="App\Repository\LivrerResteRepository"/>
      </argument>
    </service>
    <service id=".service_locator.hxmsnV3" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="avoir" type="service_closure" id=".errored..service_locator.hxmsnV3.App\Entity\Avoir"/>
        <argument key="avoirResteRepository" type="service_closure" id="App\Repository\AvoirResteRepository"/>
      </argument>
    </service>
    <service id=".service_locator.zKlKQIW" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="avoir" type="service_closure" id=".errored..service_locator.zKlKQIW.App\Entity\Avoir"/>
      </argument>
    </service>
    <service id=".service_locator.GP7DK30" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="banqueRepository" type="service_closure" id="App\Repository\BanqueRepository"/>
      </argument>
    </service>
    <service id=".service_locator.0_IFjR8" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="banque" type="service_closure" id=".errored..service_locator.0_IFjR8.App\Entity\Banque"/>
      </argument>
    </service>
    <service id=".service_locator.veElpNM" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="calendrierRepository" type="service_closure" id="App\Repository\CalendrierRepository"/>
      </argument>
    </service>
    <service id=".service_locator..b08g3n" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="calendrier" type="service_closure" id=".errored..service_locator..b08g3n.App\Entity\Calendrier"/>
      </argument>
    </service>
    <service id=".service_locator.DFyL8OH" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
      </argument>
    </service>
    <service id=".service_locator.j7wOkYK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categorie" type="service_closure" id=".errored..service_locator.j7wOkYK.App\Entity\Categorie"/>
      </argument>
    </service>
    <service id=".service_locator.CsMkqUa" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
      </argument>
    </service>
    <service id=".errored.KnP4Frw" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface">
      <tag name="container.error" message="Cannot determine controller argument for &quot;App\Controller\ClientController::new()&quot;: the $encoder argument is type-hinted with the non-existent class or interface: &quot;Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface&quot;."/>
    </service>
    <service id=".service_locator.ZOwK68s" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="encoder" type="service_closure" id=".errored.KnP4Frw"/>
        <argument key="tokenGenerator" type="service_closure" id="security.csrf.token_generator"/>
      </argument>
    </service>
    <service id=".service_locator.lTbvCHw" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="client" type="service_closure" id=".errored..service_locator.lTbvCHw.App\Entity\Client"/>
      </argument>
    </service>
    <service id=".service_locator.vRUAr7Q" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="produitRepository" type="service_closure" id="App\Repository\ProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.5DVS3ro" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="produitRepository" type="service_closure" id="App\Repository\ProduitRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\CommandeProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.kyHFend" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service_closure" id="App\Repository\CommandeRepository"/>
      </argument>
    </service>
    <service id=".service_locator.6U8p9sv" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="commande" type="service_closure" id=".errored..service_locator.6U8p9sv.App\Entity\Commande"/>
        <argument key="paiementRepository" type="service_closure" id="App\Repository\PaiementRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\CommandeProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.wXcqpiw" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="paiementRepository" type="service_closure" id="App\Repository\PaiementRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\CommandeProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.AYYV.am" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="commande" type="service_closure" id=".errored..service_locator.AYYV.am.App\Entity\Commande"/>
        <argument key="repository" type="service_closure" id="App\Repository\CommandeProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Ui9XhIN" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service_closure" id="App\Repository\CommandeRepository"/>
        <argument key="user" type="service_closure" id=".errored..service_locator.Ui9XhIN.App\Entity\User"/>
      </argument>
    </service>
    <service id=".service_locator.3aQkSBW" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="congesRepository" type="service_closure" id="App\Repository\CongesRepository"/>
        <argument key="security" type="service_closure" id="security.helper"/>
      </argument>
    </service>
    <service id=".service_locator.YgYapZ6" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security" type="service_closure" id="security.helper"/>
      </argument>
    </service>
    <service id=".service_locator.L9F73kI" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="conges" type="service_closure" id=".errored..service_locator.L9F73kI.App\Entity\Conges"/>
      </argument>
    </service>
    <service id=".service_locator.0TK7yZ8" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="contratRepository" type="service_closure" id="App\Repository\ContratRepository"/>
      </argument>
    </service>
    <service id=".service_locator.xpZJLkN" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="contrat" type="service_closure" id=".errored..service_locator.xpZJLkN.App\Entity\Contrat"/>
      </argument>
    </service>
    <service id=".service_locator.nwITGr8" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="critereEvaluationRepository" type="service_closure" id="App\Repository\CritereEvaluationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.f5JWNKP" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="critereEvaluation" type="service_closure" id=".errored..service_locator.f5JWNKP.App\Entity\CritereEvaluation"/>
      </argument>
    </service>
    <service id=".service_locator.ZOtxAfx" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="demandeExplicationRepository" type="service_closure" id="App\Repository\DemandeExplicationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.dcCJG7q" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="demandeExplications" type="service_closure" id=".errored..service_locator.dcCJG7q.App\Entity\DemandeExplication"/>
      </argument>
    </service>
    <service id=".service_locator.s67.kI6" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="demandeExplication" type="service_closure" id=".errored..service_locator.s67.kI6.App\Entity\DemandeExplication"/>
      </argument>
    </service>
    <service id=".service_locator.im1kX7r" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="demandeExplicationRepository" type="service_closure" id="App\Repository\DemandeExplicationRepository"/>
        <argument key="security" type="service_closure" id="security.helper"/>
      </argument>
    </service>
    <service id=".service_locator.ORb6BpB" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="demandeExplication" type="service_closure" id=".errored..service_locator.ORb6BpB.App\Entity\DemandeExplication"/>
        <argument key="security" type="service_closure" id="security.helper"/>
      </argument>
    </service>
    <service id=".service_locator.Hy7idLG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="departementRepository" type="service_closure" id="App\Repository\DepartementRepository"/>
      </argument>
    </service>
    <service id=".service_locator.EppKkcr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="departement" type="service_closure" id=".errored..service_locator.EppKkcr.App\Entity\Departement"/>
      </argument>
    </service>
    <service id=".service_locator.4iXt.WB" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="depenseRepository" type="service_closure" id="App\Repository\DepenseRepository"/>
      </argument>
    </service>
    <service id=".service_locator.8r3DTNq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="solde" type="service_closure" id="App\Complement\Solde"/>
      </argument>
    </service>
    <service id=".service_locator.2_83HPM" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="depense" type="service_closure" id=".errored..service_locator.2_83HPM.App\Entity\Depense"/>
      </argument>
    </service>
    <service id=".service_locator.JwMuhT7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="employeRepository" type="service_closure" id="App\Repository\EmployeRepository"/>
      </argument>
    </service>
    <service id=".service_locator.hqE0hu0" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="employeRepository" type="service_closure" id="App\Repository\EmployeRepository"/>
        <argument key="security" type="service_closure" id="security.helper"/>
      </argument>
    </service>
    <service id=".service_locator.je7oNoj" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="employe" type="service_closure" id=".errored..service_locator.je7oNoj.App\Entity\Employe"/>
      </argument>
    </service>
    <service id=".service_locator.Q8RAY9A" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="document" type="service_closure" id=".errored..service_locator.Q8RAY9A.App\Entity\Document"/>
      </argument>
    </service>
    <service id=".service_locator.iZWTVGz" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="encoder" type="service_closure" id="security.user_password_hasher"/>
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
      </argument>
    </service>
    <service id=".service_locator.I3mS6IL" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="employe" type="service_closure" id=".errored..service_locator.I3mS6IL.App\Entity\Employe"/>
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
      </argument>
    </service>
    <service id=".service_locator.FjsgjXR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="evaluationRepository" type="service_closure" id="App\Repository\EvaluationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.eheopyZ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="evaluation" type="service_closure" id=".errored..service_locator.eheopyZ.App\Entity\Evaluation"/>
      </argument>
    </service>
    <service id=".service_locator.VSBSvo7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="feedbackRepository" type="service_closure" id="App\Repository\FeedbackRepository"/>
      </argument>
    </service>
    <service id=".service_locator.bembAWs" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="feedback" type="service_closure" id=".errored..service_locator.bembAWs.App\Entity\Feedback"/>
      </argument>
    </service>
    <service id=".service_locator.4ZxvEnm" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service_closure" id="App\Repository\EcritureRepository"/>
      </argument>
    </service>
    <service id=".service_locator.iHHwidk" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="banque" type="service_closure" id=".errored..service_locator.iHHwidk.App\Entity\Banque"/>
        <argument key="repository" type="service_closure" id="App\Repository\EcritureRepository"/>
        <argument key="solde" type="service_closure" id="App\Complement\Solde"/>
      </argument>
    </service>
    <service id=".service_locator.txYFPqg" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="paieRepository" type="service_closure" id="App\Repository\PaieRepository"/>
      </argument>
    </service>
    <service id=".service_locator.2gmBvBo" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="paieRepository" type="service_closure" id="App\Repository\PaieRepository"/>
        <argument key="solde" type="service_closure" id="App\Complement\Solde"/>
      </argument>
    </service>
    <service id=".service_locator.Ai8TDKL" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="financementRepository" type="service_closure" id="App\Repository\FinancementRepository"/>
      </argument>
    </service>
    <service id=".service_locator.5X2ZcxV" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="financement" type="service_closure" id=".errored..service_locator.5X2ZcxV.App\Entity\Financement"/>
      </argument>
    </service>
    <service id=".service_locator.SdimP0A" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="formationRepository" type="service_closure" id="App\Repository\FormationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.dy6wSj2" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="formation" type="service_closure" id=".errored..service_locator.dy6wSj2.App\Entity\Formation"/>
      </argument>
    </service>
    <service id=".service_locator.WZwGqEX" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fournisseurRepository" type="service_closure" id="App\Repository\FournisseurRepository"/>
      </argument>
    </service>
    <service id=".service_locator.ZlrNvMC" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fournisseur" type="service_closure" id=".errored..service_locator.ZlrNvMC.App\Entity\Fournisseur"/>
      </argument>
    </service>
    <service id=".service_locator.Rar7wEt" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="heureSuplementaireRepository" type="service_closure" id="App\Repository\HeureSuplementaireRepository"/>
      </argument>
    </service>
    <service id=".service_locator.mol62a." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="heureSuplementaire" type="service_closure" id=".errored..service_locator.mol62a..App\Entity\HeureSuplementaire"/>
      </argument>
    </service>
    <service id=".service_locator..lRN6Lf" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service_closure" id="App\Repository\StockRepository"/>
      </argument>
    </service>
    <service id=".service_locator.hYKOxsG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="livrerRepository" type="service_closure" id="App\Repository\LivrerRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\CommandeRepository"/>
        <argument key="retourProduitRepository" type="service_closure" id="App\Repository\RetourProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.cKLCI2S" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="commandeRepository" type="service_closure" id="App\Repository\CommandeRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\LivrerRepository"/>
      </argument>
    </service>
    <service id=".service_locator.FMQ3BcF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="commande" type="service_closure" id=".errored..service_locator.FMQ3BcF.App\Entity\Commande"/>
        <argument key="comprodrepository" type="service_closure" id="App\Repository\CommandeProduitRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\ProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.JI6lAHM" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="livrer" type="service_closure" id=".errored..service_locator.JI6lAHM.App\Entity\Livrer"/>
      </argument>
    </service>
    <service id=".service_locator..WiOQnA" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service_closure" id="App\Repository\ProduitRepository"/>
        <argument key="retour" type="service_closure" id=".errored..service_locator..WiOQnA.App\Entity\Retour"/>
        <argument key="retourProduitRepository" type="service_closure" id="App\Repository\RetourProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.o4O0eww" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="commande" type="service_closure" id=".errored..service_locator.o4O0eww.App\Entity\Commande"/>
        <argument key="comprodrepository" type="service_closure" id="App\Repository\CommandeProduitRepository"/>
        <argument key="livrerProduitRepository" type="service_closure" id="App\Repository\LivrerProduitRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\ProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.0BS18HQ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="commande" type="service_closure" id=".errored..service_locator.0BS18HQ.App\Entity\Commande"/>
        <argument key="comprodrepository" type="service_closure" id="App\Repository\CommandeProduitRepository"/>
        <argument key="livrer" type="service_closure" id=".errored..service_locator.0BS18HQ.App\Entity\Livrer"/>
        <argument key="livrerProduitRepository" type="service_closure" id="App\Repository\LivrerProduitRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\ProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.RQY3Y3g" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="livrerProduitRepository" type="service_closure" id="App\Repository\LivrerProduitRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\ProduitRepository"/>
        <argument key="retour" type="service_closure" id=".errored..service_locator.RQY3Y3g.App\Entity\Retour"/>
      </argument>
    </service>
    <service id=".service_locator.5Hn467b" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="commande" type="service_closure" id=".errored..service_locator.5Hn467b.App\Entity\Commande"/>
        <argument key="livrerProduitRepository" type="service_closure" id="App\Repository\LivrerProduitRepository"/>
        <argument key="livrerRepository" type="service_closure" id="App\Repository\LivrerRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\ProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.foeGtlr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="commande" type="service_closure" id=".errored..service_locator.foeGtlr.App\Entity\Commande"/>
        <argument key="livrerResteRepository" type="service_closure" id="App\Repository\LivrerResteRepository"/>
        <argument key="livrerrepository" type="service_closure" id="App\Repository\LivrerRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\ProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Xc.m5Mv" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="livrerrepository" type="service_closure" id="App\Repository\LivrerRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\ProduitRepository"/>
        <argument key="retour" type="service_closure" id=".errored..service_locator.Xc.m5Mv.App\Entity\Retour"/>
        <argument key="retourProduitRepository" type="service_closure" id="App\Repository\RetourProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.9kKwU2t" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="em" type="service_closure" id="doctrine.orm.default_entity_manager"/>
      </argument>
    </service>
    <service id=".service_locator.NttXpgM" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="em" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="message" type="service_closure" id=".errored..service_locator.NttXpgM.App\Entity\MessageRecipient"/>
      </argument>
    </service>
    <service id=".service_locator.lJ.UBt7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="em" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="message" type="service_closure" id=".errored..service_locator.lJ.UBt7.App\Entity\Message"/>
      </argument>
    </service>
    <service id=".service_locator.TZ613Iz" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="noteServiceRepository" type="service_closure" id="App\Repository\NoteServiceRepository"/>
      </argument>
    </service>
    <service id=".errored.S98cLOu" class="App\Controller\Security">
      <tag name="container.error" message="Cannot determine controller argument for &quot;App\Controller\NoteServiceController::new()&quot;: the $security argument is type-hinted with the non-existent class or interface: &quot;App\Controller\Security&quot;. Did you forget to add a use statement?"/>
    </service>
    <service id=".service_locator.nvOEfM." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security" type="service_closure" id=".errored.S98cLOu"/>
      </argument>
    </service>
    <service id=".service_locator.fDTLJwW" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="noteService" type="service_closure" id=".errored..service_locator.fDTLJwW.App\Entity\NoteService"/>
      </argument>
    </service>
    <service id=".service_locator.IXV1LlJ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="heureSuplementaireRepository" type="service_closure" id="App\Repository\HeureSuplementaireRepository"/>
        <argument key="primeRepository" type="service_closure" id="App\Repository\PrimeRepository"/>
        <argument key="retenueRepository" type="service_closure" id="App\Repository\RetenueRepository"/>
      </argument>
    </service>
    <service id=".service_locator.fYOg1aH" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="paie" type="service_closure" id=".errored..service_locator.fYOg1aH.App\Entity\Paie"/>
      </argument>
    </service>
    <service id=".service_locator._DImFIW" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="heureSuplementaireRepository" type="service_closure" id="App\Repository\HeureSuplementaireRepository"/>
        <argument key="primeRepository" type="service_closure" id="App\Repository\PrimeRepository"/>
      </argument>
    </service>
    <service id=".service_locator.J0_MNy." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="paieRepository" type="service_closure" id="App\Repository\PaieRepository"/>
        <argument key="security" type="service_closure" id="security.helper"/>
      </argument>
    </service>
    <service id=".service_locator.5CGjU28" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="approvisionnementRepository" type="service_closure" id="App\Repository\ApprovisionnementRepository"/>
        <argument key="approvisionnerRepository" type="service_closure" id="App\Repository\ApprovisionnerRepository"/>
        <argument key="avoirRepository" type="service_closure" id="App\Repository\AvoirRepository"/>
        <argument key="commandeRepository" type="service_closure" id="App\Repository\CommandeRepository"/>
        <argument key="livrerRepository" type="service_closure" id="App\Repository\LivrerRepository"/>
        <argument key="produitRepository" type="service_closure" id="App\Repository\ProduitRepository"/>
        <argument key="promotionRepository" type="service_closure" id="App\Repository\PromotionRepository"/>
        <argument key="reclamationRepository" type="service_closure" id="App\Repository\ReclamationRepository"/>
        <argument key="repository" type="service_closure" id="App\Repository\CommandeProduitRepository"/>
        <argument key="stockRepository" type="service_closure" id="App\Repository\StockRepository"/>
      </argument>
    </service>
    <service id=".service_locator.w2rYZpG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="produitRepository" type="service_closure" id="App\Repository\ProduitRepository"/>
        <argument key="promotionRepository" type="service_closure" id="App\Repository\PromotionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.zHBsodI" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Produit" type="service_closure" id=".errored..service_locator.zHBsodI.App\Entity\Produit"/>
      </argument>
    </service>
    <service id=".service_locator.rF.gS75" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="posteRepository" type="service_closure" id="App\Repository\PosteRepository"/>
      </argument>
    </service>
    <service id=".service_locator.K.OvH49" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="poste" type="service_closure" id=".errored..service_locator.K.OvH49.App\Entity\Poste"/>
      </argument>
    </service>
    <service id=".service_locator.CQ8XLG_" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="poste" type="service_closure" id=".errored..service_locator.CQ8XLG_.App\Entity\Poste"/>
      </argument>
    </service>
    <service id=".service_locator.tX7IRH1" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="primeRepository" type="service_closure" id="App\Repository\PrimeRepository"/>
      </argument>
    </service>
    <service id=".errored.ki4.f5F" class="App\Controller\Security">
      <tag name="container.error" message="Cannot determine controller argument for &quot;App\Controller\PrimeController::suivi()&quot;: the $security argument is type-hinted with the non-existent class or interface: &quot;App\Controller\Security&quot;. Did you forget to add a use statement?"/>
    </service>
    <service id=".service_locator.HEUeAgL" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security" type="service_closure" id=".errored.ki4.f5F"/>
      </argument>
    </service>
    <service id=".service_locator.MJNrreu" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="prime" type="service_closure" id=".errored..service_locator.MJNrreu.App\Entity\Prime"/>
      </argument>
    </service>
    <service id=".service_locator.SYGkLDo" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="primePerformanceRepository" type="service_closure" id="App\Repository\PrimePerformanceRepository"/>
      </argument>
    </service>
    <service id=".service_locator.yWLnPqK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="primePerformance" type="service_closure" id=".errored..service_locator.yWLnPqK.App\Entity\PrimePerformance"/>
      </argument>
    </service>
    <service id=".service_locator.v5581n1" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="approvisionnementRepository" type="service_closure" id="App\Repository\ApprovisionnementRepository"/>
        <argument key="approvisionnerRepository" type="service_closure" id="App\Repository\ApprovisionnerRepository"/>
      </argument>
    </service>
    <service id=".service_locator.bqZJXZV" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service_closure" id="App\Repository\CommandeProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.ViXcClx" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="produit" type="service_closure" id=".errored..service_locator.ViXcClx.App\Entity\Produit"/>
      </argument>
    </service>
    <service id=".service_locator.gGA2khr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="promotionRepository" type="service_closure" id="App\Repository\PromotionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.G452JTc" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="produitrepo" type="service_closure" id="App\Repository\PromotionProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.A2hTFDL" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="produitrepo" type="service_closure" id="App\Repository\PromotionProduitRepository"/>
        <argument key="promotion" type="service_closure" id=".errored..service_locator.A2hTFDL.App\Entity\Promotion"/>
      </argument>
    </service>
    <service id=".service_locator.4lf9RTo" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="promotion" type="service_closure" id=".errored..service_locator.4lf9RTo.App\Entity\Promotion"/>
      </argument>
    </service>
    <service id=".service_locator.sKXD69h" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reclamationRepository" type="service_closure" id="App\Repository\ReclamationRepository"/>
        <argument key="user" type="service_closure" id=".errored..service_locator.sKXD69h.App\Entity\User"/>
      </argument>
    </service>
    <service id=".service_locator.Hz5btge" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="user" type="service_closure" id=".errored..service_locator.Hz5btge.App\Entity\User"/>
      </argument>
    </service>
    <service id=".service_locator.SY0zWOw" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reclamation" type="service_closure" id=".errored..service_locator.SY0zWOw.App\Entity\Reclamation"/>
      </argument>
    </service>
    <service id=".service_locator.k4Bq10G" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="livrerProduitRepository" type="service_closure" id="App\Repository\LivrerProduitRepository"/>
        <argument key="reclamation" type="service_closure" id=".errored..service_locator.k4Bq10G.App\Entity\Reclamation"/>
      </argument>
    </service>
    <service id=".service_locator.x5JG17." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="remboursementRepository" type="service_closure" id="App\Repository\RemboursementRepository"/>
      </argument>
    </service>
    <service id=".service_locator.PjrYeyB" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="avoir" type="service_closure" id=".errored..service_locator.PjrYeyB.App\Entity\Avoir"/>
        <argument key="avoirResteRepository" type="service_closure" id="App\Repository\AvoirResteRepository"/>
        <argument key="solde" type="service_closure" id="App\Complement\Solde"/>
      </argument>
    </service>
    <service id=".service_locator.p6oBFqB" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="remboursement" type="service_closure" id=".errored..service_locator.p6oBFqB.App\Entity\Remboursement"/>
      </argument>
    </service>
    <service id=".service_locator.9seJ.96" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reponseRepository" type="service_closure" id="App\Repository\ReponseRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Nf.XpWv" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reponse" type="service_closure" id=".errored..service_locator.Nf.XpWv.App\Entity\Reponse"/>
      </argument>
    </service>
    <service id=".service_locator..NLYUmE" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="sanctionRepository" type="service_closure" id="App\Repository\SanctionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.FvaKkR4" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="sanction" type="service_closure" id=".errored..service_locator.FvaKkR4.App\Entity\Sanction"/>
      </argument>
    </service>
    <service id=".service_locator.rSTd.nA" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticationUtils" type="service_closure" id="security.authentication_utils"/>
      </argument>
    </service>
    <service id=".errored.2F.ZoJN" class="Swift_Mailer">
      <tag name="container.error" message="Cannot determine controller argument for &quot;App\Controller\Security\securityController::new()&quot;: the $mail argument is type-hinted with the non-existent class or interface: &quot;Swift_Mailer&quot;."/>
    </service>
    <service id=".service_locator.PPeLVW6" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="encoder" type="service_closure" id="security.user_password_hasher"/>
        <argument key="mail" type="service_closure" id=".errored.2F.ZoJN"/>
        <argument key="tokenGenerator" type="service_closure" id="security.csrf.token_generator"/>
      </argument>
    </service>
    <service id=".service_locator.E9I1y6q" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="encoder" type="service_closure" id="security.user_password_hasher"/>
      </argument>
    </service>
    <service id=".errored.3hoz.E5" class="Swift_Mailer">
      <tag name="container.error" message="Cannot determine controller argument for &quot;App\Controller\Security\securityController::forgotten()&quot;: the $mail argument is type-hinted with the non-existent class or interface: &quot;Swift_Mailer&quot;."/>
    </service>
    <service id=".service_locator.nCXI2As" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mail" type="service_closure" id=".errored.3hoz.E5"/>
        <argument key="tokenGenerator" type="service_closure" id="security.csrf.token_generator"/>
      </argument>
    </service>
    <service id=".service_locator.kPUOGb8" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="userRepository" type="service_closure" id="App\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.4tqk5Qq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="user" type="service_closure" id=".errored..service_locator.4tqk5Qq.App\Entity\User"/>
        <argument key="userRepository" type="service_closure" id="App\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".errored.QbcOcOy" class="App\Controller\Security\UserPasswordEncoderInterface">
      <tag name="container.error" message="Cannot determine controller argument for &quot;App\Controller\Security\securityController::reset()&quot;: the $encoder argument is type-hinted with the non-existent class or interface: &quot;App\Controller\Security\UserPasswordEncoderInterface&quot;. Did you forget to add a use statement?"/>
    </service>
    <service id=".service_locator.GJFCC1V" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="encoder" type="service_closure" id=".errored.QbcOcOy"/>
      </argument>
    </service>
    <service id=".errored.Yx48Gvf" class="App\Controller\Security\UserPasswordEncoderInterface">
      <tag name="container.error" message="Cannot determine controller argument for &quot;App\Controller\Security\securityController::admin_new()&quot;: the $encoder argument is type-hinted with the non-existent class or interface: &quot;App\Controller\Security\UserPasswordEncoderInterface&quot;. Did you forget to add a use statement?"/>
    </service>
    <service id=".errored.1htKsc6" class="Swift_Mailer">
      <tag name="container.error" message="Cannot determine controller argument for &quot;App\Controller\Security\securityController::admin_new()&quot;: the $mail argument is type-hinted with the non-existent class or interface: &quot;Swift_Mailer&quot;."/>
    </service>
    <service id=".service_locator.hMbBiG." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="encoder" type="service_closure" id=".errored.Yx48Gvf"/>
        <argument key="mail" type="service_closure" id=".errored.1htKsc6"/>
        <argument key="tokenGenerator" type="service_closure" id="security.csrf.token_generator"/>
      </argument>
    </service>
    <service id=".service_locator.bUYAhQD" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service_closure" id="App\Repository\RetourRepository"/>
      </argument>
    </service>
    <service id=".service_locator.caIy2eX" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="commande" type="service_closure" id=".errored..service_locator.caIy2eX.App\Entity\Commande"/>
        <argument key="repository" type="service_closure" id="App\Repository\LivrerProduitRepository"/>
      </argument>
    </service>
    <service id=".service_locator.0FQRyqG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repository" type="service_closure" id="App\Repository\RetourProduitRepository"/>
        <argument key="retour" type="service_closure" id=".errored..service_locator.0FQRyqG.App\Entity\Retour"/>
      </argument>
    </service>
    <service id=".service_locator.EZHsKb7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="produit" type="service_closure" id=".errored..service_locator.EZHsKb7.App\Entity\Produit"/>
        <argument key="repository" type="service_closure" id="App\Repository\StockRepository"/>
      </argument>
    </service>
    <service id=".service_locator.rxfCH_1" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="suggestionRepository" type="service_closure" id="App\Repository\SuggestionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.s7Dxo1M" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="suggestion" type="service_closure" id=".errored..service_locator.s7Dxo1M.App\Entity\Suggestion"/>
      </argument>
    </service>
    <service id=".service_locator.XkGCLle" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="testRepository" type="service_closure" id="App\Repository\TestRepository"/>
      </argument>
    </service>
    <service id=".service_locator.iOmYmBM" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="test" type="service_closure" id=".errored..service_locator.iOmYmBM.App\Entity\Test"/>
      </argument>
    </service>
    <service id=".service_locator.VZRjqOk" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
        <argument key="test" type="service_closure" id=".errored..service_locator.VZRjqOk.App\Entity\Test"/>
      </argument>
    </service>
    <service id=".service_locator.Wz47QTF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="transfertRepository" type="service_closure" id="App\Repository\TransfertRepository"/>
      </argument>
    </service>
    <service id=".service_locator.GzP66Op" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="transfert" type="service_closure" id=".errored..service_locator.GzP66Op.App\Entity\Transfert"/>
      </argument>
    </service>
    <service id=".service_locator.f26zfeA" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="typeCongeRepository" type="service_closure" id="App\Repository\TypeCongeRepository"/>
      </argument>
    </service>
    <service id=".service_locator.BpNOuyb" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="typeConge" type="service_closure" id=".errored..service_locator.BpNOuyb.App\Entity\TypeConge"/>
      </argument>
    </service>
    <service id=".service_locator.Wn0oHAn" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="typeContratRepository" type="service_closure" id="App\Repository\TypeContratRepository"/>
      </argument>
    </service>
    <service id=".service_locator.s6oL59b" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="typeContrat" type="service_closure" id=".errored..service_locator.s6oL59b.App\Entity\TypeContrat"/>
      </argument>
    </service>
    <service id=".service_locator.jDRi_o9" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="typeSanctionRepository" type="service_closure" id="App\Repository\TypeSanctionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.5criBkT" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="typeSanction" type="service_closure" id=".errored..service_locator.5criBkT.App\Entity\TypeSanction"/>
      </argument>
    </service>
    <service id=".service_locator.JsBOv4p" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Controller\AbsenceController::AccepterAbsence" type="service_closure" id=".service_locator.GHuQGlo"/>
        <argument key="App\Controller\AbsenceController::AccepterAdmin" type="service_closure" id=".service_locator.GHuQGlo"/>
        <argument key="App\Controller\AbsenceController::RefuserAbsence" type="service_closure" id=".service_locator.GHuQGlo"/>
        <argument key="App\Controller\AbsenceController::RefuserAdmin" type="service_closure" id=".service_locator.GHuQGlo"/>
        <argument key="App\Controller\AbsenceController::accepter" type="service_closure" id=".service_locator.GHuQGlo"/>
        <argument key="App\Controller\AbsenceController::attente" type="service_closure" id=".service_locator.GHuQGlo"/>
        <argument key="App\Controller\AbsenceController::confirmer" type="service_closure" id=".service_locator.V.4pGB4"/>
        <argument key="App\Controller\AbsenceController::detail" type="service_closure" id=".service_locator.c8ntken"/>
        <argument key="App\Controller\AbsenceController::index" type="service_closure" id=".service_locator.IwVW4W."/>
        <argument key="App\Controller\AbsenceController::new" type="service_closure" id=".service_locator.IwVW4W."/>
        <argument key="App\Controller\AbsenceController::refuser" type="service_closure" id=".service_locator.V.4pGB4"/>
        <argument key="App\Controller\AbsenceController::reponse" type="service_closure" id=".service_locator.c8ntken"/>
        <argument key="App\Controller\AbsenceController::show" type="service_closure" id=".service_locator.c8ntken"/>
        <argument key="App\Controller\AbsenceController::suivi" type="service_closure" id=".service_locator.ATt7aga"/>
        <argument key="App\Controller\AccueilController::photo_reservoir" type="service_closure" id=".service_locator.izgUQZX"/>
        <argument key="App\Controller\AchatController::delete" type="service_closure" id=".service_locator.CxwWrHG"/>
        <argument key="App\Controller\AchatController::edit" type="service_closure" id=".service_locator.CxwWrHG"/>
        <argument key="App\Controller\AchatController::index" type="service_closure" id=".service_locator.36EpRsA"/>
        <argument key="App\Controller\AchatController::listfacture" type="service_closure" id=".service_locator.872Jsnj"/>
        <argument key="App\Controller\AchatController::new" type="service_closure" id=".service_locator.bpW2Pi_"/>
        <argument key="App\Controller\AchatController::show" type="service_closure" id=".service_locator.CxwWrHG"/>
        <argument key="App\Controller\ApprovisionnementController::add" type="service_closure" id=".service_locator.H_twZrM"/>
        <argument key="App\Controller\ApprovisionnementController::delete" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\ApprovisionnementController::details" type="service_closure" id=".service_locator.KJUDKN5"/>
        <argument key="App\Controller\ApprovisionnementController::detailsprint" type="service_closure" id=".service_locator.KJUDKN5"/>
        <argument key="App\Controller\ApprovisionnementController::fournisseur" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\ApprovisionnementController::historique" type="service_closure" id=".service_locator.zNobzAI"/>
        <argument key="App\Controller\ApprovisionnementController::index" type="service_closure" id=".service_locator.jgJPVaA"/>
        <argument key="App\Controller\AvoirController::choix" type="service_closure" id=".service_locator.SplMHih"/>
        <argument key="App\Controller\AvoirController::delete" type="service_closure" id=".service_locator.zKlKQIW"/>
        <argument key="App\Controller\AvoirController::edit" type="service_closure" id=".service_locator.zKlKQIW"/>
        <argument key="App\Controller\AvoirController::index" type="service_closure" id=".service_locator.SplMHih"/>
        <argument key="App\Controller\AvoirController::newreclamation" type="service_closure" id=".service_locator.nkRrMOH"/>
        <argument key="App\Controller\AvoirController::newreste" type="service_closure" id=".service_locator.TrbL_Ht"/>
        <argument key="App\Controller\AvoirController::reclamation" type="service_closure" id=".service_locator._pA1AYV"/>
        <argument key="App\Controller\AvoirController::reste" type="service_closure" id=".service_locator.a2YEA1b"/>
        <argument key="App\Controller\AvoirController::show" type="service_closure" id=".service_locator.hxmsnV3"/>
        <argument key="App\Controller\AvoirController::showprint" type="service_closure" id=".service_locator.hxmsnV3"/>
        <argument key="App\Controller\AvoirController::validernewreste" type="service_closure" id=".service_locator.0n1fkzc"/>
        <argument key="App\Controller\BanqueController::delete" type="service_closure" id=".service_locator.0_IFjR8"/>
        <argument key="App\Controller\BanqueController::edit" type="service_closure" id=".service_locator.0_IFjR8"/>
        <argument key="App\Controller\BanqueController::index" type="service_closure" id=".service_locator.GP7DK30"/>
        <argument key="App\Controller\BanqueController::show" type="service_closure" id=".service_locator.0_IFjR8"/>
        <argument key="App\Controller\CalendrierController::delete" type="service_closure" id=".service_locator..b08g3n"/>
        <argument key="App\Controller\CalendrierController::edit" type="service_closure" id=".service_locator..b08g3n"/>
        <argument key="App\Controller\CalendrierController::index" type="service_closure" id=".service_locator.veElpNM"/>
        <argument key="App\Controller\CalendrierController::show" type="service_closure" id=".service_locator..b08g3n"/>
        <argument key="App\Controller\CalendrierController::suivi" type="service_closure" id=".service_locator.veElpNM"/>
        <argument key="App\Controller\CategorieController::delete" type="service_closure" id=".service_locator.j7wOkYK"/>
        <argument key="App\Controller\CategorieController::edit" type="service_closure" id=".service_locator.j7wOkYK"/>
        <argument key="App\Controller\CategorieController::index" type="service_closure" id=".service_locator.DFyL8OH"/>
        <argument key="App\Controller\CategorieController::show" type="service_closure" id=".service_locator.j7wOkYK"/>
        <argument key="App\Controller\ClientController::edit" type="service_closure" id=".service_locator.lTbvCHw"/>
        <argument key="App\Controller\ClientController::index" type="service_closure" id=".service_locator.CsMkqUa"/>
        <argument key="App\Controller\ClientController::new" type="service_closure" id=".service_locator.ZOwK68s"/>
        <argument key="App\Controller\CommandeController::allcommande" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CommandeController::credit" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CommandeController::details" type="service_closure" id=".service_locator.6U8p9sv"/>
        <argument key="App\Controller\CommandeController::extranet" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\CommandeController::histo_admin" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CommandeController::history" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CommandeController::imprimer" type="service_closure" id=".service_locator.AYYV.am"/>
        <argument key="App\Controller\CommandeController::imprimerextranet" type="service_closure" id=".service_locator.AYYV.am"/>
        <argument key="App\Controller\CommandeController::index" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\CommandeController::paiement" type="service_closure" id=".service_locator.AYYV.am"/>
        <argument key="App\Controller\CommandeController::paiementChoix" type="service_closure" id=".service_locator.wXcqpiw"/>
        <argument key="App\Controller\CommandeController::paiementChoixextranet" type="service_closure" id=".service_locator.wXcqpiw"/>
        <argument key="App\Controller\CommandeController::paiementClient" type="service_closure" id=".service_locator.6U8p9sv"/>
        <argument key="App\Controller\CommandeController::paiementcredit" type="service_closure" id=".service_locator.AYYV.am"/>
        <argument key="App\Controller\CommandeController::printdetails" type="service_closure" id=".service_locator.6U8p9sv"/>
        <argument key="App\Controller\CommandeController::suivre" type="service_closure" id=".service_locator.Ui9XhIN"/>
        <argument key="App\Controller\CommandeController::validationcredit" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CommandeController::valider" type="service_closure" id=".service_locator.5DVS3ro"/>
        <argument key="App\Controller\CommandeController::validercredit" type="service_closure" id=".service_locator.AYYV.am"/>
        <argument key="App\Controller\CommandeController::validerextranet" type="service_closure" id=".service_locator.5DVS3ro"/>
        <argument key="App\Controller\CommandeController::voscommande" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CommandeController::voscommandeextranet" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CongeController::accepter" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController::accepterAdmin" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController::approuver" type="service_closure" id=".service_locator.L9F73kI"/>
        <argument key="App\Controller\CongeController::confirmer" type="service_closure" id=".service_locator.L9F73kI"/>
        <argument key="App\Controller\CongeController::decliner" type="service_closure" id=".service_locator.L9F73kI"/>
        <argument key="App\Controller\CongeController::demande" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController::demandeAdmin" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController::new" type="service_closure" id=".service_locator.YgYapZ6"/>
        <argument key="App\Controller\CongeController::refuser" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController::refuserAdmin" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController::rejeter" type="service_closure" id=".service_locator.L9F73kI"/>
        <argument key="App\Controller\CongeController::traitement" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController::traitementAdmin" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\ContratController::delete" type="service_closure" id=".service_locator.xpZJLkN"/>
        <argument key="App\Controller\ContratController::detail" type="service_closure" id=".service_locator.xpZJLkN"/>
        <argument key="App\Controller\ContratController::edit" type="service_closure" id=".service_locator.xpZJLkN"/>
        <argument key="App\Controller\ContratController::index" type="service_closure" id=".service_locator.0TK7yZ8"/>
        <argument key="App\Controller\ContratController::print" type="service_closure" id=".service_locator.xpZJLkN"/>
        <argument key="App\Controller\ContratController::show" type="service_closure" id=".service_locator.xpZJLkN"/>
        <argument key="App\Controller\ContratController::suivi" type="service_closure" id=".service_locator.YgYapZ6"/>
        <argument key="App\Controller\CritereEvaluationController::delete" type="service_closure" id=".service_locator.f5JWNKP"/>
        <argument key="App\Controller\CritereEvaluationController::edit" type="service_closure" id=".service_locator.f5JWNKP"/>
        <argument key="App\Controller\CritereEvaluationController::index" type="service_closure" id=".service_locator.nwITGr8"/>
        <argument key="App\Controller\CritereEvaluationController::show" type="service_closure" id=".service_locator.f5JWNKP"/>
        <argument key="App\Controller\DemandeExplicationController::details" type="service_closure" id=".service_locator.ORb6BpB"/>
        <argument key="App\Controller\DemandeExplicationController::index" type="service_closure" id=".service_locator.ZOtxAfx"/>
        <argument key="App\Controller\DemandeExplicationController::new" type="service_closure" id=".service_locator.YgYapZ6"/>
        <argument key="App\Controller\DemandeExplicationController::reponse" type="service_closure" id=".service_locator.s67.kI6"/>
        <argument key="App\Controller\DemandeExplicationController::show" type="service_closure" id=".service_locator.dcCJG7q"/>
        <argument key="App\Controller\DemandeExplicationController::suivi" type="service_closure" id=".service_locator.im1kX7r"/>
        <argument key="App\Controller\DepartementController::delete" type="service_closure" id=".service_locator.EppKkcr"/>
        <argument key="App\Controller\DepartementController::edit" type="service_closure" id=".service_locator.EppKkcr"/>
        <argument key="App\Controller\DepartementController::index" type="service_closure" id=".service_locator.Hy7idLG"/>
        <argument key="App\Controller\DepartementController::show" type="service_closure" id=".service_locator.EppKkcr"/>
        <argument key="App\Controller\DepenseController::delete" type="service_closure" id=".service_locator.2_83HPM"/>
        <argument key="App\Controller\DepenseController::edit" type="service_closure" id=".service_locator.2_83HPM"/>
        <argument key="App\Controller\DepenseController::index" type="service_closure" id=".service_locator.4iXt.WB"/>
        <argument key="App\Controller\DepenseController::new" type="service_closure" id=".service_locator.8r3DTNq"/>
        <argument key="App\Controller\DepenseController::show" type="service_closure" id=".service_locator.2_83HPM"/>
        <argument key="App\Controller\DetteController::index" type="service_closure" id=".service_locator.Ui9XhIN"/>
        <argument key="App\Controller\DetteController::show" type="service_closure" id=".service_locator.AYYV.am"/>
        <argument key="App\Controller\DocumentController::delete" type="service_closure" id=".service_locator.Q8RAY9A"/>
        <argument key="App\Controller\DocumentController::edit" type="service_closure" id=".service_locator.Q8RAY9A"/>
        <argument key="App\Controller\DocumentController::index" type="service_closure" id=".service_locator.JwMuhT7"/>
        <argument key="App\Controller\DocumentController::show" type="service_closure" id=".service_locator.je7oNoj"/>
        <argument key="App\Controller\DocumentController::suivi" type="service_closure" id=".service_locator.hqE0hu0"/>
        <argument key="App\Controller\DocumentController::suiviShow" type="service_closure" id=".service_locator.Q8RAY9A"/>
        <argument key="App\Controller\EmployeController::edit" type="service_closure" id=".service_locator.I3mS6IL"/>
        <argument key="App\Controller\EmployeController::index" type="service_closure" id=".service_locator.CsMkqUa"/>
        <argument key="App\Controller\EmployeController::manage" type="service_closure" id=".service_locator.CsMkqUa"/>
        <argument key="App\Controller\EmployeController::new" type="service_closure" id=".service_locator.iZWTVGz"/>
        <argument key="App\Controller\EmployeController::show" type="service_closure" id=".service_locator.je7oNoj"/>
        <argument key="App\Controller\EmployeController::toggleStatus" type="service_closure" id=".service_locator.I3mS6IL"/>
        <argument key="App\Controller\EvaluationController::delete" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\EvaluationController::edit" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\EvaluationController::index" type="service_closure" id=".service_locator.FjsgjXR"/>
        <argument key="App\Controller\EvaluationController::show" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\EvaluationController::suivi" type="service_closure" id=".service_locator.ATt7aga"/>
        <argument key="App\Controller\EvaluationController::suiviShow" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\FeedbackController::delete" type="service_closure" id=".service_locator.bembAWs"/>
        <argument key="App\Controller\FeedbackController::edit" type="service_closure" id=".service_locator.bembAWs"/>
        <argument key="App\Controller\FeedbackController::index" type="service_closure" id=".service_locator.VSBSvo7"/>
        <argument key="App\Controller\FeedbackController::new" type="service_closure" id=".service_locator.ATt7aga"/>
        <argument key="App\Controller\FeedbackController::show" type="service_closure" id=".service_locator.bembAWs"/>
        <argument key="App\Controller\FeedbackController::suivi" type="service_closure" id=".service_locator.ATt7aga"/>
        <argument key="App\Controller\FeedbackController::suiviShow" type="service_closure" id=".service_locator.bembAWs"/>
        <argument key="App\Controller\FinanceController::brouyard" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController::brouyardBanque" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController::brouyardBanque_print" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController::brouyardCaisse" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController::brouyardCaisse_print" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController::brouyard_print" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController::index" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController::journalCompte" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController::journalbanque" type="service_closure" id=".service_locator.iHHwidk"/>
        <argument key="App\Controller\FinanceController::payer" type="service_closure" id=".service_locator.2gmBvBo"/>
        <argument key="App\Controller\FinanceController::payertous" type="service_closure" id=".service_locator.2gmBvBo"/>
        <argument key="App\Controller\FinanceController::salaire" type="service_closure" id=".service_locator.txYFPqg"/>
        <argument key="App\Controller\FinancementController::delete" type="service_closure" id=".service_locator.5X2ZcxV"/>
        <argument key="App\Controller\FinancementController::edit" type="service_closure" id=".service_locator.5X2ZcxV"/>
        <argument key="App\Controller\FinancementController::index" type="service_closure" id=".service_locator.Ai8TDKL"/>
        <argument key="App\Controller\FinancementController::show" type="service_closure" id=".service_locator.5X2ZcxV"/>
        <argument key="App\Controller\FormationController::delete" type="service_closure" id=".service_locator.dy6wSj2"/>
        <argument key="App\Controller\FormationController::edit" type="service_closure" id=".service_locator.dy6wSj2"/>
        <argument key="App\Controller\FormationController::index" type="service_closure" id=".service_locator.SdimP0A"/>
        <argument key="App\Controller\FormationController::show" type="service_closure" id=".service_locator.dy6wSj2"/>
        <argument key="App\Controller\FournisseurController::delete" type="service_closure" id=".service_locator.ZlrNvMC"/>
        <argument key="App\Controller\FournisseurController::edit" type="service_closure" id=".service_locator.ZlrNvMC"/>
        <argument key="App\Controller\FournisseurController::index" type="service_closure" id=".service_locator.WZwGqEX"/>
        <argument key="App\Controller\FournisseurController::new" type="service_closure" id=".service_locator.CsMkqUa"/>
        <argument key="App\Controller\FournisseurController::show" type="service_closure" id=".service_locator.ZlrNvMC"/>
        <argument key="App\Controller\HeureSuplementaireController::delete" type="service_closure" id=".service_locator.mol62a."/>
        <argument key="App\Controller\HeureSuplementaireController::edit" type="service_closure" id=".service_locator.mol62a."/>
        <argument key="App\Controller\HeureSuplementaireController::index" type="service_closure" id=".service_locator.Rar7wEt"/>
        <argument key="App\Controller\HeureSuplementaireController::show" type="service_closure" id=".service_locator.mol62a."/>
        <argument key="App\Controller\HeureSuplementaireController::suivi" type="service_closure" id=".service_locator.YgYapZ6"/>
        <argument key="App\Controller\LivrerController::delete" type="service_closure" id=".service_locator.JI6lAHM"/>
        <argument key="App\Controller\LivrerController::details" type="service_closure" id=".service_locator..lRN6Lf"/>
        <argument key="App\Controller\LivrerController::histo_admin" type="service_closure" id=".service_locator.cKLCI2S"/>
        <argument key="App\Controller\LivrerController::history_show" type="service_closure" id=".service_locator.5Hn467b"/>
        <argument key="App\Controller\LivrerController::history_show_print" type="service_closure" id=".service_locator.5Hn467b"/>
        <argument key="App\Controller\LivrerController::index" type="service_closure" id=".service_locator.hYKOxsG"/>
        <argument key="App\Controller\LivrerController::livreurhistoriqueshow" type="service_closure" id=".service_locator.JI6lAHM"/>
        <argument key="App\Controller\LivrerController::livreurshow" type="service_closure" id=".service_locator.JI6lAHM"/>
        <argument key="App\Controller\LivrerController::modif" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\LivrerController::newresteprint" type="service_closure" id=".service_locator.0BS18HQ"/>
        <argument key="App\Controller\LivrerController::reste" type="service_closure" id=".service_locator.TrbL_Ht"/>
        <argument key="App\Controller\LivrerController::reste_valider" type="service_closure" id=".service_locator.foeGtlr"/>
        <argument key="App\Controller\LivrerController::resteprint" type="service_closure" id=".service_locator.o4O0eww"/>
        <argument key="App\Controller\LivrerController::retour" type="service_closure" id=".service_locator..WiOQnA"/>
        <argument key="App\Controller\LivrerController::retour_valider" type="service_closure" id=".service_locator.Xc.m5Mv"/>
        <argument key="App\Controller\LivrerController::retourprint" type="service_closure" id=".service_locator.RQY3Y3g"/>
        <argument key="App\Controller\LivrerController::show" type="service_closure" id=".service_locator.FMQ3BcF"/>
        <argument key="App\Controller\LivrerController::test" type="service_closure" id=".service_locator..lRN6Lf"/>
        <argument key="App\Controller\LivrerController::valider" type="service_closure" id=".service_locator.FMQ3BcF"/>
        <argument key="App\Controller\LivrerController::validerlivreur" type="service_closure" id=".service_locator.JI6lAHM"/>
        <argument key="App\Controller\LivrerController::validerproduit" type="service_closure" id=".service_locator..lRN6Lf"/>
        <argument key="App\Controller\MessageController::delete" type="service_closure" id=".service_locator.NttXpgM"/>
        <argument key="App\Controller\MessageController::destdelete" type="service_closure" id=".service_locator.lJ.UBt7"/>
        <argument key="App\Controller\MessageController::index" type="service_closure" id=".service_locator.9kKwU2t"/>
        <argument key="App\Controller\MessageController::read" type="service_closure" id=".service_locator.NttXpgM"/>
        <argument key="App\Controller\MessageController::readsend" type="service_closure" id=".service_locator.lJ.UBt7"/>
        <argument key="App\Controller\MessageController::received" type="service_closure" id=".service_locator.9kKwU2t"/>
        <argument key="App\Controller\MessageController::reply" type="service_closure" id=".service_locator.NttXpgM"/>
        <argument key="App\Controller\MessageController::restore" type="service_closure" id=".service_locator.lJ.UBt7"/>
        <argument key="App\Controller\MessageController::send" type="service_closure" id=".service_locator.9kKwU2t"/>
        <argument key="App\Controller\MessageController::sent" type="service_closure" id=".service_locator.9kKwU2t"/>
        <argument key="App\Controller\MessageController::trash" type="service_closure" id=".service_locator.9kKwU2t"/>
        <argument key="App\Controller\NoteServiceController::delete" type="service_closure" id=".service_locator.fDTLJwW"/>
        <argument key="App\Controller\NoteServiceController::edit" type="service_closure" id=".service_locator.fDTLJwW"/>
        <argument key="App\Controller\NoteServiceController::index" type="service_closure" id=".service_locator.TZ613Iz"/>
        <argument key="App\Controller\NoteServiceController::new" type="service_closure" id=".service_locator.nvOEfM."/>
        <argument key="App\Controller\NoteServiceController::show" type="service_closure" id=".service_locator.fDTLJwW"/>
        <argument key="App\Controller\PaieController::historique" type="service_closure" id=".service_locator.txYFPqg"/>
        <argument key="App\Controller\PaieController::historiqueBulletin" type="service_closure" id=".service_locator.txYFPqg"/>
        <argument key="App\Controller\PaieController::historiqueMonthCurent" type="service_closure" id=".service_locator.txYFPqg"/>
        <argument key="App\Controller\PaieController::historiqueShow" type="service_closure" id=".service_locator.fYOg1aH"/>
        <argument key="App\Controller\PaieController::new" type="service_closure" id=".service_locator.IXV1LlJ"/>
        <argument key="App\Controller\PaieController::paiement" type="service_closure" id=".service_locator.J0_MNy."/>
        <argument key="App\Controller\PaieController::paimentDetails" type="service_closure" id=".service_locator.fYOg1aH"/>
        <argument key="App\Controller\PaieController::show" type="service_closure" id=".service_locator._DImFIW"/>
        <argument key="App\Controller\PaieController::valider" type="service_closure" id=".service_locator._DImFIW"/>
        <argument key="App\Controller\PanierController::add" type="service_closure" id=".service_locator.w2rYZpG"/>
        <argument key="App\Controller\PanierController::addextranet" type="service_closure" id=".service_locator.w2rYZpG"/>
        <argument key="App\Controller\PanierController::delete" type="service_closure" id=".service_locator.zHBsodI"/>
        <argument key="App\Controller\PanierController::index" type="service_closure" id=".service_locator.5CGjU28"/>
        <argument key="App\Controller\PosteController::attribuerEmployes" type="service_closure" id=".service_locator.K.OvH49"/>
        <argument key="App\Controller\PosteController::delete" type="service_closure" id=".service_locator.CQ8XLG_"/>
        <argument key="App\Controller\PosteController::edit" type="service_closure" id=".service_locator.CQ8XLG_"/>
        <argument key="App\Controller\PosteController::index" type="service_closure" id=".service_locator.rF.gS75"/>
        <argument key="App\Controller\PosteController::show" type="service_closure" id=".service_locator.K.OvH49"/>
        <argument key="App\Controller\PrimeController::delete" type="service_closure" id=".service_locator.MJNrreu"/>
        <argument key="App\Controller\PrimeController::edit" type="service_closure" id=".service_locator.MJNrreu"/>
        <argument key="App\Controller\PrimeController::index" type="service_closure" id=".service_locator.tX7IRH1"/>
        <argument key="App\Controller\PrimeController::show" type="service_closure" id=".service_locator.MJNrreu"/>
        <argument key="App\Controller\PrimeController::suivi" type="service_closure" id=".service_locator.HEUeAgL"/>
        <argument key="App\Controller\PrimePerformanceController::delete" type="service_closure" id=".service_locator.yWLnPqK"/>
        <argument key="App\Controller\PrimePerformanceController::edit" type="service_closure" id=".service_locator.yWLnPqK"/>
        <argument key="App\Controller\PrimePerformanceController::index" type="service_closure" id=".service_locator.SYGkLDo"/>
        <argument key="App\Controller\PrimePerformanceController::show" type="service_closure" id=".service_locator.yWLnPqK"/>
        <argument key="App\Controller\ProduitController::arrivage" type="service_closure" id=".service_locator.v5581n1"/>
        <argument key="App\Controller\ProduitController::arrivage_admin" type="service_closure" id=".service_locator.v5581n1"/>
        <argument key="App\Controller\ProduitController::delete" type="service_closure" id=".service_locator.ViXcClx"/>
        <argument key="App\Controller\ProduitController::edit" type="service_closure" id=".service_locator.ViXcClx"/>
        <argument key="App\Controller\ProduitController::index" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\ProduitController::nouveaute" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\ProduitController::show" type="service_closure" id=".service_locator.ViXcClx"/>
        <argument key="App\Controller\ProduitController::top" type="service_closure" id=".service_locator.bqZJXZV"/>
        <argument key="App\Controller\ProduitController::vente" type="service_closure" id=".service_locator.bqZJXZV"/>
        <argument key="App\Controller\ProduitController::vente_admin" type="service_closure" id=".service_locator.bqZJXZV"/>
        <argument key="App\Controller\PromotionController::activer" type="service_closure" id=".service_locator.G452JTc"/>
        <argument key="App\Controller\PromotionController::add" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\PromotionController::arreter" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\PromotionController::cancel" type="service_closure" id=".service_locator.4lf9RTo"/>
        <argument key="App\Controller\PromotionController::courante" type="service_closure" id=".service_locator.gGA2khr"/>
        <argument key="App\Controller\PromotionController::edit" type="service_closure" id=".service_locator.4lf9RTo"/>
        <argument key="App\Controller\PromotionController::index" type="service_closure" id=".service_locator.gGA2khr"/>
        <argument key="App\Controller\PromotionController::new" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\PromotionController::promodelete" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\PromotionController::show" type="service_closure" id=".service_locator.A2hTFDL"/>
        <argument key="App\Controller\ReclamationController::clo" type="service_closure" id=".service_locator.sKXD69h"/>
        <argument key="App\Controller\ReclamationController::cloturer" type="service_closure" id=".service_locator.SY0zWOw"/>
        <argument key="App\Controller\ReclamationController::delete" type="service_closure" id=".service_locator.SY0zWOw"/>
        <argument key="App\Controller\ReclamationController::edit" type="service_closure" id=".service_locator.SY0zWOw"/>
        <argument key="App\Controller\ReclamationController::index" type="service_closure" id=".service_locator.sKXD69h"/>
        <argument key="App\Controller\ReclamationController::new" type="service_closure" id=".service_locator.Hz5btge"/>
        <argument key="App\Controller\ReclamationController::show" type="service_closure" id=".service_locator.k4Bq10G"/>
        <argument key="App\Controller\RemboursementController::avoir" type="service_closure" id=".service_locator.PjrYeyB"/>
        <argument key="App\Controller\RemboursementController::avoir_list" type="service_closure" id=".service_locator.SplMHih"/>
        <argument key="App\Controller\RemboursementController::delete" type="service_closure" id=".service_locator.p6oBFqB"/>
        <argument key="App\Controller\RemboursementController::edit" type="service_closure" id=".service_locator.p6oBFqB"/>
        <argument key="App\Controller\RemboursementController::financementapport" type="service_closure" id=".service_locator.8r3DTNq"/>
        <argument key="App\Controller\RemboursementController::financementpret" type="service_closure" id=".service_locator.8r3DTNq"/>
        <argument key="App\Controller\RemboursementController::index" type="service_closure" id=".service_locator.x5JG17."/>
        <argument key="App\Controller\RemboursementController::show" type="service_closure" id=".service_locator.p6oBFqB"/>
        <argument key="App\Controller\ReponseController::delete" type="service_closure" id=".service_locator.Nf.XpWv"/>
        <argument key="App\Controller\ReponseController::edit" type="service_closure" id=".service_locator.Nf.XpWv"/>
        <argument key="App\Controller\ReponseController::index" type="service_closure" id=".service_locator.9seJ.96"/>
        <argument key="App\Controller\ReponseController::new" type="service_closure" id=".service_locator.SY0zWOw"/>
        <argument key="App\Controller\ReponseController::show" type="service_closure" id=".service_locator.Nf.XpWv"/>
        <argument key="App\Controller\SanctionController::delete" type="service_closure" id=".service_locator.FvaKkR4"/>
        <argument key="App\Controller\SanctionController::edit" type="service_closure" id=".service_locator.FvaKkR4"/>
        <argument key="App\Controller\SanctionController::index" type="service_closure" id=".service_locator..NLYUmE"/>
        <argument key="App\Controller\SanctionController::show" type="service_closure" id=".service_locator.FvaKkR4"/>
        <argument key="App\Controller\SanctionController::suivi" type="service_closure" id=".service_locator.YgYapZ6"/>
        <argument key="App\Controller\SecurityController::login" type="service_closure" id=".service_locator.rSTd.nA"/>
        <argument key="App\Controller\Security\securityController::admin_new" type="service_closure" id=".service_locator.hMbBiG."/>
        <argument key="App\Controller\Security\securityController::change" type="service_closure" id=".service_locator.E9I1y6q"/>
        <argument key="App\Controller\Security\securityController::clients" type="service_closure" id=".service_locator.kPUOGb8"/>
        <argument key="App\Controller\Security\securityController::edit_user" type="service_closure" id=".service_locator.Hz5btge"/>
        <argument key="App\Controller\Security\securityController::forgotten" type="service_closure" id=".service_locator.nCXI2As"/>
        <argument key="App\Controller\Security\securityController::new" type="service_closure" id=".service_locator.PPeLVW6"/>
        <argument key="App\Controller\Security\securityController::reset" type="service_closure" id=".service_locator.GJFCC1V"/>
        <argument key="App\Controller\Security\securityController::user" type="service_closure" id=".service_locator.4tqk5Qq"/>
        <argument key="App\Controller\Security\securityController::users" type="service_closure" id=".service_locator.kPUOGb8"/>
        <argument key="App\Controller\StockController::add" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\StockController::delete" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\StockController::peremption" type="service_closure" id=".service_locator..lRN6Lf"/>
        <argument key="App\Controller\StockController::produit" type="service_closure" id=".service_locator.EZHsKb7"/>
        <argument key="App\Controller\StockController::produitprint" type="service_closure" id=".service_locator.EZHsKb7"/>
        <argument key="App\Controller\StockController::retour" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\StockController::retour_show" type="service_closure" id=".service_locator.caIy2eX"/>
        <argument key="App\Controller\StockController::retourhistoryshow" type="service_closure" id=".service_locator.0FQRyqG"/>
        <argument key="App\Controller\StockController::retourindex" type="service_closure" id=".service_locator.bUYAhQD"/>
        <argument key="App\Controller\StockController::rupture" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\StockController::stock" type="service_closure" id=".service_locator..lRN6Lf"/>
        <argument key="App\Controller\StockController::surveiller" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\SuggestionController::delete" type="service_closure" id=".service_locator.s7Dxo1M"/>
        <argument key="App\Controller\SuggestionController::edit" type="service_closure" id=".service_locator.s7Dxo1M"/>
        <argument key="App\Controller\SuggestionController::index" type="service_closure" id=".service_locator.rxfCH_1"/>
        <argument key="App\Controller\SuggestionController::show" type="service_closure" id=".service_locator.s7Dxo1M"/>
        <argument key="App\Controller\TestController::delete" type="service_closure" id=".service_locator.VZRjqOk"/>
        <argument key="App\Controller\TestController::edit" type="service_closure" id=".service_locator.VZRjqOk"/>
        <argument key="App\Controller\TestController::index" type="service_closure" id=".service_locator.XkGCLle"/>
        <argument key="App\Controller\TestController::new" type="service_closure" id=".service_locator.CsMkqUa"/>
        <argument key="App\Controller\TestController::show" type="service_closure" id=".service_locator.iOmYmBM"/>
        <argument key="App\Controller\TransfertController::banque" type="service_closure" id=".service_locator.8r3DTNq"/>
        <argument key="App\Controller\TransfertController::caisse" type="service_closure" id=".service_locator.8r3DTNq"/>
        <argument key="App\Controller\TransfertController::delete" type="service_closure" id=".service_locator.GzP66Op"/>
        <argument key="App\Controller\TransfertController::edit" type="service_closure" id=".service_locator.GzP66Op"/>
        <argument key="App\Controller\TransfertController::index" type="service_closure" id=".service_locator.Wz47QTF"/>
        <argument key="App\Controller\TransfertController::show" type="service_closure" id=".service_locator.GzP66Op"/>
        <argument key="App\Controller\TypeCongeController::delete" type="service_closure" id=".service_locator.BpNOuyb"/>
        <argument key="App\Controller\TypeCongeController::edit" type="service_closure" id=".service_locator.BpNOuyb"/>
        <argument key="App\Controller\TypeCongeController::index" type="service_closure" id=".service_locator.f26zfeA"/>
        <argument key="App\Controller\TypeCongeController::show" type="service_closure" id=".service_locator.BpNOuyb"/>
        <argument key="App\Controller\TypeContratController::delete" type="service_closure" id=".service_locator.s6oL59b"/>
        <argument key="App\Controller\TypeContratController::edit" type="service_closure" id=".service_locator.s6oL59b"/>
        <argument key="App\Controller\TypeContratController::index" type="service_closure" id=".service_locator.Wn0oHAn"/>
        <argument key="App\Controller\TypeContratController::show" type="service_closure" id=".service_locator.s6oL59b"/>
        <argument key="App\Controller\TypeSanctionController::delete" type="service_closure" id=".service_locator.5criBkT"/>
        <argument key="App\Controller\TypeSanctionController::edit" type="service_closure" id=".service_locator.5criBkT"/>
        <argument key="App\Controller\TypeSanctionController::index" type="service_closure" id=".service_locator.jDRi_o9"/>
        <argument key="App\Controller\TypeSanctionController::show" type="service_closure" id=".service_locator.5criBkT"/>
        <argument key="App\Kernel::loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="App\Kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel::loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="App\Controller\AbsenceController:AccepterAbsence" type="service_closure" id=".service_locator.GHuQGlo"/>
        <argument key="App\Controller\AbsenceController:AccepterAdmin" type="service_closure" id=".service_locator.GHuQGlo"/>
        <argument key="App\Controller\AbsenceController:RefuserAbsence" type="service_closure" id=".service_locator.GHuQGlo"/>
        <argument key="App\Controller\AbsenceController:RefuserAdmin" type="service_closure" id=".service_locator.GHuQGlo"/>
        <argument key="App\Controller\AbsenceController:accepter" type="service_closure" id=".service_locator.GHuQGlo"/>
        <argument key="App\Controller\AbsenceController:attente" type="service_closure" id=".service_locator.GHuQGlo"/>
        <argument key="App\Controller\AbsenceController:confirmer" type="service_closure" id=".service_locator.V.4pGB4"/>
        <argument key="App\Controller\AbsenceController:detail" type="service_closure" id=".service_locator.c8ntken"/>
        <argument key="App\Controller\AbsenceController:index" type="service_closure" id=".service_locator.IwVW4W."/>
        <argument key="App\Controller\AbsenceController:new" type="service_closure" id=".service_locator.IwVW4W."/>
        <argument key="App\Controller\AbsenceController:refuser" type="service_closure" id=".service_locator.V.4pGB4"/>
        <argument key="App\Controller\AbsenceController:reponse" type="service_closure" id=".service_locator.c8ntken"/>
        <argument key="App\Controller\AbsenceController:show" type="service_closure" id=".service_locator.c8ntken"/>
        <argument key="App\Controller\AbsenceController:suivi" type="service_closure" id=".service_locator.ATt7aga"/>
        <argument key="App\Controller\AccueilController:photo_reservoir" type="service_closure" id=".service_locator.izgUQZX"/>
        <argument key="App\Controller\AchatController:delete" type="service_closure" id=".service_locator.CxwWrHG"/>
        <argument key="App\Controller\AchatController:edit" type="service_closure" id=".service_locator.CxwWrHG"/>
        <argument key="App\Controller\AchatController:index" type="service_closure" id=".service_locator.36EpRsA"/>
        <argument key="App\Controller\AchatController:listfacture" type="service_closure" id=".service_locator.872Jsnj"/>
        <argument key="App\Controller\AchatController:new" type="service_closure" id=".service_locator.bpW2Pi_"/>
        <argument key="App\Controller\AchatController:show" type="service_closure" id=".service_locator.CxwWrHG"/>
        <argument key="App\Controller\ApprovisionnementController:add" type="service_closure" id=".service_locator.H_twZrM"/>
        <argument key="App\Controller\ApprovisionnementController:delete" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\ApprovisionnementController:details" type="service_closure" id=".service_locator.KJUDKN5"/>
        <argument key="App\Controller\ApprovisionnementController:detailsprint" type="service_closure" id=".service_locator.KJUDKN5"/>
        <argument key="App\Controller\ApprovisionnementController:fournisseur" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\ApprovisionnementController:historique" type="service_closure" id=".service_locator.zNobzAI"/>
        <argument key="App\Controller\ApprovisionnementController:index" type="service_closure" id=".service_locator.jgJPVaA"/>
        <argument key="App\Controller\AvoirController:choix" type="service_closure" id=".service_locator.SplMHih"/>
        <argument key="App\Controller\AvoirController:delete" type="service_closure" id=".service_locator.zKlKQIW"/>
        <argument key="App\Controller\AvoirController:edit" type="service_closure" id=".service_locator.zKlKQIW"/>
        <argument key="App\Controller\AvoirController:index" type="service_closure" id=".service_locator.SplMHih"/>
        <argument key="App\Controller\AvoirController:newreclamation" type="service_closure" id=".service_locator.nkRrMOH"/>
        <argument key="App\Controller\AvoirController:newreste" type="service_closure" id=".service_locator.TrbL_Ht"/>
        <argument key="App\Controller\AvoirController:reclamation" type="service_closure" id=".service_locator._pA1AYV"/>
        <argument key="App\Controller\AvoirController:reste" type="service_closure" id=".service_locator.a2YEA1b"/>
        <argument key="App\Controller\AvoirController:show" type="service_closure" id=".service_locator.hxmsnV3"/>
        <argument key="App\Controller\AvoirController:showprint" type="service_closure" id=".service_locator.hxmsnV3"/>
        <argument key="App\Controller\AvoirController:validernewreste" type="service_closure" id=".service_locator.0n1fkzc"/>
        <argument key="App\Controller\BanqueController:delete" type="service_closure" id=".service_locator.0_IFjR8"/>
        <argument key="App\Controller\BanqueController:edit" type="service_closure" id=".service_locator.0_IFjR8"/>
        <argument key="App\Controller\BanqueController:index" type="service_closure" id=".service_locator.GP7DK30"/>
        <argument key="App\Controller\BanqueController:show" type="service_closure" id=".service_locator.0_IFjR8"/>
        <argument key="App\Controller\CalendrierController:delete" type="service_closure" id=".service_locator..b08g3n"/>
        <argument key="App\Controller\CalendrierController:edit" type="service_closure" id=".service_locator..b08g3n"/>
        <argument key="App\Controller\CalendrierController:index" type="service_closure" id=".service_locator.veElpNM"/>
        <argument key="App\Controller\CalendrierController:show" type="service_closure" id=".service_locator..b08g3n"/>
        <argument key="App\Controller\CalendrierController:suivi" type="service_closure" id=".service_locator.veElpNM"/>
        <argument key="App\Controller\CategorieController:delete" type="service_closure" id=".service_locator.j7wOkYK"/>
        <argument key="App\Controller\CategorieController:edit" type="service_closure" id=".service_locator.j7wOkYK"/>
        <argument key="App\Controller\CategorieController:index" type="service_closure" id=".service_locator.DFyL8OH"/>
        <argument key="App\Controller\CategorieController:show" type="service_closure" id=".service_locator.j7wOkYK"/>
        <argument key="App\Controller\ClientController:edit" type="service_closure" id=".service_locator.lTbvCHw"/>
        <argument key="App\Controller\ClientController:index" type="service_closure" id=".service_locator.CsMkqUa"/>
        <argument key="App\Controller\ClientController:new" type="service_closure" id=".service_locator.ZOwK68s"/>
        <argument key="App\Controller\CommandeController:allcommande" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CommandeController:credit" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CommandeController:details" type="service_closure" id=".service_locator.6U8p9sv"/>
        <argument key="App\Controller\CommandeController:extranet" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\CommandeController:histo_admin" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CommandeController:history" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CommandeController:imprimer" type="service_closure" id=".service_locator.AYYV.am"/>
        <argument key="App\Controller\CommandeController:imprimerextranet" type="service_closure" id=".service_locator.AYYV.am"/>
        <argument key="App\Controller\CommandeController:index" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\CommandeController:paiement" type="service_closure" id=".service_locator.AYYV.am"/>
        <argument key="App\Controller\CommandeController:paiementChoix" type="service_closure" id=".service_locator.wXcqpiw"/>
        <argument key="App\Controller\CommandeController:paiementChoixextranet" type="service_closure" id=".service_locator.wXcqpiw"/>
        <argument key="App\Controller\CommandeController:paiementClient" type="service_closure" id=".service_locator.6U8p9sv"/>
        <argument key="App\Controller\CommandeController:paiementcredit" type="service_closure" id=".service_locator.AYYV.am"/>
        <argument key="App\Controller\CommandeController:printdetails" type="service_closure" id=".service_locator.6U8p9sv"/>
        <argument key="App\Controller\CommandeController:suivre" type="service_closure" id=".service_locator.Ui9XhIN"/>
        <argument key="App\Controller\CommandeController:validationcredit" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CommandeController:valider" type="service_closure" id=".service_locator.5DVS3ro"/>
        <argument key="App\Controller\CommandeController:validercredit" type="service_closure" id=".service_locator.AYYV.am"/>
        <argument key="App\Controller\CommandeController:validerextranet" type="service_closure" id=".service_locator.5DVS3ro"/>
        <argument key="App\Controller\CommandeController:voscommande" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CommandeController:voscommandeextranet" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\CongeController:accepter" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController:accepterAdmin" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController:approuver" type="service_closure" id=".service_locator.L9F73kI"/>
        <argument key="App\Controller\CongeController:confirmer" type="service_closure" id=".service_locator.L9F73kI"/>
        <argument key="App\Controller\CongeController:decliner" type="service_closure" id=".service_locator.L9F73kI"/>
        <argument key="App\Controller\CongeController:demande" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController:demandeAdmin" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController:new" type="service_closure" id=".service_locator.YgYapZ6"/>
        <argument key="App\Controller\CongeController:refuser" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController:refuserAdmin" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController:rejeter" type="service_closure" id=".service_locator.L9F73kI"/>
        <argument key="App\Controller\CongeController:traitement" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\CongeController:traitementAdmin" type="service_closure" id=".service_locator.3aQkSBW"/>
        <argument key="App\Controller\ContratController:delete" type="service_closure" id=".service_locator.xpZJLkN"/>
        <argument key="App\Controller\ContratController:detail" type="service_closure" id=".service_locator.xpZJLkN"/>
        <argument key="App\Controller\ContratController:edit" type="service_closure" id=".service_locator.xpZJLkN"/>
        <argument key="App\Controller\ContratController:index" type="service_closure" id=".service_locator.0TK7yZ8"/>
        <argument key="App\Controller\ContratController:print" type="service_closure" id=".service_locator.xpZJLkN"/>
        <argument key="App\Controller\ContratController:show" type="service_closure" id=".service_locator.xpZJLkN"/>
        <argument key="App\Controller\ContratController:suivi" type="service_closure" id=".service_locator.YgYapZ6"/>
        <argument key="App\Controller\CritereEvaluationController:delete" type="service_closure" id=".service_locator.f5JWNKP"/>
        <argument key="App\Controller\CritereEvaluationController:edit" type="service_closure" id=".service_locator.f5JWNKP"/>
        <argument key="App\Controller\CritereEvaluationController:index" type="service_closure" id=".service_locator.nwITGr8"/>
        <argument key="App\Controller\CritereEvaluationController:show" type="service_closure" id=".service_locator.f5JWNKP"/>
        <argument key="App\Controller\DemandeExplicationController:details" type="service_closure" id=".service_locator.ORb6BpB"/>
        <argument key="App\Controller\DemandeExplicationController:index" type="service_closure" id=".service_locator.ZOtxAfx"/>
        <argument key="App\Controller\DemandeExplicationController:new" type="service_closure" id=".service_locator.YgYapZ6"/>
        <argument key="App\Controller\DemandeExplicationController:reponse" type="service_closure" id=".service_locator.s67.kI6"/>
        <argument key="App\Controller\DemandeExplicationController:show" type="service_closure" id=".service_locator.dcCJG7q"/>
        <argument key="App\Controller\DemandeExplicationController:suivi" type="service_closure" id=".service_locator.im1kX7r"/>
        <argument key="App\Controller\DepartementController:delete" type="service_closure" id=".service_locator.EppKkcr"/>
        <argument key="App\Controller\DepartementController:edit" type="service_closure" id=".service_locator.EppKkcr"/>
        <argument key="App\Controller\DepartementController:index" type="service_closure" id=".service_locator.Hy7idLG"/>
        <argument key="App\Controller\DepartementController:show" type="service_closure" id=".service_locator.EppKkcr"/>
        <argument key="App\Controller\DepenseController:delete" type="service_closure" id=".service_locator.2_83HPM"/>
        <argument key="App\Controller\DepenseController:edit" type="service_closure" id=".service_locator.2_83HPM"/>
        <argument key="App\Controller\DepenseController:index" type="service_closure" id=".service_locator.4iXt.WB"/>
        <argument key="App\Controller\DepenseController:new" type="service_closure" id=".service_locator.8r3DTNq"/>
        <argument key="App\Controller\DepenseController:show" type="service_closure" id=".service_locator.2_83HPM"/>
        <argument key="App\Controller\DetteController:index" type="service_closure" id=".service_locator.Ui9XhIN"/>
        <argument key="App\Controller\DetteController:show" type="service_closure" id=".service_locator.AYYV.am"/>
        <argument key="App\Controller\DocumentController:delete" type="service_closure" id=".service_locator.Q8RAY9A"/>
        <argument key="App\Controller\DocumentController:edit" type="service_closure" id=".service_locator.Q8RAY9A"/>
        <argument key="App\Controller\DocumentController:index" type="service_closure" id=".service_locator.JwMuhT7"/>
        <argument key="App\Controller\DocumentController:show" type="service_closure" id=".service_locator.je7oNoj"/>
        <argument key="App\Controller\DocumentController:suivi" type="service_closure" id=".service_locator.hqE0hu0"/>
        <argument key="App\Controller\DocumentController:suiviShow" type="service_closure" id=".service_locator.Q8RAY9A"/>
        <argument key="App\Controller\EmployeController:edit" type="service_closure" id=".service_locator.I3mS6IL"/>
        <argument key="App\Controller\EmployeController:index" type="service_closure" id=".service_locator.CsMkqUa"/>
        <argument key="App\Controller\EmployeController:manage" type="service_closure" id=".service_locator.CsMkqUa"/>
        <argument key="App\Controller\EmployeController:new" type="service_closure" id=".service_locator.iZWTVGz"/>
        <argument key="App\Controller\EmployeController:show" type="service_closure" id=".service_locator.je7oNoj"/>
        <argument key="App\Controller\EmployeController:toggleStatus" type="service_closure" id=".service_locator.I3mS6IL"/>
        <argument key="App\Controller\EvaluationController:delete" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\EvaluationController:edit" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\EvaluationController:index" type="service_closure" id=".service_locator.FjsgjXR"/>
        <argument key="App\Controller\EvaluationController:show" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\EvaluationController:suivi" type="service_closure" id=".service_locator.ATt7aga"/>
        <argument key="App\Controller\EvaluationController:suiviShow" type="service_closure" id=".service_locator.eheopyZ"/>
        <argument key="App\Controller\FeedbackController:delete" type="service_closure" id=".service_locator.bembAWs"/>
        <argument key="App\Controller\FeedbackController:edit" type="service_closure" id=".service_locator.bembAWs"/>
        <argument key="App\Controller\FeedbackController:index" type="service_closure" id=".service_locator.VSBSvo7"/>
        <argument key="App\Controller\FeedbackController:new" type="service_closure" id=".service_locator.ATt7aga"/>
        <argument key="App\Controller\FeedbackController:show" type="service_closure" id=".service_locator.bembAWs"/>
        <argument key="App\Controller\FeedbackController:suivi" type="service_closure" id=".service_locator.ATt7aga"/>
        <argument key="App\Controller\FeedbackController:suiviShow" type="service_closure" id=".service_locator.bembAWs"/>
        <argument key="App\Controller\FinanceController:brouyard" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController:brouyardBanque" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController:brouyardBanque_print" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController:brouyardCaisse" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController:brouyardCaisse_print" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController:brouyard_print" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController:index" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController:journalCompte" type="service_closure" id=".service_locator.4ZxvEnm"/>
        <argument key="App\Controller\FinanceController:journalbanque" type="service_closure" id=".service_locator.iHHwidk"/>
        <argument key="App\Controller\FinanceController:payer" type="service_closure" id=".service_locator.2gmBvBo"/>
        <argument key="App\Controller\FinanceController:payertous" type="service_closure" id=".service_locator.2gmBvBo"/>
        <argument key="App\Controller\FinanceController:salaire" type="service_closure" id=".service_locator.txYFPqg"/>
        <argument key="App\Controller\FinancementController:delete" type="service_closure" id=".service_locator.5X2ZcxV"/>
        <argument key="App\Controller\FinancementController:edit" type="service_closure" id=".service_locator.5X2ZcxV"/>
        <argument key="App\Controller\FinancementController:index" type="service_closure" id=".service_locator.Ai8TDKL"/>
        <argument key="App\Controller\FinancementController:show" type="service_closure" id=".service_locator.5X2ZcxV"/>
        <argument key="App\Controller\FormationController:delete" type="service_closure" id=".service_locator.dy6wSj2"/>
        <argument key="App\Controller\FormationController:edit" type="service_closure" id=".service_locator.dy6wSj2"/>
        <argument key="App\Controller\FormationController:index" type="service_closure" id=".service_locator.SdimP0A"/>
        <argument key="App\Controller\FormationController:show" type="service_closure" id=".service_locator.dy6wSj2"/>
        <argument key="App\Controller\FournisseurController:delete" type="service_closure" id=".service_locator.ZlrNvMC"/>
        <argument key="App\Controller\FournisseurController:edit" type="service_closure" id=".service_locator.ZlrNvMC"/>
        <argument key="App\Controller\FournisseurController:index" type="service_closure" id=".service_locator.WZwGqEX"/>
        <argument key="App\Controller\FournisseurController:new" type="service_closure" id=".service_locator.CsMkqUa"/>
        <argument key="App\Controller\FournisseurController:show" type="service_closure" id=".service_locator.ZlrNvMC"/>
        <argument key="App\Controller\HeureSuplementaireController:delete" type="service_closure" id=".service_locator.mol62a."/>
        <argument key="App\Controller\HeureSuplementaireController:edit" type="service_closure" id=".service_locator.mol62a."/>
        <argument key="App\Controller\HeureSuplementaireController:index" type="service_closure" id=".service_locator.Rar7wEt"/>
        <argument key="App\Controller\HeureSuplementaireController:show" type="service_closure" id=".service_locator.mol62a."/>
        <argument key="App\Controller\HeureSuplementaireController:suivi" type="service_closure" id=".service_locator.YgYapZ6"/>
        <argument key="App\Controller\LivrerController:delete" type="service_closure" id=".service_locator.JI6lAHM"/>
        <argument key="App\Controller\LivrerController:details" type="service_closure" id=".service_locator..lRN6Lf"/>
        <argument key="App\Controller\LivrerController:histo_admin" type="service_closure" id=".service_locator.cKLCI2S"/>
        <argument key="App\Controller\LivrerController:history_show" type="service_closure" id=".service_locator.5Hn467b"/>
        <argument key="App\Controller\LivrerController:history_show_print" type="service_closure" id=".service_locator.5Hn467b"/>
        <argument key="App\Controller\LivrerController:index" type="service_closure" id=".service_locator.hYKOxsG"/>
        <argument key="App\Controller\LivrerController:livreurhistoriqueshow" type="service_closure" id=".service_locator.JI6lAHM"/>
        <argument key="App\Controller\LivrerController:livreurshow" type="service_closure" id=".service_locator.JI6lAHM"/>
        <argument key="App\Controller\LivrerController:modif" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\LivrerController:newresteprint" type="service_closure" id=".service_locator.0BS18HQ"/>
        <argument key="App\Controller\LivrerController:reste" type="service_closure" id=".service_locator.TrbL_Ht"/>
        <argument key="App\Controller\LivrerController:reste_valider" type="service_closure" id=".service_locator.foeGtlr"/>
        <argument key="App\Controller\LivrerController:resteprint" type="service_closure" id=".service_locator.o4O0eww"/>
        <argument key="App\Controller\LivrerController:retour" type="service_closure" id=".service_locator..WiOQnA"/>
        <argument key="App\Controller\LivrerController:retour_valider" type="service_closure" id=".service_locator.Xc.m5Mv"/>
        <argument key="App\Controller\LivrerController:retourprint" type="service_closure" id=".service_locator.RQY3Y3g"/>
        <argument key="App\Controller\LivrerController:show" type="service_closure" id=".service_locator.FMQ3BcF"/>
        <argument key="App\Controller\LivrerController:test" type="service_closure" id=".service_locator..lRN6Lf"/>
        <argument key="App\Controller\LivrerController:valider" type="service_closure" id=".service_locator.FMQ3BcF"/>
        <argument key="App\Controller\LivrerController:validerlivreur" type="service_closure" id=".service_locator.JI6lAHM"/>
        <argument key="App\Controller\LivrerController:validerproduit" type="service_closure" id=".service_locator..lRN6Lf"/>
        <argument key="App\Controller\MessageController:delete" type="service_closure" id=".service_locator.NttXpgM"/>
        <argument key="App\Controller\MessageController:destdelete" type="service_closure" id=".service_locator.lJ.UBt7"/>
        <argument key="App\Controller\MessageController:index" type="service_closure" id=".service_locator.9kKwU2t"/>
        <argument key="App\Controller\MessageController:read" type="service_closure" id=".service_locator.NttXpgM"/>
        <argument key="App\Controller\MessageController:readsend" type="service_closure" id=".service_locator.lJ.UBt7"/>
        <argument key="App\Controller\MessageController:received" type="service_closure" id=".service_locator.9kKwU2t"/>
        <argument key="App\Controller\MessageController:reply" type="service_closure" id=".service_locator.NttXpgM"/>
        <argument key="App\Controller\MessageController:restore" type="service_closure" id=".service_locator.lJ.UBt7"/>
        <argument key="App\Controller\MessageController:send" type="service_closure" id=".service_locator.9kKwU2t"/>
        <argument key="App\Controller\MessageController:sent" type="service_closure" id=".service_locator.9kKwU2t"/>
        <argument key="App\Controller\MessageController:trash" type="service_closure" id=".service_locator.9kKwU2t"/>
        <argument key="App\Controller\NoteServiceController:delete" type="service_closure" id=".service_locator.fDTLJwW"/>
        <argument key="App\Controller\NoteServiceController:edit" type="service_closure" id=".service_locator.fDTLJwW"/>
        <argument key="App\Controller\NoteServiceController:index" type="service_closure" id=".service_locator.TZ613Iz"/>
        <argument key="App\Controller\NoteServiceController:new" type="service_closure" id=".service_locator.nvOEfM."/>
        <argument key="App\Controller\NoteServiceController:show" type="service_closure" id=".service_locator.fDTLJwW"/>
        <argument key="App\Controller\PaieController:historique" type="service_closure" id=".service_locator.txYFPqg"/>
        <argument key="App\Controller\PaieController:historiqueBulletin" type="service_closure" id=".service_locator.txYFPqg"/>
        <argument key="App\Controller\PaieController:historiqueMonthCurent" type="service_closure" id=".service_locator.txYFPqg"/>
        <argument key="App\Controller\PaieController:historiqueShow" type="service_closure" id=".service_locator.fYOg1aH"/>
        <argument key="App\Controller\PaieController:new" type="service_closure" id=".service_locator.IXV1LlJ"/>
        <argument key="App\Controller\PaieController:paiement" type="service_closure" id=".service_locator.J0_MNy."/>
        <argument key="App\Controller\PaieController:paimentDetails" type="service_closure" id=".service_locator.fYOg1aH"/>
        <argument key="App\Controller\PaieController:show" type="service_closure" id=".service_locator._DImFIW"/>
        <argument key="App\Controller\PaieController:valider" type="service_closure" id=".service_locator._DImFIW"/>
        <argument key="App\Controller\PanierController:add" type="service_closure" id=".service_locator.w2rYZpG"/>
        <argument key="App\Controller\PanierController:addextranet" type="service_closure" id=".service_locator.w2rYZpG"/>
        <argument key="App\Controller\PanierController:delete" type="service_closure" id=".service_locator.zHBsodI"/>
        <argument key="App\Controller\PanierController:index" type="service_closure" id=".service_locator.5CGjU28"/>
        <argument key="App\Controller\PosteController:attribuerEmployes" type="service_closure" id=".service_locator.K.OvH49"/>
        <argument key="App\Controller\PosteController:delete" type="service_closure" id=".service_locator.CQ8XLG_"/>
        <argument key="App\Controller\PosteController:edit" type="service_closure" id=".service_locator.CQ8XLG_"/>
        <argument key="App\Controller\PosteController:index" type="service_closure" id=".service_locator.rF.gS75"/>
        <argument key="App\Controller\PosteController:show" type="service_closure" id=".service_locator.K.OvH49"/>
        <argument key="App\Controller\PrimeController:delete" type="service_closure" id=".service_locator.MJNrreu"/>
        <argument key="App\Controller\PrimeController:edit" type="service_closure" id=".service_locator.MJNrreu"/>
        <argument key="App\Controller\PrimeController:index" type="service_closure" id=".service_locator.tX7IRH1"/>
        <argument key="App\Controller\PrimeController:show" type="service_closure" id=".service_locator.MJNrreu"/>
        <argument key="App\Controller\PrimeController:suivi" type="service_closure" id=".service_locator.HEUeAgL"/>
        <argument key="App\Controller\PrimePerformanceController:delete" type="service_closure" id=".service_locator.yWLnPqK"/>
        <argument key="App\Controller\PrimePerformanceController:edit" type="service_closure" id=".service_locator.yWLnPqK"/>
        <argument key="App\Controller\PrimePerformanceController:index" type="service_closure" id=".service_locator.SYGkLDo"/>
        <argument key="App\Controller\PrimePerformanceController:show" type="service_closure" id=".service_locator.yWLnPqK"/>
        <argument key="App\Controller\ProduitController:arrivage" type="service_closure" id=".service_locator.v5581n1"/>
        <argument key="App\Controller\ProduitController:arrivage_admin" type="service_closure" id=".service_locator.v5581n1"/>
        <argument key="App\Controller\ProduitController:delete" type="service_closure" id=".service_locator.ViXcClx"/>
        <argument key="App\Controller\ProduitController:edit" type="service_closure" id=".service_locator.ViXcClx"/>
        <argument key="App\Controller\ProduitController:index" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\ProduitController:nouveaute" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\ProduitController:show" type="service_closure" id=".service_locator.ViXcClx"/>
        <argument key="App\Controller\ProduitController:top" type="service_closure" id=".service_locator.bqZJXZV"/>
        <argument key="App\Controller\ProduitController:vente" type="service_closure" id=".service_locator.bqZJXZV"/>
        <argument key="App\Controller\ProduitController:vente_admin" type="service_closure" id=".service_locator.bqZJXZV"/>
        <argument key="App\Controller\PromotionController:activer" type="service_closure" id=".service_locator.G452JTc"/>
        <argument key="App\Controller\PromotionController:add" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\PromotionController:arreter" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\PromotionController:cancel" type="service_closure" id=".service_locator.4lf9RTo"/>
        <argument key="App\Controller\PromotionController:courante" type="service_closure" id=".service_locator.gGA2khr"/>
        <argument key="App\Controller\PromotionController:edit" type="service_closure" id=".service_locator.4lf9RTo"/>
        <argument key="App\Controller\PromotionController:index" type="service_closure" id=".service_locator.gGA2khr"/>
        <argument key="App\Controller\PromotionController:new" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\PromotionController:promodelete" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\PromotionController:show" type="service_closure" id=".service_locator.A2hTFDL"/>
        <argument key="App\Controller\ReclamationController:clo" type="service_closure" id=".service_locator.sKXD69h"/>
        <argument key="App\Controller\ReclamationController:cloturer" type="service_closure" id=".service_locator.SY0zWOw"/>
        <argument key="App\Controller\ReclamationController:delete" type="service_closure" id=".service_locator.SY0zWOw"/>
        <argument key="App\Controller\ReclamationController:edit" type="service_closure" id=".service_locator.SY0zWOw"/>
        <argument key="App\Controller\ReclamationController:index" type="service_closure" id=".service_locator.sKXD69h"/>
        <argument key="App\Controller\ReclamationController:new" type="service_closure" id=".service_locator.Hz5btge"/>
        <argument key="App\Controller\ReclamationController:show" type="service_closure" id=".service_locator.k4Bq10G"/>
        <argument key="App\Controller\RemboursementController:avoir" type="service_closure" id=".service_locator.PjrYeyB"/>
        <argument key="App\Controller\RemboursementController:avoir_list" type="service_closure" id=".service_locator.SplMHih"/>
        <argument key="App\Controller\RemboursementController:delete" type="service_closure" id=".service_locator.p6oBFqB"/>
        <argument key="App\Controller\RemboursementController:edit" type="service_closure" id=".service_locator.p6oBFqB"/>
        <argument key="App\Controller\RemboursementController:financementapport" type="service_closure" id=".service_locator.8r3DTNq"/>
        <argument key="App\Controller\RemboursementController:financementpret" type="service_closure" id=".service_locator.8r3DTNq"/>
        <argument key="App\Controller\RemboursementController:index" type="service_closure" id=".service_locator.x5JG17."/>
        <argument key="App\Controller\RemboursementController:show" type="service_closure" id=".service_locator.p6oBFqB"/>
        <argument key="App\Controller\ReponseController:delete" type="service_closure" id=".service_locator.Nf.XpWv"/>
        <argument key="App\Controller\ReponseController:edit" type="service_closure" id=".service_locator.Nf.XpWv"/>
        <argument key="App\Controller\ReponseController:index" type="service_closure" id=".service_locator.9seJ.96"/>
        <argument key="App\Controller\ReponseController:new" type="service_closure" id=".service_locator.SY0zWOw"/>
        <argument key="App\Controller\ReponseController:show" type="service_closure" id=".service_locator.Nf.XpWv"/>
        <argument key="App\Controller\SanctionController:delete" type="service_closure" id=".service_locator.FvaKkR4"/>
        <argument key="App\Controller\SanctionController:edit" type="service_closure" id=".service_locator.FvaKkR4"/>
        <argument key="App\Controller\SanctionController:index" type="service_closure" id=".service_locator..NLYUmE"/>
        <argument key="App\Controller\SanctionController:show" type="service_closure" id=".service_locator.FvaKkR4"/>
        <argument key="App\Controller\SanctionController:suivi" type="service_closure" id=".service_locator.YgYapZ6"/>
        <argument key="App\Controller\SecurityController:login" type="service_closure" id=".service_locator.rSTd.nA"/>
        <argument key="App\Controller\Security\securityController:admin_new" type="service_closure" id=".service_locator.hMbBiG."/>
        <argument key="App\Controller\Security\securityController:change" type="service_closure" id=".service_locator.E9I1y6q"/>
        <argument key="App\Controller\Security\securityController:clients" type="service_closure" id=".service_locator.kPUOGb8"/>
        <argument key="App\Controller\Security\securityController:edit_user" type="service_closure" id=".service_locator.Hz5btge"/>
        <argument key="App\Controller\Security\securityController:forgotten" type="service_closure" id=".service_locator.nCXI2As"/>
        <argument key="App\Controller\Security\securityController:new" type="service_closure" id=".service_locator.PPeLVW6"/>
        <argument key="App\Controller\Security\securityController:reset" type="service_closure" id=".service_locator.GJFCC1V"/>
        <argument key="App\Controller\Security\securityController:user" type="service_closure" id=".service_locator.4tqk5Qq"/>
        <argument key="App\Controller\Security\securityController:users" type="service_closure" id=".service_locator.kPUOGb8"/>
        <argument key="App\Controller\StockController:add" type="service_closure" id=".service_locator.vRUAr7Q"/>
        <argument key="App\Controller\StockController:delete" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\StockController:peremption" type="service_closure" id=".service_locator..lRN6Lf"/>
        <argument key="App\Controller\StockController:produit" type="service_closure" id=".service_locator.EZHsKb7"/>
        <argument key="App\Controller\StockController:produitprint" type="service_closure" id=".service_locator.EZHsKb7"/>
        <argument key="App\Controller\StockController:retour" type="service_closure" id=".service_locator.kyHFend"/>
        <argument key="App\Controller\StockController:retour_show" type="service_closure" id=".service_locator.caIy2eX"/>
        <argument key="App\Controller\StockController:retourhistoryshow" type="service_closure" id=".service_locator.0FQRyqG"/>
        <argument key="App\Controller\StockController:retourindex" type="service_closure" id=".service_locator.bUYAhQD"/>
        <argument key="App\Controller\StockController:rupture" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\StockController:stock" type="service_closure" id=".service_locator..lRN6Lf"/>
        <argument key="App\Controller\StockController:surveiller" type="service_closure" id=".service_locator.swmLS._"/>
        <argument key="App\Controller\SuggestionController:delete" type="service_closure" id=".service_locator.s7Dxo1M"/>
        <argument key="App\Controller\SuggestionController:edit" type="service_closure" id=".service_locator.s7Dxo1M"/>
        <argument key="App\Controller\SuggestionController:index" type="service_closure" id=".service_locator.rxfCH_1"/>
        <argument key="App\Controller\SuggestionController:show" type="service_closure" id=".service_locator.s7Dxo1M"/>
        <argument key="App\Controller\TestController:delete" type="service_closure" id=".service_locator.VZRjqOk"/>
        <argument key="App\Controller\TestController:edit" type="service_closure" id=".service_locator.VZRjqOk"/>
        <argument key="App\Controller\TestController:index" type="service_closure" id=".service_locator.XkGCLle"/>
        <argument key="App\Controller\TestController:new" type="service_closure" id=".service_locator.CsMkqUa"/>
        <argument key="App\Controller\TestController:show" type="service_closure" id=".service_locator.iOmYmBM"/>
        <argument key="App\Controller\TransfertController:banque" type="service_closure" id=".service_locator.8r3DTNq"/>
        <argument key="App\Controller\TransfertController:caisse" type="service_closure" id=".service_locator.8r3DTNq"/>
        <argument key="App\Controller\TransfertController:delete" type="service_closure" id=".service_locator.GzP66Op"/>
        <argument key="App\Controller\TransfertController:edit" type="service_closure" id=".service_locator.GzP66Op"/>
        <argument key="App\Controller\TransfertController:index" type="service_closure" id=".service_locator.Wz47QTF"/>
        <argument key="App\Controller\TransfertController:show" type="service_closure" id=".service_locator.GzP66Op"/>
        <argument key="App\Controller\TypeCongeController:delete" type="service_closure" id=".service_locator.BpNOuyb"/>
        <argument key="App\Controller\TypeCongeController:edit" type="service_closure" id=".service_locator.BpNOuyb"/>
        <argument key="App\Controller\TypeCongeController:index" type="service_closure" id=".service_locator.f26zfeA"/>
        <argument key="App\Controller\TypeCongeController:show" type="service_closure" id=".service_locator.BpNOuyb"/>
        <argument key="App\Controller\TypeContratController:delete" type="service_closure" id=".service_locator.s6oL59b"/>
        <argument key="App\Controller\TypeContratController:edit" type="service_closure" id=".service_locator.s6oL59b"/>
        <argument key="App\Controller\TypeContratController:index" type="service_closure" id=".service_locator.Wn0oHAn"/>
        <argument key="App\Controller\TypeContratController:show" type="service_closure" id=".service_locator.s6oL59b"/>
        <argument key="App\Controller\TypeSanctionController:delete" type="service_closure" id=".service_locator.5criBkT"/>
        <argument key="App\Controller\TypeSanctionController:edit" type="service_closure" id=".service_locator.5criBkT"/>
        <argument key="App\Controller\TypeSanctionController:index" type="service_closure" id=".service_locator.jDRi_o9"/>
        <argument key="App\Controller\TypeSanctionController:show" type="service_closure" id=".service_locator.5criBkT"/>
        <argument key="kernel:loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel:registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
      </argument>
    </service>
    <service id=".service_locator.F9PKc.7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service_closure" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service_closure" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service_closure" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" type="service_closure" id="validator.no_suspicious_characters"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service_closure" id="validator.not_compromised_password"/>
        <argument key="Symfony\Component\Validator\Constraints\WhenValidator" type="service_closure" id="validator.when"/>
        <argument key="doctrine.orm.validator.unique" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service_closure" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator.lLv4pWF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service_closure" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id=".debug.serializer.normalizer.serializer.denormalizer.unwrapping" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.denormalizer.unwrapping"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.flatten_exception" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.flatten_exception"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.problem" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.problem"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.uid" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.uid"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.datetime" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.datetime"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.mime_message" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.mime_message"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.datetimezone"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.dateinterval"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.form_error" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.form_error"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.backed_enum" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.backed_enum"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.data_uri"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.translatable" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.translatable"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.json_serializable"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.denormalizer.array" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.denormalizer.array"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.normalizer.serializer.normalizer.object" class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
      <argument type="service" id="serializer.normalizer.object"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.encoder.serializer.encoder.xml" class="Symfony\Component\Serializer\Debug\TraceableEncoder">
      <argument type="service" id="serializer.encoder.xml"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.encoder.serializer.encoder.json" class="Symfony\Component\Serializer\Debug\TraceableEncoder">
      <argument type="service" id="serializer.encoder.json"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.encoder.serializer.encoder.yaml" class="Symfony\Component\Serializer\Debug\TraceableEncoder">
      <argument type="service" id="serializer.encoder.yaml"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.serializer.encoder.serializer.encoder.csv" class="Symfony\Component\Serializer\Debug\TraceableEncoder">
      <argument type="service" id="serializer.encoder.csv"/>
      <argument type="service" id="serializer.data_collector"/>
    </service>
    <service id=".debug.value_resolver.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="security.user_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.security.security_token_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="security.security_token_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.doctrine.orm.entity_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="doctrine.orm.entity_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.backed_enum_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.backed_enum_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.datetime" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.datetime"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request_attribute"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.session"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.service"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.default"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.variadic"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.not_tagged_controller"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request_payload" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request_payload"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.query_parameter_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.query_parameter_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.mQ6TcDr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Form\AbsenceType" type="service_closure" id="App\Form\AbsenceType"/>
        <argument key="App\Form\AchatType" type="service_closure" id="App\Form\AchatType"/>
        <argument key="App\Form\ApprouverType" type="service_closure" id="App\Form\ApprouverType"/>
        <argument key="App\Form\ApprovisionnementType" type="service_closure" id="App\Form\ApprovisionnementType"/>
        <argument key="App\Form\AvoirType" type="service_closure" id="App\Form\AvoirType"/>
        <argument key="App\Form\BanqueType" type="service_closure" id="App\Form\BanqueType"/>
        <argument key="App\Form\CalendrierType" type="service_closure" id="App\Form\CalendrierType"/>
        <argument key="App\Form\CandidatureType" type="service_closure" id="App\Form\CandidatureType"/>
        <argument key="App\Form\CategorieType" type="service_closure" id="App\Form\CategorieType"/>
        <argument key="App\Form\ClientType" type="service_closure" id="App\Form\ClientType"/>
        <argument key="App\Form\CommandeType" type="service_closure" id="App\Form\CommandeType"/>
        <argument key="App\Form\ContratType" type="service_closure" id="App\Form\ContratType"/>
        <argument key="App\Form\CritereEvaluationType" type="service_closure" id="App\Form\CritereEvaluationType"/>
        <argument key="App\Form\CvType" type="service_closure" id="App\Form\CvType"/>
        <argument key="App\Form\DecisionType" type="service_closure" id="App\Form\DecisionType"/>
        <argument key="App\Form\DemandeCongeType" type="service_closure" id="App\Form\DemandeCongeType"/>
        <argument key="App\Form\DemandeExplicationType" type="service_closure" id="App\Form\DemandeExplicationType"/>
        <argument key="App\Form\DepartementType" type="service_closure" id="App\Form\DepartementType"/>
        <argument key="App\Form\DepenseType" type="service_closure" id="App\Form\DepenseType"/>
        <argument key="App\Form\DocumentType" type="service_closure" id="App\Form\DocumentType"/>
        <argument key="App\Form\EmployeType" type="service_closure" id="App\Form\EmployeType"/>
        <argument key="App\Form\EvaluationType" type="service_closure" id="App\Form\EvaluationType"/>
        <argument key="App\Form\FeedbackType" type="service_closure" id="App\Form\FeedbackType"/>
        <argument key="App\Form\FiltreBulletinType" type="service_closure" id="App\Form\FiltreBulletinType"/>
        <argument key="App\Form\FinancementBanqueType" type="service_closure" id="App\Form\FinancementBanqueType"/>
        <argument key="App\Form\FinancementType" type="service_closure" id="App\Form\FinancementType"/>
        <argument key="App\Form\FormationType" type="service_closure" id="App\Form\FormationType"/>
        <argument key="App\Form\FournisseurType" type="service_closure" id="App\Form\FournisseurType"/>
        <argument key="App\Form\HeureSuplementaireType" type="service_closure" id="App\Form\HeureSuplementaireType"/>
        <argument key="App\Form\LivrerType" type="service_closure" id="App\Form\LivrerType"/>
        <argument key="App\Form\MessageReplyType" type="service_closure" id="App\Form\MessageReplyType"/>
        <argument key="App\Form\MessageType" type="service_closure" id="App\Form\MessageType"/>
        <argument key="App\Form\NoteServiceType" type="service_closure" id="App\Form\NoteServiceType"/>
        <argument key="App\Form\PaieType" type="service_closure" id="App\Form\PaieType"/>
        <argument key="App\Form\PaiementFormType" type="service_closure" id="App\Form\PaiementFormType"/>
        <argument key="App\Form\PosteType" type="service_closure" id="App\Form\PosteType"/>
        <argument key="App\Form\PrimePerformanceType" type="service_closure" id="App\Form\PrimePerformanceType"/>
        <argument key="App\Form\PrimeType" type="service_closure" id="App\Form\PrimeType"/>
        <argument key="App\Form\ProduitType" type="service_closure" id="App\Form\ProduitType"/>
        <argument key="App\Form\PromotionType" type="service_closure" id="App\Form\PromotionType"/>
        <argument key="App\Form\RechercheType" type="service_closure" id="App\Form\RechercheType"/>
        <argument key="App\Form\ReclamationType" type="service_closure" id="App\Form\ReclamationType"/>
        <argument key="App\Form\RegistrationType" type="service_closure" id="App\Form\RegistrationType"/>
        <argument key="App\Form\RemboursementType" type="service_closure" id="App\Form\RemboursementType"/>
        <argument key="App\Form\RemboursementbancaireType" type="service_closure" id="App\Form\RemboursementbancaireType"/>
        <argument key="App\Form\ReponseAbsenceType" type="service_closure" id="App\Form\ReponseAbsenceType"/>
        <argument key="App\Form\ReponseExplicationType" type="service_closure" id="App\Form\ReponseExplicationType"/>
        <argument key="App\Form\ReponseType" type="service_closure" id="App\Form\ReponseType"/>
        <argument key="App\Form\SanctionType" type="service_closure" id="App\Form\SanctionType"/>
        <argument key="App\Form\ServiceType" type="service_closure" id="App\Form\ServiceType"/>
        <argument key="App\Form\SuggestionType" type="service_closure" id="App\Form\SuggestionType"/>
        <argument key="App\Form\TestType" type="service_closure" id="App\Form\TestType"/>
        <argument key="App\Form\TransfertType" type="service_closure" id="App\Form\TransfertType"/>
        <argument key="App\Form\TypeCongeType" type="service_closure" id="App\Form\TypeCongeType"/>
        <argument key="App\Form\TypeContratType" type="service_closure" id="App\Form\TypeContratType"/>
        <argument key="App\Form\TypeSanctionType" type="service_closure" id="App\Form\TypeSanctionType"/>
        <argument key="App\Form\Type\BloodGroupType" type="service_closure" id="App\Form\Type\BloodGroupType"/>
        <argument key="App\Form\Type\FemmesType" type="service_closure" id="App\Form\Type\FemmesType"/>
        <argument key="App\Form\Type\LinkType" type="service_closure" id="App\Form\Type\LinkType"/>
        <argument key="App\Form\Type\RegionType" type="service_closure" id="App\Form\Type\RegionType"/>
        <argument key="App\Form\Type\SexeType" type="service_closure" id="App\Form\Type\SexeType"/>
        <argument key="App\Form\Type\SituationType" type="service_closure" id="App\Form\Type\SituationType"/>
        <argument key="App\Form\Type\StatusType" type="service_closure" id="App\Form\Type\StatusType"/>
        <argument key="App\Form\Type\VerserType" type="service_closure" id="App\Form\Type\VerserType"/>
        <argument key="App\Form\Type\adresseType" type="service_closure" id="App\Form\Type\adresseType"/>
        <argument key="App\Form\Type\evaluationType" type="service_closure" id="App\Form\Type\evaluationType"/>
        <argument key="App\Form\Type\promoType" type="service_closure" id="App\Form\Type\promoType"/>
        <argument key="App\Form\Type\reponseType" type="service_closure" id="App\Form\Type\reponseType"/>
        <argument key="App\Form\UserType" type="service_closure" id="App\Form\UserType"/>
        <argument key="App\Form\VersementType" type="service_closure" id="App\Form\VersementType"/>
        <argument key="App\Form\changePasswordType" type="service_closure" id="App\Form\changePasswordType"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service_closure" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service_closure" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ColorType" type="service_closure" id="form.type.color"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service_closure" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service_closure" id="form.type.form"/>
      </argument>
    </service>
    <service id="messenger.bus.default.middleware.traceable" class="Symfony\Component\Messenger\Middleware\TraceableMiddleware">
      <argument type="service" id="debug.stopwatch"/>
      <argument>messenger.bus.default</argument>
    </service>
    <service id="messenger.bus.default.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware">
      <argument>messenger.bus.default</argument>
    </service>
    <service id="messenger.bus.default.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware">
      <argument type="service" id="messenger.senders_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>true</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.bus.default.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware">
      <argument type="service" id="messenger.bus.default.messenger.handlers_locator"/>
      <argument>false</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="debug.traced.messenger.bus.default" class="Symfony\Component\Messenger\TraceableMessageBus">
      <tag name="messenger.bus"/>
      <tag name="container.decorator" id="messenger.bus.default" inner="debug.traced.messenger.bus.default.inner"/>
      <argument type="service" id="debug.traced.messenger.bus.default.inner"/>
    </service>
    <service id=".service_locator.5cAhUFF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="messenger.bus.default" type="service_closure" id="debug.traced.messenger.bus.default"/>
      </argument>
    </service>
    <service id=".service_locator.Y4J.A.e" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
      </argument>
    </service>
    <service id=".messenger.handler_descriptor.QXXNQ9d" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="process.messenger.process_message_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.kEzMhfs" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="console.messenger.execute_command_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.6kVvRT." class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="http_client.messenger.ping_webhook_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.tGvt0LH" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="mailer.messenger.message_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.p4Qvabm" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="messenger.redispatch_message_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.vMw0m61" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="chatter.messenger.chat_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.XZowc.T" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="texter.messenger.sms_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.Lml2ICs" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="texter.messenger.push_handler"/>
      <argument type="collection"/>
    </service>
    <service id="messenger.bus.default.messenger.handlers_locator" class="Symfony\Component\Messenger\Handler\HandlersLocator">
      <argument type="collection">
        <argument key="Symfony\Component\Process\Messenger\RunProcessMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.QXXNQ9d"/>
        </argument>
        <argument key="Symfony\Component\Console\Messenger\RunCommandMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.kEzMhfs"/>
        </argument>
        <argument key="Symfony\Component\HttpClient\Messenger\PingWebhookMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.6kVvRT."/>
        </argument>
        <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.tGvt0LH"/>
        </argument>
        <argument key="Symfony\Component\Messenger\Message\RedispatchMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.p4Qvabm"/>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\ChatMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.vMw0m61"/>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\SmsMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.XZowc.T"/>
        </argument>
        <argument key="Symfony\Component\Notifier\Message\PushMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.Lml2ICs"/>
        </argument>
      </argument>
    </service>
    <service id=".debug.http_client" class="Symfony\Component\HttpClient\TraceableHttpClient">
      <tag name="http_client.client"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="http_client" inner="http_client.uri_template.inner"/>
      <argument type="service" id="http_client.uri_template"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id=".service_locator.MfxSDRP" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service_closure" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
        <argument key="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener"/>
        <argument key="doctrine.orm.listeners.doctrine_token_provider_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_token_provider_schema_listener"/>
        <argument key="doctrine.orm.listeners.lock_store_schema_listener" type="service_closure" id="doctrine.orm.listeners.lock_store_schema_listener"/>
        <argument key="doctrine.orm.listeners.pdo_session_handler_schema_listener" type="service_closure" id="doctrine.orm.listeners.pdo_session_handler_schema_listener"/>
        <argument key="doctrine.orm.messenger.doctrine_schema_listener" type="service_closure" id="doctrine.orm.messenger.doctrine_schema_listener"/>
        <argument key="turbo.doctrine.event_listener" type="service_closure" id="turbo.doctrine.event_listener"/>
      </argument>
    </service>
    <service id=".service_locator.RrKXv4I" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Repository\AbsenceRepository" type="service_closure" id="App\Repository\AbsenceRepository"/>
        <argument key="App\Repository\AchatRepository" type="service_closure" id="App\Repository\AchatRepository"/>
        <argument key="App\Repository\AlbumRepository" type="service_closure" id="App\Repository\AlbumRepository"/>
        <argument key="App\Repository\ApprovisionnementRepository" type="service_closure" id="App\Repository\ApprovisionnementRepository"/>
        <argument key="App\Repository\ApprovisionnerRepository" type="service_closure" id="App\Repository\ApprovisionnerRepository"/>
        <argument key="App\Repository\AvoirRepository" type="service_closure" id="App\Repository\AvoirRepository"/>
        <argument key="App\Repository\AvoirResteRepository" type="service_closure" id="App\Repository\AvoirResteRepository"/>
        <argument key="App\Repository\BanqueRepository" type="service_closure" id="App\Repository\BanqueRepository"/>
        <argument key="App\Repository\CalendrierRepository" type="service_closure" id="App\Repository\CalendrierRepository"/>
        <argument key="App\Repository\CandidatureRepository" type="service_closure" id="App\Repository\CandidatureRepository"/>
        <argument key="App\Repository\CategorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
        <argument key="App\Repository\CommandeProduitRepository" type="service_closure" id="App\Repository\CommandeProduitRepository"/>
        <argument key="App\Repository\CommandeRepository" type="service_closure" id="App\Repository\CommandeRepository"/>
        <argument key="App\Repository\CompteRepository" type="service_closure" id="App\Repository\CompteRepository"/>
        <argument key="App\Repository\CongesRepository" type="service_closure" id="App\Repository\CongesRepository"/>
        <argument key="App\Repository\ContratRepository" type="service_closure" id="App\Repository\ContratRepository"/>
        <argument key="App\Repository\CreditRepository" type="service_closure" id="App\Repository\CreditRepository"/>
        <argument key="App\Repository\CritereEvaluationRepository" type="service_closure" id="App\Repository\CritereEvaluationRepository"/>
        <argument key="App\Repository\CvRepository" type="service_closure" id="App\Repository\CvRepository"/>
        <argument key="App\Repository\DebitRepository" type="service_closure" id="App\Repository\DebitRepository"/>
        <argument key="App\Repository\DecisionRepository" type="service_closure" id="App\Repository\DecisionRepository"/>
        <argument key="App\Repository\DemandeExplicationRepository" type="service_closure" id="App\Repository\DemandeExplicationRepository"/>
        <argument key="App\Repository\DepartementRepository" type="service_closure" id="App\Repository\DepartementRepository"/>
        <argument key="App\Repository\DepenseRepository" type="service_closure" id="App\Repository\DepenseRepository"/>
        <argument key="App\Repository\DocumentRepository" type="service_closure" id="App\Repository\DocumentRepository"/>
        <argument key="App\Repository\EcritureRepository" type="service_closure" id="App\Repository\EcritureRepository"/>
        <argument key="App\Repository\EmployeFormationRepository" type="service_closure" id="App\Repository\EmployeFormationRepository"/>
        <argument key="App\Repository\EmployeRepository" type="service_closure" id="App\Repository\EmployeRepository"/>
        <argument key="App\Repository\EvaluationDetailRepository" type="service_closure" id="App\Repository\EvaluationDetailRepository"/>
        <argument key="App\Repository\EvaluationRepository" type="service_closure" id="App\Repository\EvaluationRepository"/>
        <argument key="App\Repository\FactureRepository" type="service_closure" id="App\Repository\FactureRepository"/>
        <argument key="App\Repository\FeedbackRepository" type="service_closure" id="App\Repository\FeedbackRepository"/>
        <argument key="App\Repository\FinancementRepository" type="service_closure" id="App\Repository\FinancementRepository"/>
        <argument key="App\Repository\FormationRepository" type="service_closure" id="App\Repository\FormationRepository"/>
        <argument key="App\Repository\FournisseurProduitRepository" type="service_closure" id="App\Repository\FournisseurProduitRepository"/>
        <argument key="App\Repository\FournisseurRepository" type="service_closure" id="App\Repository\FournisseurRepository"/>
        <argument key="App\Repository\HeureSuplementaireRepository" type="service_closure" id="App\Repository\HeureSuplementaireRepository"/>
        <argument key="App\Repository\ImageRepository" type="service_closure" id="App\Repository\ImageRepository"/>
        <argument key="App\Repository\LivrerProduitRepository" type="service_closure" id="App\Repository\LivrerProduitRepository"/>
        <argument key="App\Repository\LivrerRepository" type="service_closure" id="App\Repository\LivrerRepository"/>
        <argument key="App\Repository\LivrerResteRepository" type="service_closure" id="App\Repository\LivrerResteRepository"/>
        <argument key="App\Repository\MessageRecipientRepository" type="service_closure" id="App\Repository\MessageRecipientRepository"/>
        <argument key="App\Repository\MessageReplyRepository" type="service_closure" id="App\Repository\MessageReplyRepository"/>
        <argument key="App\Repository\MessageRepository" type="service_closure" id="App\Repository\MessageRepository"/>
        <argument key="App\Repository\MoisRepository" type="service_closure" id="App\Repository\MoisRepository"/>
        <argument key="App\Repository\NoteServiceRepository" type="service_closure" id="App\Repository\NoteServiceRepository"/>
        <argument key="App\Repository\NotificationRepository" type="service_closure" id="App\Repository\NotificationRepository"/>
        <argument key="App\Repository\NumeroRepository" type="service_closure" id="App\Repository\NumeroRepository"/>
        <argument key="App\Repository\PaieRepository" type="service_closure" id="App\Repository\PaieRepository"/>
        <argument key="App\Repository\PaieSalaireRepository" type="service_closure" id="App\Repository\PaieSalaireRepository"/>
        <argument key="App\Repository\PaiementRepository" type="service_closure" id="App\Repository\PaiementRepository"/>
        <argument key="App\Repository\PosteEmployeRepository" type="service_closure" id="App\Repository\PosteEmployeRepository"/>
        <argument key="App\Repository\PosteRepository" type="service_closure" id="App\Repository\PosteRepository"/>
        <argument key="App\Repository\PrimePerformanceRepository" type="service_closure" id="App\Repository\PrimePerformanceRepository"/>
        <argument key="App\Repository\PrimeRepository" type="service_closure" id="App\Repository\PrimeRepository"/>
        <argument key="App\Repository\ProduitRepository" type="service_closure" id="App\Repository\ProduitRepository"/>
        <argument key="App\Repository\PromotionProduitRepository" type="service_closure" id="App\Repository\PromotionProduitRepository"/>
        <argument key="App\Repository\PromotionRepository" type="service_closure" id="App\Repository\PromotionRepository"/>
        <argument key="App\Repository\ReclamationRepository" type="service_closure" id="App\Repository\ReclamationRepository"/>
        <argument key="App\Repository\RemboursementRepository" type="service_closure" id="App\Repository\RemboursementRepository"/>
        <argument key="App\Repository\ReponseAbsenceRepository" type="service_closure" id="App\Repository\ReponseAbsenceRepository"/>
        <argument key="App\Repository\ReponseExplicationRepository" type="service_closure" id="App\Repository\ReponseExplicationRepository"/>
        <argument key="App\Repository\ReponseRepository" type="service_closure" id="App\Repository\ReponseRepository"/>
        <argument key="App\Repository\RetenueRepository" type="service_closure" id="App\Repository\RetenueRepository"/>
        <argument key="App\Repository\RetourProduitRepository" type="service_closure" id="App\Repository\RetourProduitRepository"/>
        <argument key="App\Repository\RetourRepository" type="service_closure" id="App\Repository\RetourRepository"/>
        <argument key="App\Repository\SanctionRepository" type="service_closure" id="App\Repository\SanctionRepository"/>
        <argument key="App\Repository\StockRepository" type="service_closure" id="App\Repository\StockRepository"/>
        <argument key="App\Repository\SuggestionRepository" type="service_closure" id="App\Repository\SuggestionRepository"/>
        <argument key="App\Repository\TamponAbsenceRepository" type="service_closure" id="App\Repository\TamponAbsenceRepository"/>
        <argument key="App\Repository\TestRepository" type="service_closure" id="App\Repository\TestRepository"/>
        <argument key="App\Repository\TransfertRepository" type="service_closure" id="App\Repository\TransfertRepository"/>
        <argument key="App\Repository\TypeCongeRepository" type="service_closure" id="App\Repository\TypeCongeRepository"/>
        <argument key="App\Repository\TypeContratRepository" type="service_closure" id="App\Repository\TypeContratRepository"/>
        <argument key="App\Repository\TypeDecisionRepository" type="service_closure" id="App\Repository\TypeDecisionRepository"/>
        <argument key="App\Repository\TypeSanctionRepository" type="service_closure" id="App\Repository\TypeSanctionRepository"/>
        <argument key="App\Repository\UserRepository" type="service_closure" id="App\Repository\UserRepository"/>
        <argument key="App\Repository\VersementRepository" type="service_closure" id="App\Repository\VersementRepository"/>
      </argument>
    </service>
    <service id=".service_locator.KLVvNIq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.ulid_generator" type="service_closure" id="doctrine.ulid_generator"/>
        <argument key="doctrine.uuid_generator" type="service_closure" id="doctrine.uuid_generator"/>
      </argument>
    </service>
    <service id=".doctrine.orm.default_metadata_driver" class="Doctrine\Bundle\DoctrineBundle\Mapping\MappingDriver">
      <tag name="container.decorator" id="doctrine.orm.default_metadata_driver" inner=".doctrine.orm.default_metadata_driver.inner"/>
      <argument type="service" id=".doctrine.orm.default_metadata_driver.inner"/>
      <argument type="service" id=".service_locator.KLVvNIq"/>
    </service>
    <service id="doctrine.dbal.default_schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager">
      <argument type="collection">
        <argument type="service" id="doctrine_migrations.schema_filter_listener"/>
      </argument>
    </service>
    <service id="doctrine.dbal.logging_middleware.default" class="Doctrine\DBAL\Logging\Middleware">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine"/>
    </service>
    <service id="doctrine.dbal.debug_middleware.default" class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware">
      <argument type="service" id="doctrine.debug_data_holder"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
      <call method="setConnectionName">
        <argument>default</argument>
      </call>
    </service>
    <service id=".debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id=".debug.security.voter.security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.role_hierarchy_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id=".debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.listener.csrf_protection" class="Symfony\Component\Security\Http\EventListener\CsrfProtectionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="security.logout.listener.csrf_token_clearing" class="Symfony\Component\Security\Http\EventListener\CsrfTokenClearingLogoutListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="security.ldap_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id="monolog.logger.request" class="Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.console" class="Monolog\Logger">
      <argument>console</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.messenger" class="Monolog\Logger">
      <argument>messenger</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.cache" class="Monolog\Logger">
      <argument>cache</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.asset_mapper" class="Monolog\Logger">
      <argument>asset_mapper</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.http_client" class="Monolog\Logger">
      <argument>http_client</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.mailer" class="Monolog\Logger">
      <argument>mailer</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.translation" class="Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.php" class="Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.event" class="Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.router" class="Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.profiler" class="Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.doctrine" class="Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.debug" class="Monolog\Logger">
      <argument>debug</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.security" class="Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.logger.deprecation" class="Monolog\Logger" public="true">
      <argument>deprecation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator service="debug.debug_logger_configurator" method="pushDebugLogger"/>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator.yY.p4P7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service_closure" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service_closure" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service_closure" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service_closure" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service_closure" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service_closure" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service_closure" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service_closure" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service_closure" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service_closure" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service_closure" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id="debug.security.event_dispatcher.main" class="Symfony\Component\EventDispatcher\Debug\TraceableEventDispatcher">
      <tag name="security.event_dispatcher.main">event_dispatcher.dispatcher</tag>
      <tag name="container.decorator" id="security.event_dispatcher.main" inner="debug.security.event_dispatcher.main.inner"/>
      <argument type="service" id="debug.security.event_dispatcher.main.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.main.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.session.main"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.default.main"/>
          <argument>onLogout</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.session.main"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_remember_me_conditions.main"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>-32</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.remember_me.main"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginFailureEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.remember_me.main"/>
          <argument>clearCookie</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.remember_me.main"/>
          <argument>clearCookie</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\TokenDeauthenticatedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.remember_me.main"/>
          <argument>clearCookie</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.main"/>
          <argument>preCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.main"/>
          <argument>postCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id=".service_locator.O2p6Lk7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service_closure" id="debug.serializer" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
        <argument key="web_link.http_header_serializer" type="service_closure" id="web_link.http_header_serializer" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\AbsenceController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\AbsenceController"/>
      <argument>App\Controller\AbsenceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\AccueilController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\AccueilController"/>
      <argument>App\Controller\AccueilController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\AchatController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\AchatController"/>
      <argument>App\Controller\AchatController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\ApprovisionnementController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\ApprovisionnementController"/>
      <argument>App\Controller\ApprovisionnementController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\AvoirController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\AvoirController"/>
      <argument>App\Controller\AvoirController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\BanqueController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\BanqueController"/>
      <argument>App\Controller\BanqueController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\CalendrierController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\CalendrierController"/>
      <argument>App\Controller\CalendrierController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\CategorieController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\CategorieController"/>
      <argument>App\Controller\CategorieController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\ClientController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\ClientController"/>
      <argument>App\Controller\ClientController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\CommandeController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\CommandeController"/>
      <argument>App\Controller\CommandeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\CongeController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\CongeController"/>
      <argument>App\Controller\CongeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\ContratController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\ContratController"/>
      <argument>App\Controller\ContratController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\CritereEvaluationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\CritereEvaluationController"/>
      <argument>App\Controller\CritereEvaluationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\DemandeExplicationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\DemandeExplicationController"/>
      <argument>App\Controller\DemandeExplicationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\DepartementController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\DepartementController"/>
      <argument>App\Controller\DepartementController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\DepenseController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\DepenseController"/>
      <argument>App\Controller\DepenseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\DetteController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\DetteController"/>
      <argument>App\Controller\DetteController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\DocumentController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\DocumentController"/>
      <argument>App\Controller\DocumentController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\EmployeController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\EmployeController"/>
      <argument>App\Controller\EmployeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\EvaluationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\EvaluationController"/>
      <argument>App\Controller\EvaluationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\FeedbackController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\FeedbackController"/>
      <argument>App\Controller\FeedbackController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\FinanceController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\FinanceController"/>
      <argument>App\Controller\FinanceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\FinancementController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\FinancementController"/>
      <argument>App\Controller\FinancementController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\FormationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\FormationController"/>
      <argument>App\Controller\FormationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\FournisseurController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\FournisseurController"/>
      <argument>App\Controller\FournisseurController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\HeureSuplementaireController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\HeureSuplementaireController"/>
      <argument>App\Controller\HeureSuplementaireController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\LivrerController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\LivrerController"/>
      <argument>App\Controller\LivrerController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\MessageController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\MessageController"/>
      <argument>App\Controller\MessageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\NoteServiceController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\NoteServiceController"/>
      <argument>App\Controller\NoteServiceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\NotificationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\NotificationController"/>
      <argument>App\Controller\NotificationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\OrderController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\OrderController"/>
      <argument>App\Controller\OrderController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\PaieController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\PaieController"/>
      <argument>App\Controller\PaieController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\PanierController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\PanierController"/>
      <argument>App\Controller\PanierController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\PosteController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\PosteController"/>
      <argument>App\Controller\PosteController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\PrimeController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\PrimeController"/>
      <argument>App\Controller\PrimeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\PrimePerformanceController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\PrimePerformanceController"/>
      <argument>App\Controller\PrimePerformanceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\ProduitController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\ProduitController"/>
      <argument>App\Controller\ProduitController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\PromotionController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\PromotionController"/>
      <argument>App\Controller\PromotionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\ReclamationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\ReclamationController"/>
      <argument>App\Controller\ReclamationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\RemboursementController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\RemboursementController"/>
      <argument>App\Controller\RemboursementController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\ReponseController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\ReponseController"/>
      <argument>App\Controller\ReponseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\SanctionController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\SanctionController"/>
      <argument>App\Controller\SanctionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\SecurityController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\SecurityController"/>
      <argument>App\Controller\SecurityController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\Security\securityController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Security\securityController"/>
      <argument>App\Controller\Security\securityController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\StockController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\StockController"/>
      <argument>App\Controller\StockController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\SuggestionController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\SuggestionController"/>
      <argument>App\Controller\SuggestionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\TestController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\TestController"/>
      <argument>App\Controller\TestController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\TransfertController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\TransfertController"/>
      <argument>App\Controller\TransfertController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\TypeCongeController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\TypeCongeController"/>
      <argument>App\Controller\TypeCongeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\TypeContratController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\TypeContratController"/>
      <argument>App\Controller\TypeContratController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.O2p6Lk7.App\Controller\TypeSanctionController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\TypeSanctionController"/>
      <argument>App\Controller\TypeSanctionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.fuYM_Z." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.fuYM_Z..translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fuYM_Z." method="withContext"/>
    </service>
    <service id=".service_locator.bN.V_Nq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service_closure" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.bN.V_Nq.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.bN.V_Nq" method="withContext"/>
    </service>
    <service id=".service_locator.cUcW89y" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service_closure" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.cUcW89y.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.cUcW89y" method="withContext"/>
    </service>
    <service id=".service_locator.etVElvN" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.etVElvN.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.etVElvN" method="withContext"/>
    </service>
    <service id=".service_locator.oR77BOj" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver" type="service_closure" id=".debug.value_resolver.doctrine.orm.entity_value_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.backed_enum_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.datetime"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.default"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.query_parameter_value_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request_attribute"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request_payload"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.service"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.session"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.variadic"/>
        <argument key="Symfony\Component\Security\Http\Controller\SecurityTokenValueResolver" type="service_closure" id=".debug.value_resolver.security.security_token_value_resolver"/>
        <argument key="Symfony\Component\Security\Http\Controller\UserValueResolver" type="service_closure" id=".debug.value_resolver.security.user_value_resolver"/>
        <argument key="argument_resolver.not_tagged_controller" type="service_closure" id=".debug.value_resolver.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id=".service_locator.XXv1IfR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.Xbsa8iG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.NBUFN6A" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cache.app" type="service_closure" id="cache.app.taggable"/>
      </argument>
    </service>
    <service id=".service_locator._1SGciK" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="event_dispatcher" type="service_closure" id="debug.event_dispatcher"/>
        <argument key="security.event_dispatcher.main" type="service_closure" id="debug.security.event_dispatcher.main"/>
      </argument>
    </service>
    <service id=".service_locator.LD5oJC8" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service_closure" id="kernel"/>
        <argument key="security.route_loader.logout" type="service_closure" id="security.route_loader.logout"/>
      </argument>
    </service>
    <service id=".service_locator.Kl0E_Fe" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="env" type="service_closure" id="container.getenv"/>
        <argument key="service" type="service_closure" id="container.get_routing_condition_service"/>
      </argument>
    </service>
    <service id=".service_locator.TpoC7U9" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="logger" type="service_closure" id="monolog.logger" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="session_collector" type="service_closure" id="data_collector.request.session_collector" on-invalid="ignore"/>
        <argument key="session_factory" type="service_closure" id="session.factory" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.0TACwl3" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="browser" type="service_closure" id="notifier.channel.browser"/>
        <argument key="chat" type="service_closure" id="notifier.channel.chat"/>
        <argument key="email" type="service_closure" id="notifier.channel.email"/>
        <argument key="push" type="service_closure" id="notifier.channel.push"/>
        <argument key="sms" type="service_closure" id="notifier.channel.sms"/>
      </argument>
    </service>
    <service id=".service_locator.LcVn9Hr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="request_stack" type="service_closure" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.e_.xxAP" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="request_stack" type="service_closure" id="request_stack"/>
        <argument key="security.authenticator.managers_locator" type="service_closure" id="security.authenticator.managers_locator" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.firewall.event_dispatcher_locator" type="service_closure" id="security.firewall.event_dispatcher_locator"/>
        <argument key="security.firewall.map" type="service_closure" id="security.firewall.map"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage"/>
        <argument key="security.user_checker_locator" type="service_closure" id="security.user_checker_locator"/>
      </argument>
    </service>
    <service id=".service_locator.Ar70cHn" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="main" type="service_closure" id="security.authenticator.remember_me_handler.main"/>
      </argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="http_client.uri_template.inner" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <argument type="collection">
        <argument type="service" id="http_client.transport"/>
      </argument>
      <factory function="current"/>
    </service>
    <service id="asset_mapper.cached_mapped_asset_factory.inner" class="Symfony\Component\AssetMapper\Factory\MappedAssetFactory">
      <argument type="service" id="asset_mapper.public_assets_path_resolver"/>
      <argument type="service" id="asset_mapper_compiler"/>
      <argument>C:\wamp\www\upgradegnt/assets/vendor</argument>
    </service>
    <service id="asset_mapper.asset_package.inner" class="Symfony\Component\Asset\PathPackage">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <call method="allowControllers">
        <argument type="collection">
          <argument>Symfony\Bundle\FrameworkBundle\Controller\AbstractController</argument>
          <argument>Symfony\Bundle\FrameworkBundle\Controller\TemplateController</argument>
        </argument>
      </call>
      <call method="allowControllers">
        <argument type="collection">
          <argument>App\Kernel</argument>
          <argument>App\Controller\AbsenceController</argument>
          <argument>App\Controller\AccueilController</argument>
          <argument>App\Controller\AchatController</argument>
          <argument>App\Controller\ApprovisionnementController</argument>
          <argument>App\Controller\AvoirController</argument>
          <argument>App\Controller\BanqueController</argument>
          <argument>App\Controller\CalendrierController</argument>
          <argument>App\Controller\CategorieController</argument>
          <argument>App\Controller\ClientController</argument>
          <argument>App\Controller\CommandeController</argument>
          <argument>App\Controller\CongeController</argument>
          <argument>App\Controller\ContratController</argument>
          <argument>App\Controller\CritereEvaluationController</argument>
          <argument>App\Controller\DemandeExplicationController</argument>
          <argument>App\Controller\DepartementController</argument>
          <argument>App\Controller\DepenseController</argument>
          <argument>App\Controller\DetteController</argument>
          <argument>App\Controller\DocumentController</argument>
          <argument>App\Controller\EmployeController</argument>
          <argument>App\Controller\EvaluationController</argument>
          <argument>App\Controller\FeedbackController</argument>
          <argument>App\Controller\FinanceController</argument>
          <argument>App\Controller\FinancementController</argument>
          <argument>App\Controller\FormationController</argument>
          <argument>App\Controller\FournisseurController</argument>
          <argument>App\Controller\HeureSuplementaireController</argument>
          <argument>App\Controller\LivrerController</argument>
          <argument>App\Controller\MessageController</argument>
          <argument>App\Controller\NoteServiceController</argument>
          <argument>App\Controller\NotificationController</argument>
          <argument>App\Controller\OrderController</argument>
          <argument>App\Controller\PaieController</argument>
          <argument>App\Controller\PanierController</argument>
          <argument>App\Controller\PosteController</argument>
          <argument>App\Controller\PrimeController</argument>
          <argument>App\Controller\PrimePerformanceController</argument>
          <argument>App\Controller\ProduitController</argument>
          <argument>App\Controller\PromotionController</argument>
          <argument>App\Controller\ReclamationController</argument>
          <argument>App\Controller\RemboursementController</argument>
          <argument>App\Controller\ReponseController</argument>
          <argument>App\Controller\SanctionController</argument>
          <argument>App\Controller\SecurityController</argument>
          <argument>App\Controller\Security\securityController</argument>
          <argument>App\Controller\StockController</argument>
          <argument>App\Controller\SuggestionController</argument>
          <argument>App\Controller\TestController</argument>
          <argument>App\Controller\TransfertController</argument>
          <argument>App\Controller\TypeCongeController</argument>
          <argument>App\Controller\TypeContratController</argument>
          <argument>App\Controller\TypeSanctionController</argument>
          <argument>Doctrine\Bundle\DoctrineBundle\Controller\ProfilerController</argument>
        </argument>
      </call>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id=".debug.value_resolver.security.user_value_resolver"/>
        <argument type="service" id=".debug.value_resolver.security.security_token_value_resolver"/>
        <argument type="service" id=".debug.value_resolver.doctrine.orm.entity_value_resolver"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.backed_enum_resolver"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.datetime"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.request_attribute"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.request"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.session"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.service"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.default"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.variadic"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.not_tagged_controller"/>
      </argument>
      <argument type="service" id=".service_locator.oR77BOj"/>
    </service>
    <service id="debug.serializer.inner" class="Symfony\Component\Serializer\Serializer">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.denormalizer.unwrapping"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.flatten_exception"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.problem"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.uid"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.datetime"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.mime_message"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.datetimezone"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.dateinterval"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.form_error"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.backed_enum"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.data_uri"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.translatable"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.json_serializable"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.denormalizer.array"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableNormalizer">
            <argument type="service" id="serializer.normalizer.object"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
      </argument>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableEncoder">
            <argument type="service" id="serializer.encoder.xml"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableEncoder">
            <argument type="service" id="serializer.encoder.json"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableEncoder">
            <argument type="service" id="serializer.encoder.yaml"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Debug\TraceableEncoder">
            <argument type="service" id="serializer.encoder.csv"/>
            <argument type="service" id="serializer.data_collector"/>
          </service>
        </argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="doctrine.migrations.container_aware_migrations_factory.inner" class="Doctrine\Migrations\Version\MigrationFactory">
      <factory service="doctrine.migrations.dependency_factory" method="getMigrationFactory"/>
    </service>
    <service id="var_dumper.contextualized_cli_dumper.inner" class="Symfony\Component\VarDumper\Dumper\CliDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="turbo.broadcaster.action_renderer.inner" class="Symfony\UX\Turbo\Broadcaster\ImuxBroadcaster">
      <argument type="tagged_iterator" tag="turbo.broadcaster"/>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager">
      <argument type="iterator">
        <argument type="service" id=".debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id=".debug.security.voter.security.access.role_hierarchy_voter"/>
        <argument type="service" id=".debug.security.voter.security.access.expression_voter"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\Strategy\AffirmativeStrategy">
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="debug.security.firewall.authenticator.main.inner" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener">
      <argument type="service" id="security.authenticator.manager.main"/>
    </service>
    <service id="debug.traced.messenger.bus.default.inner" class="Symfony\Component\Messenger\MessageBus">
      <argument type="iterator">
        <argument type="service" id="messenger.bus.default.middleware.traceable"/>
        <argument type="service" id="messenger.bus.default.middleware.add_bus_name_stamp_middleware"/>
        <argument type="service" id="messenger.middleware.reject_redelivered_message_middleware"/>
        <argument type="service" id="messenger.middleware.dispatch_after_current_bus"/>
        <argument type="service" id="messenger.middleware.failed_message_processing_middleware"/>
        <argument type="service" id="messenger.bus.default.middleware.send_message"/>
        <argument type="service" id="messenger.bus.default.middleware.handle_message"/>
      </argument>
    </service>
    <service id=".doctrine.orm.default_metadata_driver.inner" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_attribute_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
    </service>
    <service id="debug.security.event_dispatcher.main.inner" class="Symfony\Component\EventDispatcher\EventDispatcher"/>
    <service id=".errored..service_locator.y4_Zrx..Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.y4_Zrx.&quot;: it needs an instance of &quot;Symfony\Component\Config\Loader\LoaderInterface&quot; but this type has been excluded from autowiring."/>
    </service>
    <service id=".errored..service_locator.c8ntken.App\Entity\Absence" class="App\Entity\Absence">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.c8ntken&quot;: it needs an instance of &quot;App\Entity\Absence&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.V.4pGB4.App\Entity\Absence" class="App\Entity\Absence">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.V.4pGB4&quot;: it needs an instance of &quot;App\Entity\Absence&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.izgUQZX.App\Entity\Album" class="App\Entity\Album">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.izgUQZX&quot;: it needs an instance of &quot;App\Entity\Album&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.bpW2Pi_.App\Entity\Facture" class="App\Entity\Facture">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.bpW2Pi_&quot;: it needs an instance of &quot;App\Entity\Facture&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.CxwWrHG.App\Entity\Achat" class="App\Entity\Achat">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.CxwWrHG&quot;: it needs an instance of &quot;App\Entity\Achat&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.KJUDKN5.App\Entity\Approvisionner" class="App\Entity\Approvisionner">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.KJUDKN5&quot;: it needs an instance of &quot;App\Entity\Approvisionner&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.TrbL_Ht.App\Entity\Commande" class="App\Entity\Commande">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.TrbL_Ht&quot;: it needs an instance of &quot;App\Entity\Commande&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.nkRrMOH.App\Entity\Reclamation" class="App\Entity\Reclamation">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.nkRrMOH&quot;: it needs an instance of &quot;App\Entity\Reclamation&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.hxmsnV3.App\Entity\Avoir" class="App\Entity\Avoir">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.hxmsnV3&quot;: it needs an instance of &quot;App\Entity\Avoir&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.zKlKQIW.App\Entity\Avoir" class="App\Entity\Avoir">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.zKlKQIW&quot;: it needs an instance of &quot;App\Entity\Avoir&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.0_IFjR8.App\Entity\Banque" class="App\Entity\Banque">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.0_IFjR8&quot;: it needs an instance of &quot;App\Entity\Banque&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator..b08g3n.App\Entity\Calendrier" class="App\Entity\Calendrier">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator..b08g3n&quot;: it needs an instance of &quot;App\Entity\Calendrier&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.j7wOkYK.App\Entity\Categorie" class="App\Entity\Categorie">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.j7wOkYK&quot;: it needs an instance of &quot;App\Entity\Categorie&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.lTbvCHw.App\Entity\Client" class="App\Entity\Client">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.lTbvCHw&quot;: it needs an instance of &quot;App\Entity\Client&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.6U8p9sv.App\Entity\Commande" class="App\Entity\Commande">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.6U8p9sv&quot;: it needs an instance of &quot;App\Entity\Commande&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.AYYV.am.App\Entity\Commande" class="App\Entity\Commande">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.AYYV.am&quot;: it needs an instance of &quot;App\Entity\Commande&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.Ui9XhIN.App\Entity\User" class="App\Entity\User">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.Ui9XhIN&quot;: it needs an instance of &quot;App\Entity\User&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.L9F73kI.App\Entity\Conges" class="App\Entity\Conges">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.L9F73kI&quot;: it needs an instance of &quot;App\Entity\Conges&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.xpZJLkN.App\Entity\Contrat" class="App\Entity\Contrat">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.xpZJLkN&quot;: it needs an instance of &quot;App\Entity\Contrat&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.f5JWNKP.App\Entity\CritereEvaluation" class="App\Entity\CritereEvaluation">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.f5JWNKP&quot;: it needs an instance of &quot;App\Entity\CritereEvaluation&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.dcCJG7q.App\Entity\DemandeExplication" class="App\Entity\DemandeExplication">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.dcCJG7q&quot;: it needs an instance of &quot;App\Entity\DemandeExplication&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.s67.kI6.App\Entity\DemandeExplication" class="App\Entity\DemandeExplication">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.s67.kI6&quot;: it needs an instance of &quot;App\Entity\DemandeExplication&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.ORb6BpB.App\Entity\DemandeExplication" class="App\Entity\DemandeExplication">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.ORb6BpB&quot;: it needs an instance of &quot;App\Entity\DemandeExplication&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.EppKkcr.App\Entity\Departement" class="App\Entity\Departement">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.EppKkcr&quot;: it needs an instance of &quot;App\Entity\Departement&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.2_83HPM.App\Entity\Depense" class="App\Entity\Depense">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.2_83HPM&quot;: it needs an instance of &quot;App\Entity\Depense&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.je7oNoj.App\Entity\Employe" class="App\Entity\Employe">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.je7oNoj&quot;: it needs an instance of &quot;App\Entity\Employe&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.Q8RAY9A.App\Entity\Document" class="App\Entity\Document">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.Q8RAY9A&quot;: it needs an instance of &quot;App\Entity\Document&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.I3mS6IL.App\Entity\Employe" class="App\Entity\Employe">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.I3mS6IL&quot;: it needs an instance of &quot;App\Entity\Employe&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.eheopyZ.App\Entity\Evaluation" class="App\Entity\Evaluation">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.eheopyZ&quot;: it needs an instance of &quot;App\Entity\Evaluation&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.bembAWs.App\Entity\Feedback" class="App\Entity\Feedback">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.bembAWs&quot;: it needs an instance of &quot;App\Entity\Feedback&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.iHHwidk.App\Entity\Banque" class="App\Entity\Banque">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.iHHwidk&quot;: it needs an instance of &quot;App\Entity\Banque&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.5X2ZcxV.App\Entity\Financement" class="App\Entity\Financement">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.5X2ZcxV&quot;: it needs an instance of &quot;App\Entity\Financement&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.dy6wSj2.App\Entity\Formation" class="App\Entity\Formation">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.dy6wSj2&quot;: it needs an instance of &quot;App\Entity\Formation&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.ZlrNvMC.App\Entity\Fournisseur" class="App\Entity\Fournisseur">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.ZlrNvMC&quot;: it needs an instance of &quot;App\Entity\Fournisseur&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.mol62a..App\Entity\HeureSuplementaire" class="App\Entity\HeureSuplementaire">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.mol62a.&quot;: it needs an instance of &quot;App\Entity\HeureSuplementaire&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.FMQ3BcF.App\Entity\Commande" class="App\Entity\Commande">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.FMQ3BcF&quot;: it needs an instance of &quot;App\Entity\Commande&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.JI6lAHM.App\Entity\Livrer" class="App\Entity\Livrer">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.JI6lAHM&quot;: it needs an instance of &quot;App\Entity\Livrer&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator..WiOQnA.App\Entity\Retour" class="App\Entity\Retour">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator..WiOQnA&quot;: it needs an instance of &quot;App\Entity\Retour&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.o4O0eww.App\Entity\Commande" class="App\Entity\Commande">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.o4O0eww&quot;: it needs an instance of &quot;App\Entity\Commande&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.0BS18HQ.App\Entity\Commande" class="App\Entity\Commande">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.0BS18HQ&quot;: it needs an instance of &quot;App\Entity\Commande&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.0BS18HQ.App\Entity\Livrer" class="App\Entity\Livrer">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.0BS18HQ&quot;: it needs an instance of &quot;App\Entity\Livrer&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.RQY3Y3g.App\Entity\Retour" class="App\Entity\Retour">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.RQY3Y3g&quot;: it needs an instance of &quot;App\Entity\Retour&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.5Hn467b.App\Entity\Commande" class="App\Entity\Commande">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.5Hn467b&quot;: it needs an instance of &quot;App\Entity\Commande&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.foeGtlr.App\Entity\Commande" class="App\Entity\Commande">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.foeGtlr&quot;: it needs an instance of &quot;App\Entity\Commande&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.Xc.m5Mv.App\Entity\Retour" class="App\Entity\Retour">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.Xc.m5Mv&quot;: it needs an instance of &quot;App\Entity\Retour&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.NttXpgM.App\Entity\MessageRecipient" class="App\Entity\MessageRecipient">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.NttXpgM&quot;: it needs an instance of &quot;App\Entity\MessageRecipient&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.lJ.UBt7.App\Entity\Message" class="App\Entity\Message">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.lJ.UBt7&quot;: it needs an instance of &quot;App\Entity\Message&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.fDTLJwW.App\Entity\NoteService" class="App\Entity\NoteService">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.fDTLJwW&quot;: it needs an instance of &quot;App\Entity\NoteService&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.fYOg1aH.App\Entity\Paie" class="App\Entity\Paie">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.fYOg1aH&quot;: it needs an instance of &quot;App\Entity\Paie&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.zHBsodI.App\Entity\Produit" class="App\Entity\Produit">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.zHBsodI&quot;: it needs an instance of &quot;App\Entity\Produit&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.K.OvH49.App\Entity\Poste" class="App\Entity\Poste">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.K.OvH49&quot;: it needs an instance of &quot;App\Entity\Poste&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.CQ8XLG_.App\Entity\Poste" class="App\Entity\Poste">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.CQ8XLG_&quot;: it needs an instance of &quot;App\Entity\Poste&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.MJNrreu.App\Entity\Prime" class="App\Entity\Prime">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.MJNrreu&quot;: it needs an instance of &quot;App\Entity\Prime&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.yWLnPqK.App\Entity\PrimePerformance" class="App\Entity\PrimePerformance">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.yWLnPqK&quot;: it needs an instance of &quot;App\Entity\PrimePerformance&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.ViXcClx.App\Entity\Produit" class="App\Entity\Produit">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.ViXcClx&quot;: it needs an instance of &quot;App\Entity\Produit&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.A2hTFDL.App\Entity\Promotion" class="App\Entity\Promotion">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.A2hTFDL&quot;: it needs an instance of &quot;App\Entity\Promotion&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.4lf9RTo.App\Entity\Promotion" class="App\Entity\Promotion">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.4lf9RTo&quot;: it needs an instance of &quot;App\Entity\Promotion&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.sKXD69h.App\Entity\User" class="App\Entity\User">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.sKXD69h&quot;: it needs an instance of &quot;App\Entity\User&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.Hz5btge.App\Entity\User" class="App\Entity\User">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.Hz5btge&quot;: it needs an instance of &quot;App\Entity\User&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.SY0zWOw.App\Entity\Reclamation" class="App\Entity\Reclamation">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.SY0zWOw&quot;: it needs an instance of &quot;App\Entity\Reclamation&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.k4Bq10G.App\Entity\Reclamation" class="App\Entity\Reclamation">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.k4Bq10G&quot;: it needs an instance of &quot;App\Entity\Reclamation&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.PjrYeyB.App\Entity\Avoir" class="App\Entity\Avoir">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.PjrYeyB&quot;: it needs an instance of &quot;App\Entity\Avoir&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.p6oBFqB.App\Entity\Remboursement" class="App\Entity\Remboursement">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.p6oBFqB&quot;: it needs an instance of &quot;App\Entity\Remboursement&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.Nf.XpWv.App\Entity\Reponse" class="App\Entity\Reponse">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.Nf.XpWv&quot;: it needs an instance of &quot;App\Entity\Reponse&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.FvaKkR4.App\Entity\Sanction" class="App\Entity\Sanction">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.FvaKkR4&quot;: it needs an instance of &quot;App\Entity\Sanction&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.4tqk5Qq.App\Entity\User" class="App\Entity\User">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.4tqk5Qq&quot;: it needs an instance of &quot;App\Entity\User&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.caIy2eX.App\Entity\Commande" class="App\Entity\Commande">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.caIy2eX&quot;: it needs an instance of &quot;App\Entity\Commande&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.0FQRyqG.App\Entity\Retour" class="App\Entity\Retour">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.0FQRyqG&quot;: it needs an instance of &quot;App\Entity\Retour&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.EZHsKb7.App\Entity\Produit" class="App\Entity\Produit">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.EZHsKb7&quot;: it needs an instance of &quot;App\Entity\Produit&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.s7Dxo1M.App\Entity\Suggestion" class="App\Entity\Suggestion">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.s7Dxo1M&quot;: it needs an instance of &quot;App\Entity\Suggestion&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.iOmYmBM.App\Entity\Test" class="App\Entity\Test">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.iOmYmBM&quot;: it needs an instance of &quot;App\Entity\Test&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.VZRjqOk.App\Entity\Test" class="App\Entity\Test">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.VZRjqOk&quot;: it needs an instance of &quot;App\Entity\Test&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.GzP66Op.App\Entity\Transfert" class="App\Entity\Transfert">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.GzP66Op&quot;: it needs an instance of &quot;App\Entity\Transfert&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.BpNOuyb.App\Entity\TypeConge" class="App\Entity\TypeConge">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.BpNOuyb&quot;: it needs an instance of &quot;App\Entity\TypeConge&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.s6oL59b.App\Entity\TypeContrat" class="App\Entity\TypeContrat">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.s6oL59b&quot;: it needs an instance of &quot;App\Entity\TypeContrat&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".errored..service_locator.5criBkT.App\Entity\TypeSanction" class="App\Entity\TypeSanction">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.5criBkT&quot;: it needs an instance of &quot;App\Entity\TypeSanction&quot; but this type has been excluded in &quot;config/services.yaml&quot;."/>
    </service>
    <service id=".console.command.about.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>about</argument>
      <argument type="collection"/>
      <argument>Display information about the current project</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.about"/>
    </service>
    <service id=".console.command.assets_install.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>assets:install</argument>
      <argument type="collection"/>
      <argument>Install bundle's web assets under a public directory</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.assets_install"/>
    </service>
    <service id=".console.command.cache_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:clear</argument>
      <argument type="collection"/>
      <argument>Clear the cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_clear"/>
    </service>
    <service id=".console.command.cache_pool_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:clear</argument>
      <argument type="collection"/>
      <argument>Clear cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_clear"/>
    </service>
    <service id=".console.command.cache_pool_prune.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:prune</argument>
      <argument type="collection"/>
      <argument>Prune cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_prune"/>
    </service>
    <service id=".console.command.cache_pool_invalidate_tags.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:invalidate-tags</argument>
      <argument type="collection"/>
      <argument>Invalidate cache tags for all or a specific pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_invalidate_tags"/>
    </service>
    <service id=".console.command.cache_pool_delete.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:delete</argument>
      <argument type="collection"/>
      <argument>Delete an item from a cache pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_delete"/>
    </service>
    <service id=".console.command.cache_pool_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:list</argument>
      <argument type="collection"/>
      <argument>List available cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_list"/>
    </service>
    <service id=".console.command.cache_warmup.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:warmup</argument>
      <argument type="collection"/>
      <argument>Warm up an empty cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_warmup"/>
    </service>
    <service id=".console.command.config_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:config</argument>
      <argument type="collection"/>
      <argument>Dump the current configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_debug"/>
    </service>
    <service id=".console.command.config_dump_reference.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>config:dump-reference</argument>
      <argument type="collection"/>
      <argument>Dump the default configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_dump_reference"/>
    </service>
    <service id=".console.command.container_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:container</argument>
      <argument type="collection"/>
      <argument>Display current services for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_debug"/>
    </service>
    <service id=".console.command.container_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:container</argument>
      <argument type="collection"/>
      <argument>Ensure that arguments injected into services match type declarations</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_lint"/>
    </service>
    <service id=".console.command.debug_autowiring.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:autowiring</argument>
      <argument type="collection"/>
      <argument>List classes/interfaces you can use for autowiring</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.debug_autowiring"/>
    </service>
    <service id=".console.command.dotenv_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:dotenv</argument>
      <argument type="collection"/>
      <argument>List all dotenv files with variables and values</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.dotenv_debug"/>
    </service>
    <service id=".console.command.event_dispatcher_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:event-dispatcher</argument>
      <argument type="collection"/>
      <argument>Display configured listeners for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.event_dispatcher_debug"/>
    </service>
    <service id=".console.command.messenger_consume_messages.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:consume</argument>
      <argument type="collection"/>
      <argument>Consume messages</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_consume_messages"/>
    </service>
    <service id=".console.command.messenger_setup_transports.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:setup-transports</argument>
      <argument type="collection"/>
      <argument>Prepare the required infrastructure for the transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_setup_transports"/>
    </service>
    <service id=".console.command.messenger_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:messenger</argument>
      <argument type="collection"/>
      <argument>List messages you can dispatch using the message buses</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_debug"/>
    </service>
    <service id=".console.command.messenger_stop_workers.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:stop-workers</argument>
      <argument type="collection"/>
      <argument>Stop workers after their current message</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_stop_workers"/>
    </service>
    <service id=".console.command.messenger_failed_messages_retry.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:failed:retry</argument>
      <argument type="collection"/>
      <argument>Retry one or more messages from the failure transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_failed_messages_retry"/>
    </service>
    <service id=".console.command.messenger_failed_messages_show.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:failed:show</argument>
      <argument type="collection"/>
      <argument>Show one or more messages from the failure transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_failed_messages_show"/>
    </service>
    <service id=".console.command.messenger_failed_messages_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:failed:remove</argument>
      <argument type="collection"/>
      <argument>Remove given messages from the failure transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_failed_messages_remove"/>
    </service>
    <service id=".console.command.messenger_stats.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:stats</argument>
      <argument type="collection"/>
      <argument>Show the message count for one or more transports</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_stats"/>
    </service>
    <service id=".console.command.router_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:router</argument>
      <argument type="collection"/>
      <argument>Display current routes for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_debug"/>
    </service>
    <service id=".console.command.router_match.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>router:match</argument>
      <argument type="collection"/>
      <argument>Help debug routes by simulating a path info match</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_match"/>
    </service>
    <service id=".console.command.serializer_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:serializer</argument>
      <argument type="collection"/>
      <argument>Display serialization information for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.serializer_debug"/>
    </service>
    <service id=".console.command.translation_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:translation</argument>
      <argument type="collection"/>
      <argument>Display translation messages information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_debug"/>
    </service>
    <service id=".console.command.translation_extract.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:extract</argument>
      <argument type="collection"/>
      <argument>Extract missing translations keys from code to translation files</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_extract"/>
    </service>
    <service id=".console.command.validator_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:validator</argument>
      <argument type="collection"/>
      <argument>Display validation constraints for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.validator_debug"/>
    </service>
    <service id=".console.command.translation_pull.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:pull</argument>
      <argument type="collection"/>
      <argument>Pull translations from a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_pull"/>
    </service>
    <service id=".console.command.translation_push.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:push</argument>
      <argument type="collection"/>
      <argument>Push translations to a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_push"/>
    </service>
    <service id=".console.command.xliff_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:xliff</argument>
      <argument type="collection"/>
      <argument>Lint an XLIFF file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.xliff_lint"/>
    </service>
    <service id=".console.command.yaml_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:yaml</argument>
      <argument type="collection"/>
      <argument>Lint a YAML file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.yaml_lint"/>
    </service>
    <service id=".console.command.form_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:form</argument>
      <argument type="collection"/>
      <argument>Display form type information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.form_debug"/>
    </service>
    <service id=".console.command.secrets_set.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:set</argument>
      <argument type="collection"/>
      <argument>Set a secret in the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_set"/>
    </service>
    <service id=".console.command.secrets_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:remove</argument>
      <argument type="collection"/>
      <argument>Remove a secret from the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_remove"/>
    </service>
    <service id=".console.command.secrets_generate_key.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:generate-keys</argument>
      <argument type="collection"/>
      <argument>Generate new encryption keys</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_generate_key"/>
    </service>
    <service id=".console.command.secrets_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:list</argument>
      <argument type="collection"/>
      <argument>List all secrets</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_list"/>
    </service>
    <service id=".console.command.secrets_decrypt_to_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:decrypt-to-local</argument>
      <argument type="collection"/>
      <argument>Decrypt all secrets and stores them in the local vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_decrypt_to_local"/>
    </service>
    <service id=".console.command.secrets_encrypt_from_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:encrypt-from-local</argument>
      <argument type="collection"/>
      <argument>Encrypt all local secrets to the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_encrypt_from_local"/>
    </service>
    <service id=".asset_mapper.command.compile.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>asset-map:compile</argument>
      <argument type="collection"/>
      <argument>Compile all mapped assets and writes them to the final public output directory</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.command.compile"/>
    </service>
    <service id=".asset_mapper.command.debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:asset-map</argument>
      <argument type="collection"/>
      <argument>Output all mapped assets</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.command.debug"/>
    </service>
    <service id=".asset_mapper.importmap.command.require.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>importmap:require</argument>
      <argument type="collection"/>
      <argument>Require JavaScript packages</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.importmap.command.require"/>
    </service>
    <service id=".asset_mapper.importmap.command.remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>importmap:remove</argument>
      <argument type="collection"/>
      <argument>Remove JavaScript packages</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.importmap.command.remove"/>
    </service>
    <service id=".asset_mapper.importmap.command.update.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>importmap:update</argument>
      <argument type="collection"/>
      <argument>Update JavaScript packages to their latest versions</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.importmap.command.update"/>
    </service>
    <service id=".asset_mapper.importmap.command.install.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>importmap:install</argument>
      <argument type="collection"/>
      <argument>Download all assets that should be downloaded</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.importmap.command.install"/>
    </service>
    <service id=".asset_mapper.importmap.command.audit.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>importmap:audit</argument>
      <argument type="collection"/>
      <argument>Check for security vulnerability advisories for dependencies</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.importmap.command.audit"/>
    </service>
    <service id=".asset_mapper.importmap.command.outdated.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>importmap:outdated</argument>
      <argument type="collection"/>
      <argument>List outdated JavaScript packages and their latest versions</argument>
      <argument>false</argument>
      <argument type="service_closure" id="asset_mapper.importmap.command.outdated"/>
    </service>
    <service id=".console.command.mailer_test.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>mailer:test</argument>
      <argument type="collection"/>
      <argument>Test Mailer transports by sending an email</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.mailer_test"/>
    </service>
    <service id=".doctrine_migrations.diff_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:diff</argument>
      <argument type="collection"/>
      <argument>Generate a migration by comparing your current database to your mapping information.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.diff_command"/>
    </service>
    <service id=".doctrine_migrations.sync_metadata_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:sync-metadata-storage</argument>
      <argument type="collection"/>
      <argument>Ensures that the metadata storage is at the latest version.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.sync_metadata_command"/>
    </service>
    <service id=".doctrine_migrations.versions_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:list</argument>
      <argument type="collection"/>
      <argument>Display a list of all available migrations and their status.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.versions_command"/>
    </service>
    <service id=".doctrine_migrations.current_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:current</argument>
      <argument type="collection"/>
      <argument>Outputs the current version</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.current_command"/>
    </service>
    <service id=".doctrine_migrations.dump_schema_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:dump-schema</argument>
      <argument type="collection"/>
      <argument>Dump the schema for your database to a migration.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.dump_schema_command"/>
    </service>
    <service id=".doctrine_migrations.execute_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:execute</argument>
      <argument type="collection"/>
      <argument>Execute one or more migration versions up or down manually.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.execute_command"/>
    </service>
    <service id=".doctrine_migrations.generate_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:generate</argument>
      <argument type="collection"/>
      <argument>Generate a blank migration class.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.generate_command"/>
    </service>
    <service id=".doctrine_migrations.latest_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:latest</argument>
      <argument type="collection"/>
      <argument>Outputs the latest version</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.latest_command"/>
    </service>
    <service id=".doctrine_migrations.migrate_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:migrate</argument>
      <argument type="collection"/>
      <argument>Execute a migration to a specified version or the latest available version.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.migrate_command"/>
    </service>
    <service id=".doctrine_migrations.rollup_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:rollup</argument>
      <argument type="collection"/>
      <argument>Rollup migrations by deleting all tracked versions and insert the one version that exists.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.rollup_command"/>
    </service>
    <service id=".doctrine_migrations.status_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:status</argument>
      <argument type="collection"/>
      <argument>View the status of a set of migrations.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.status_command"/>
    </service>
    <service id=".doctrine_migrations.up_to_date_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:up-to-date</argument>
      <argument type="collection"/>
      <argument>Tells you if your schema is up-to-date.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.up_to_date_command"/>
    </service>
    <service id=".doctrine_migrations.version_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:version</argument>
      <argument type="collection"/>
      <argument>Manually add and delete migration versions from the version table.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.version_command"/>
    </service>
    <service id=".var_dumper.command.server_dump.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>server:dump</argument>
      <argument type="collection"/>
      <argument>Start a dump server that collects and displays dumps in a single place</argument>
      <argument>false</argument>
      <argument type="service_closure" id="var_dumper.command.server_dump"/>
    </service>
    <service id=".monolog.command.server_log.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>server:log</argument>
      <argument type="collection"/>
      <argument>Start a log server that displays logs in real time</argument>
      <argument>false</argument>
      <argument type="service_closure" id="monolog.command.server_log"/>
    </service>
    <service id=".twig.command.debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:twig</argument>
      <argument type="collection"/>
      <argument>Show a list of twig functions, filters, globals and tests</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.debug"/>
    </service>
    <service id=".twig.command.lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:twig</argument>
      <argument type="collection"/>
      <argument>Lint a Twig template and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.lint"/>
    </service>
    <service id=".security.command.debug_firewall.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:firewall</argument>
      <argument type="collection"/>
      <argument>Display information about your security firewall(s)</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.debug_firewall"/>
    </service>
    <service id=".security.command.user_password_hash.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>security:hash-password</argument>
      <argument type="collection"/>
      <argument>Hash a user password</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.user_password_hash"/>
    </service>
    <service id=".maker.auto_command.make_auth.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:auth</argument>
      <argument type="collection"/>
      <argument>Create a Guard authenticator of different flavors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_auth"/>
    </service>
    <service id=".maker.auto_command.make_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:command</argument>
      <argument type="collection"/>
      <argument>Create a new console command class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_command"/>
    </service>
    <service id=".maker.auto_command.make_twig_component.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:twig-component</argument>
      <argument type="collection"/>
      <argument>Create a twig (or live) component</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_twig_component"/>
    </service>
    <service id=".maker.auto_command.make_controller.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:controller</argument>
      <argument type="collection"/>
      <argument>Create a new controller class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_controller"/>
    </service>
    <service id=".maker.auto_command.make_crud.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:crud</argument>
      <argument type="collection"/>
      <argument>Create CRUD for Doctrine entity class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_crud"/>
    </service>
    <service id=".maker.auto_command.make_docker_database.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:docker:database</argument>
      <argument type="collection"/>
      <argument>Add a database container to your compose.yaml file</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_docker_database"/>
    </service>
    <service id=".maker.auto_command.make_entity.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:entity</argument>
      <argument type="collection"/>
      <argument>Create or update a Doctrine entity class, and optionally an API Platform resource</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_entity"/>
    </service>
    <service id=".maker.auto_command.make_fixtures.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:fixtures</argument>
      <argument type="collection"/>
      <argument>Create a new class to load Doctrine fixtures</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_fixtures"/>
    </service>
    <service id=".maker.auto_command.make_form.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:form</argument>
      <argument type="collection"/>
      <argument>Create a new form class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_form"/>
    </service>
    <service id=".maker.auto_command.make_listener.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:listener</argument>
      <argument type="collection">
        <argument>make:subscriber</argument>
      </argument>
      <argument>Creates a new event subscriber class or a new event listener class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_listener"/>
    </service>
    <service id=".maker.auto_command.make_message.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:message</argument>
      <argument type="collection"/>
      <argument>Create a new message and handler</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_message"/>
    </service>
    <service id=".maker.auto_command.make_messenger_middleware.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:messenger-middleware</argument>
      <argument type="collection"/>
      <argument>Create a new messenger middleware</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_messenger_middleware"/>
    </service>
    <service id=".maker.auto_command.make_registration_form.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:registration-form</argument>
      <argument type="collection"/>
      <argument>Create a new registration form system</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_registration_form"/>
    </service>
    <service id=".maker.auto_command.make_reset_password.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:reset-password</argument>
      <argument type="collection"/>
      <argument>Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_reset_password"/>
    </service>
    <service id=".maker.auto_command.make_schedule.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:schedule</argument>
      <argument type="collection"/>
      <argument>Create a scheduler component</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_schedule"/>
    </service>
    <service id=".maker.auto_command.make_serializer_encoder.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:serializer:encoder</argument>
      <argument type="collection"/>
      <argument>Create a new serializer encoder class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_serializer_encoder"/>
    </service>
    <service id=".maker.auto_command.make_serializer_normalizer.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:serializer:normalizer</argument>
      <argument type="collection"/>
      <argument>Create a new serializer normalizer class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_serializer_normalizer"/>
    </service>
    <service id=".maker.auto_command.make_twig_extension.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:twig-extension</argument>
      <argument type="collection"/>
      <argument>Create a new Twig extension with its runtime class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_twig_extension"/>
    </service>
    <service id=".maker.auto_command.make_test.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:test</argument>
      <argument type="collection">
        <argument>make:unit-test</argument>
        <argument>make:functional-test</argument>
      </argument>
      <argument>Create a new test class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_test"/>
    </service>
    <service id=".maker.auto_command.make_validator.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:validator</argument>
      <argument type="collection"/>
      <argument>Create a new validator and constraint class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_validator"/>
    </service>
    <service id=".maker.auto_command.make_voter.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:voter</argument>
      <argument type="collection"/>
      <argument>Create a new security voter class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_voter"/>
    </service>
    <service id=".maker.auto_command.make_user.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:user</argument>
      <argument type="collection"/>
      <argument>Create a new security user class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_user"/>
    </service>
    <service id=".maker.auto_command.make_migration.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:migration</argument>
      <argument type="collection"/>
      <argument>Create a new migration based on database changes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_migration"/>
    </service>
    <service id=".maker.auto_command.make_stimulus_controller.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:stimulus-controller</argument>
      <argument type="collection"/>
      <argument>Create a new Stimulus controller</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_stimulus_controller"/>
    </service>
    <service id=".maker.auto_command.make_security_form_login.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:security:form-login</argument>
      <argument type="collection"/>
      <argument>Generate the code needed for the form_login authenticator</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_security_form_login"/>
    </service>
    <service id=".maker.auto_command.make_security_custom.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:security:custom</argument>
      <argument type="collection"/>
      <argument>Create a custom security authenticator.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_security_custom"/>
    </service>
    <service id=".maker.auto_command.make_webhook.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:webhook</argument>
      <argument type="collection"/>
      <argument>Create a new Webhook</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_webhook"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.rsY5EXH"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:invalidate-tags">console.command.cache_pool_invalidate_tags</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:dotenv">console.command.dotenv_debug</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="messenger:consume">console.command.messenger_consume_messages</argument>
        <argument key="messenger:setup-transports">console.command.messenger_setup_transports</argument>
        <argument key="debug:messenger">console.command.messenger_debug</argument>
        <argument key="messenger:stop-workers">console.command.messenger_stop_workers</argument>
        <argument key="messenger:failed:retry">console.command.messenger_failed_messages_retry</argument>
        <argument key="messenger:failed:show">console.command.messenger_failed_messages_show</argument>
        <argument key="messenger:failed:remove">console.command.messenger_failed_messages_remove</argument>
        <argument key="messenger:stats">console.command.messenger_stats</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:serializer">console.command.serializer_debug</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:extract">console.command.translation_extract</argument>
        <argument key="debug:validator">console.command.validator_debug</argument>
        <argument key="translation:pull">console.command.translation_pull</argument>
        <argument key="translation:push">console.command.translation_push</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="asset-map:compile">asset_mapper.command.compile</argument>
        <argument key="debug:asset-map">asset_mapper.command.debug</argument>
        <argument key="importmap:require">asset_mapper.importmap.command.require</argument>
        <argument key="importmap:remove">asset_mapper.importmap.command.remove</argument>
        <argument key="importmap:update">asset_mapper.importmap.command.update</argument>
        <argument key="importmap:install">asset_mapper.importmap.command.install</argument>
        <argument key="importmap:audit">asset_mapper.importmap.command.audit</argument>
        <argument key="importmap:outdated">asset_mapper.importmap.command.outdated</argument>
        <argument key="mailer:test">console.command.mailer_test</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="dbal:run-sql">Doctrine\DBAL\Tools\Console\Command\RunSqlCommand</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:sync-metadata-storage">doctrine_migrations.sync_metadata_command</argument>
        <argument key="doctrine:migrations:list">doctrine_migrations.versions_command</argument>
        <argument key="doctrine:migrations:current">doctrine_migrations.current_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="server:dump">var_dumper.command.server_dump</argument>
        <argument key="server:log">monolog.command.server_log</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="debug:firewall">security.command.debug_firewall</argument>
        <argument key="security:hash-password">security.command.user_password_hash</argument>
        <argument key="make:auth">maker.auto_command.make_auth</argument>
        <argument key="make:command">maker.auto_command.make_command</argument>
        <argument key="make:twig-component">maker.auto_command.make_twig_component</argument>
        <argument key="make:controller">maker.auto_command.make_controller</argument>
        <argument key="make:crud">maker.auto_command.make_crud</argument>
        <argument key="make:docker:database">maker.auto_command.make_docker_database</argument>
        <argument key="make:entity">maker.auto_command.make_entity</argument>
        <argument key="make:fixtures">maker.auto_command.make_fixtures</argument>
        <argument key="make:form">maker.auto_command.make_form</argument>
        <argument key="make:listener">maker.auto_command.make_listener</argument>
        <argument key="make:subscriber">maker.auto_command.make_listener</argument>
        <argument key="make:message">maker.auto_command.make_message</argument>
        <argument key="make:messenger-middleware">maker.auto_command.make_messenger_middleware</argument>
        <argument key="make:registration-form">maker.auto_command.make_registration_form</argument>
        <argument key="make:reset-password">maker.auto_command.make_reset_password</argument>
        <argument key="make:schedule">maker.auto_command.make_schedule</argument>
        <argument key="make:serializer:encoder">maker.auto_command.make_serializer_encoder</argument>
        <argument key="make:serializer:normalizer">maker.auto_command.make_serializer_normalizer</argument>
        <argument key="make:twig-extension">maker.auto_command.make_twig_extension</argument>
        <argument key="make:test">maker.auto_command.make_test</argument>
        <argument key="make:unit-test">maker.auto_command.make_test</argument>
        <argument key="make:functional-test">maker.auto_command.make_test</argument>
        <argument key="make:validator">maker.auto_command.make_validator</argument>
        <argument key="make:voter">maker.auto_command.make_voter</argument>
        <argument key="make:user">maker.auto_command.make_user</argument>
        <argument key="make:migration">maker.auto_command.make_migration</argument>
        <argument key="make:stimulus-controller">maker.auto_command.make_stimulus_controller</argument>
        <argument key="make:security:form-login">maker.auto_command.make_security_form_login</argument>
        <argument key="make:security:custom">maker.auto_command.make_security_custom</argument>
        <argument key="make:webhook">maker.auto_command.make_webhook</argument>
      </argument>
    </service>
    <service id=".service_locator.rsY5EXH" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service_closure" id=".console.command.about.lazy"/>
        <argument key="console.command.assets_install" type="service_closure" id=".console.command.assets_install.lazy"/>
        <argument key="console.command.cache_clear" type="service_closure" id=".console.command.cache_clear.lazy"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id=".console.command.cache_pool_clear.lazy"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id=".console.command.cache_pool_prune.lazy"/>
        <argument key="console.command.cache_pool_invalidate_tags" type="service_closure" id=".console.command.cache_pool_invalidate_tags.lazy"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id=".console.command.cache_pool_delete.lazy"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id=".console.command.cache_pool_list.lazy"/>
        <argument key="console.command.cache_warmup" type="service_closure" id=".console.command.cache_warmup.lazy"/>
        <argument key="console.command.config_debug" type="service_closure" id=".console.command.config_debug.lazy"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id=".console.command.config_dump_reference.lazy"/>
        <argument key="console.command.container_debug" type="service_closure" id=".console.command.container_debug.lazy"/>
        <argument key="console.command.container_lint" type="service_closure" id=".console.command.container_lint.lazy"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id=".console.command.debug_autowiring.lazy"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id=".console.command.dotenv_debug.lazy"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id=".console.command.event_dispatcher_debug.lazy"/>
        <argument key="console.command.messenger_consume_messages" type="service_closure" id=".console.command.messenger_consume_messages.lazy"/>
        <argument key="console.command.messenger_setup_transports" type="service_closure" id=".console.command.messenger_setup_transports.lazy"/>
        <argument key="console.command.messenger_debug" type="service_closure" id=".console.command.messenger_debug.lazy"/>
        <argument key="console.command.messenger_stop_workers" type="service_closure" id=".console.command.messenger_stop_workers.lazy"/>
        <argument key="console.command.messenger_failed_messages_retry" type="service_closure" id=".console.command.messenger_failed_messages_retry.lazy"/>
        <argument key="console.command.messenger_failed_messages_show" type="service_closure" id=".console.command.messenger_failed_messages_show.lazy"/>
        <argument key="console.command.messenger_failed_messages_remove" type="service_closure" id=".console.command.messenger_failed_messages_remove.lazy"/>
        <argument key="console.command.messenger_stats" type="service_closure" id=".console.command.messenger_stats.lazy"/>
        <argument key="console.command.router_debug" type="service_closure" id=".console.command.router_debug.lazy"/>
        <argument key="console.command.router_match" type="service_closure" id=".console.command.router_match.lazy"/>
        <argument key="console.command.serializer_debug" type="service_closure" id=".console.command.serializer_debug.lazy"/>
        <argument key="console.command.translation_debug" type="service_closure" id=".console.command.translation_debug.lazy"/>
        <argument key="console.command.translation_extract" type="service_closure" id=".console.command.translation_extract.lazy"/>
        <argument key="console.command.validator_debug" type="service_closure" id=".console.command.validator_debug.lazy"/>
        <argument key="console.command.translation_pull" type="service_closure" id=".console.command.translation_pull.lazy"/>
        <argument key="console.command.translation_push" type="service_closure" id=".console.command.translation_push.lazy"/>
        <argument key="console.command.xliff_lint" type="service_closure" id=".console.command.xliff_lint.lazy"/>
        <argument key="console.command.yaml_lint" type="service_closure" id=".console.command.yaml_lint.lazy"/>
        <argument key="console.command.form_debug" type="service_closure" id=".console.command.form_debug.lazy"/>
        <argument key="console.command.secrets_set" type="service_closure" id=".console.command.secrets_set.lazy"/>
        <argument key="console.command.secrets_remove" type="service_closure" id=".console.command.secrets_remove.lazy"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id=".console.command.secrets_generate_key.lazy"/>
        <argument key="console.command.secrets_list" type="service_closure" id=".console.command.secrets_list.lazy"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id=".console.command.secrets_decrypt_to_local.lazy"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id=".console.command.secrets_encrypt_from_local.lazy"/>
        <argument key="asset_mapper.command.compile" type="service_closure" id=".asset_mapper.command.compile.lazy"/>
        <argument key="asset_mapper.command.debug" type="service_closure" id=".asset_mapper.command.debug.lazy"/>
        <argument key="asset_mapper.importmap.command.require" type="service_closure" id=".asset_mapper.importmap.command.require.lazy"/>
        <argument key="asset_mapper.importmap.command.remove" type="service_closure" id=".asset_mapper.importmap.command.remove.lazy"/>
        <argument key="asset_mapper.importmap.command.update" type="service_closure" id=".asset_mapper.importmap.command.update.lazy"/>
        <argument key="asset_mapper.importmap.command.install" type="service_closure" id=".asset_mapper.importmap.command.install.lazy"/>
        <argument key="asset_mapper.importmap.command.audit" type="service_closure" id=".asset_mapper.importmap.command.audit.lazy"/>
        <argument key="asset_mapper.importmap.command.outdated" type="service_closure" id=".asset_mapper.importmap.command.outdated.lazy"/>
        <argument key="console.command.mailer_test" type="service_closure" id=".console.command.mailer_test.lazy"/>
        <argument key="doctrine.database_create_command" type="service_closure" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service_closure" id="doctrine.database_drop_command"/>
        <argument key="doctrine.query_sql_command" type="service_closure" id="doctrine.query_sql_command"/>
        <argument key="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" type="service_closure" id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service_closure" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service_closure" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service_closure" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service_closure" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.schema_create_command" type="service_closure" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service_closure" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service_closure" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.mapping_info_command" type="service_closure" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.clear_query_region_command" type="service_closure" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.query_dql_command" type="service_closure" id="doctrine.query_dql_command"/>
        <argument key="doctrine.schema_update_command" type="service_closure" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service_closure" id="doctrine.schema_validate_command"/>
        <argument key="doctrine_migrations.diff_command" type="service_closure" id=".doctrine_migrations.diff_command.lazy"/>
        <argument key="doctrine_migrations.sync_metadata_command" type="service_closure" id=".doctrine_migrations.sync_metadata_command.lazy"/>
        <argument key="doctrine_migrations.versions_command" type="service_closure" id=".doctrine_migrations.versions_command.lazy"/>
        <argument key="doctrine_migrations.current_command" type="service_closure" id=".doctrine_migrations.current_command.lazy"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service_closure" id=".doctrine_migrations.dump_schema_command.lazy"/>
        <argument key="doctrine_migrations.execute_command" type="service_closure" id=".doctrine_migrations.execute_command.lazy"/>
        <argument key="doctrine_migrations.generate_command" type="service_closure" id=".doctrine_migrations.generate_command.lazy"/>
        <argument key="doctrine_migrations.latest_command" type="service_closure" id=".doctrine_migrations.latest_command.lazy"/>
        <argument key="doctrine_migrations.migrate_command" type="service_closure" id=".doctrine_migrations.migrate_command.lazy"/>
        <argument key="doctrine_migrations.rollup_command" type="service_closure" id=".doctrine_migrations.rollup_command.lazy"/>
        <argument key="doctrine_migrations.status_command" type="service_closure" id=".doctrine_migrations.status_command.lazy"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service_closure" id=".doctrine_migrations.up_to_date_command.lazy"/>
        <argument key="doctrine_migrations.version_command" type="service_closure" id=".doctrine_migrations.version_command.lazy"/>
        <argument key="var_dumper.command.server_dump" type="service_closure" id=".var_dumper.command.server_dump.lazy"/>
        <argument key="monolog.command.server_log" type="service_closure" id=".monolog.command.server_log.lazy"/>
        <argument key="twig.command.debug" type="service_closure" id=".twig.command.debug.lazy"/>
        <argument key="twig.command.lint" type="service_closure" id=".twig.command.lint.lazy"/>
        <argument key="security.command.debug_firewall" type="service_closure" id=".security.command.debug_firewall.lazy"/>
        <argument key="security.command.user_password_hash" type="service_closure" id=".security.command.user_password_hash.lazy"/>
        <argument key="maker.auto_command.make_auth" type="service_closure" id=".maker.auto_command.make_auth.lazy"/>
        <argument key="maker.auto_command.make_command" type="service_closure" id=".maker.auto_command.make_command.lazy"/>
        <argument key="maker.auto_command.make_twig_component" type="service_closure" id=".maker.auto_command.make_twig_component.lazy"/>
        <argument key="maker.auto_command.make_controller" type="service_closure" id=".maker.auto_command.make_controller.lazy"/>
        <argument key="maker.auto_command.make_crud" type="service_closure" id=".maker.auto_command.make_crud.lazy"/>
        <argument key="maker.auto_command.make_docker_database" type="service_closure" id=".maker.auto_command.make_docker_database.lazy"/>
        <argument key="maker.auto_command.make_entity" type="service_closure" id=".maker.auto_command.make_entity.lazy"/>
        <argument key="maker.auto_command.make_fixtures" type="service_closure" id=".maker.auto_command.make_fixtures.lazy"/>
        <argument key="maker.auto_command.make_form" type="service_closure" id=".maker.auto_command.make_form.lazy"/>
        <argument key="maker.auto_command.make_listener" type="service_closure" id=".maker.auto_command.make_listener.lazy"/>
        <argument key="maker.auto_command.make_message" type="service_closure" id=".maker.auto_command.make_message.lazy"/>
        <argument key="maker.auto_command.make_messenger_middleware" type="service_closure" id=".maker.auto_command.make_messenger_middleware.lazy"/>
        <argument key="maker.auto_command.make_registration_form" type="service_closure" id=".maker.auto_command.make_registration_form.lazy"/>
        <argument key="maker.auto_command.make_reset_password" type="service_closure" id=".maker.auto_command.make_reset_password.lazy"/>
        <argument key="maker.auto_command.make_schedule" type="service_closure" id=".maker.auto_command.make_schedule.lazy"/>
        <argument key="maker.auto_command.make_serializer_encoder" type="service_closure" id=".maker.auto_command.make_serializer_encoder.lazy"/>
        <argument key="maker.auto_command.make_serializer_normalizer" type="service_closure" id=".maker.auto_command.make_serializer_normalizer.lazy"/>
        <argument key="maker.auto_command.make_twig_extension" type="service_closure" id=".maker.auto_command.make_twig_extension.lazy"/>
        <argument key="maker.auto_command.make_test" type="service_closure" id=".maker.auto_command.make_test.lazy"/>
        <argument key="maker.auto_command.make_validator" type="service_closure" id=".maker.auto_command.make_validator.lazy"/>
        <argument key="maker.auto_command.make_voter" type="service_closure" id=".maker.auto_command.make_voter.lazy"/>
        <argument key="maker.auto_command.make_user" type="service_closure" id=".maker.auto_command.make_user.lazy"/>
        <argument key="maker.auto_command.make_migration" type="service_closure" id=".maker.auto_command.make_migration.lazy"/>
        <argument key="maker.auto_command.make_stimulus_controller" type="service_closure" id=".maker.auto_command.make_stimulus_controller.lazy"/>
        <argument key="maker.auto_command.make_security_form_login" type="service_closure" id=".maker.auto_command.make_security_form_login.lazy"/>
        <argument key="maker.auto_command.make_security_custom" type="service_closure" id=".maker.auto_command.make_security_custom.lazy"/>
        <argument key="maker.auto_command.make_webhook" type="service_closure" id=".maker.auto_command.make_webhook.lazy"/>
      </argument>
    </service>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument>LAdnh7Y10C</argument>
      <argument>0</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>6rNgbu3uL5</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>NL+hTHiOkB</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>4jdhaxOyqe</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>Ym9q3Wv128</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>vfMdQ-OzCu</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.asset_mapper.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>NBWzNqiuQN</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.messenger.restart_workers_signal.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument>fbahB+G4rQ</argument>
      <argument>0</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.validator_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>yZfm307oCI</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.doctrine.orm.default.result.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.doctrine.orm.default.query.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.security_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>g8epVrpLsQ</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.security_is_granted_attribute_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>+VQeTlATq+</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.security_token_verifier.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>YnKoI6gUic</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\wamp\www\upgradegnt\var\cache\dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id=".service_locator.i0..Ry2" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service_closure" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service_closure" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Bridge\Twig\Extension\SerializerRuntime" type="service_closure" id="twig.runtime.serializer"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service_closure" id="twig.form.renderer"/>
        <argument key="Symfony\Bridge\Twig\Extension\ImportMapRuntime" type="service_closure" id="twig.runtime.importmap"/>
        <argument key="Symfony\UX\StimulusBundle\Twig\UxControllersTwigRuntime" type="service_closure" id="stimulus.ux_controllers_twig_runtime"/>
        <argument key="Symfony\UX\Turbo\Twig\TurboRuntime" type="service_closure" id="turbo.twig.runtime"/>
      </argument>
    </service>
    <service id="App\Kernel" alias="kernel" public="true"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack"/>
    <service id="Symfony\Component\HttpKernel\HttpCache\StoreInterface" alias="http_cache.store"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator"/>
    <service id="Symfony\Component\HttpFoundation\UriSigner" alias="uri_signer"/>
    <service id="Symfony\Component\HttpKernel\UriSigner" alias="uri_signer">
      <deprecated package="symfony/framework-bundle" version="6.4">The "%alias_id%" alias is deprecated, use "Symfony\Component\HttpFoundation\UriSigner" instead.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger"/>
    <service id="Symfony\Component\Clock\ClockInterface" alias="clock"/>
    <service id="Psr\Clock\ClockInterface" alias="clock"/>
    <service id="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" alias="fragment.uri_generator"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer"/>
    <service id=".Psr\Container\ContainerInterface $parameter_bag" alias="parameter_bag"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.data_collector"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages"/>
    <service id="Symfony\Component\AssetMapper\AssetMapperInterface" alias="asset_mapper"/>
    <service id="asset_mapper.http_client" alias=".debug.http_client"/>
    <service id="Symfony\Component\AssetMapper\ImportMap\ImportMapManager" alias="asset_mapper.importmap.manager"/>
    <service id="Symfony\Contracts\HttpClient\HttpClientInterface" alias=".debug.http_client"/>
    <service id="mailer" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\MailerInterface" alias="mailer.mailer"/>
    <service id="mailer.default_transport" alias="mailer.transports"/>
    <service id="Symfony\Component\Mailer\Transport\TransportInterface" alias="mailer.transports"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer"/>
    <service id="Symfony\Contracts\Translation\LocaleAwareInterface" alias="translation.locale_switcher"/>
    <service id="Symfony\Component\Translation\LocaleSwitcher" alias="translation.locale_switcher"/>
    <service id="translator" alias="translator.data_collector" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default"/>
    <service id="Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter" alias="debug.file_link_formatter"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch"/>
    <service id="routing.loader.annotation" alias="routing.loader.attribute">
      <deprecated package="symfony/routing" version="6.4">The "%alias_id%" service is deprecated, use the "routing.loader.attribute" service instead.</deprecated>
    </service>
    <service id="routing.loader.annotation.directory" alias="routing.loader.attribute.directory">
      <deprecated package="symfony/routing" version="6.4">The "%alias_id%" service is deprecated, use the "routing.loader.attribute.directory" service instead.</deprecated>
    </service>
    <service id="routing.loader.annotation.file" alias="routing.loader.attribute.file">
      <deprecated package="symfony/routing" version="6.4">The "%alias_id%" service is deprecated, use the "routing.loader.attribute.file" service instead.</deprecated>
    </service>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="debug.serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="debug.serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="debug.serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="debug.serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="debug.serializer"/>
    <service id="serializer.property_accessor" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object">
      <deprecated package="symfony/serializer" version="6.2">The "%alias_id%" service alias is deprecated, type-hint against "Symfony\Component\Serializer\Normalizer\NormalizerInterface" or implement "Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Serializer\Normalizer\PropertyNormalizer" alias="serializer.normalizer.property">
      <deprecated package="symfony/serializer" version="6.2">The "%alias_id%" service alias is deprecated, type-hint against "Symfony\Component\Serializer\Normalizer\NormalizerInterface" or implement "Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\WebLink\HttpHeaderSerializer" alias="web_link.http_header_serializer"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX"/>
    <service id="cache.default_doctrine_dbal_provider" alias="doctrine.dbal.default_connection"/>
    <service id="SessionHandlerInterface" alias="session.handler.native"/>
    <service id="session.storage.factory" alias="session.storage.factory.native"/>
    <service id="session.handler" alias="session.handler.native"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory"/>
    <service id="form.property_accessor" alias="property_accessor"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator"/>
    <service id="Symfony\Component\Messenger\Transport\Serialization\SerializerInterface" alias="messenger.transport.native_php_serializer"/>
    <service id="messenger.default_serializer" alias="messenger.transport.native_php_serializer"/>
    <service id="messenger.listener.stop_worker_on_sigterm_signal_listener" alias="messenger.listener.stop_worker_signals_listener">
      <deprecated package="6.3" version="symfony/messenger">The "%alias_id%" service is deprecated, use the "Symfony\Component\Console\Command\SignalableCommandInterface" instead.</deprecated>
    </service>
    <service id="messenger.default_bus" alias="debug.traced.messenger.bus.default" public="true"/>
    <service id="Symfony\Component\Messenger\MessageBusInterface" alias="debug.traced.messenger.bus.default"/>
    <service id="messenger.failure_transports.default" alias="messenger.transport.failed"/>
    <service id="Symfony\Component\Notifier\NotifierInterface" alias="notifier"/>
    <service id="notifier.logger_notification_listener" alias="notifier.notification_logger_listener">
      <deprecated package="symfony/framework-bundle" version="6.3">The "%alias_id%" service is deprecated, use "notifier.notification_logger_listener" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Mime\MimeTypesInterface" alias="mime_types"/>
    <service id="Symfony\Component\Mime\MimeTypeGuesserInterface" alias="mime_types"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="Doctrine\DBAL\Connection $defaultConnection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="cache.doctrine.orm.default.metadata"/>
    <service id="doctrine.orm.default_result_cache" alias="cache.doctrine.orm.default.result"/>
    <service id="doctrine.orm.default_query_cache" alias="cache.doctrine.orm.default.query"/>
    <service id="Doctrine\ORM\EntityManagerInterface $defaultEntityManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="doctrine.migrations.metadata_storage" alias="doctrine.migrations.storage.table_storage"/>
    <service id="Twig_Environment" alias="twig">
      <deprecated package="symfony/twig-bundle" version="6.3">The "%alias_id%" service alias is deprecated, use "Twig\Environment" or "twig" instead.</deprecated>
    </service>
    <service id="Twig\Environment" alias="twig"/>
    <service id="Symfony\Component\Mime\BodyRendererInterface" alias="twig.mime_body_renderer"/>
    <service id="Symfony\UX\Turbo\Broadcaster\BroadcasterInterface" alias="turbo.broadcaster.action_renderer"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage"/>
    <service id="Symfony\Bundle\SecurityBundle\Security" alias="security.helper"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper">
      <deprecated package="symfony/security-bundle" version="6.2">The "%alias_id%" service alias is deprecated, use "Symfony\Bundle\SecurityBundle\Security" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall"/>
    <service id="Symfony\Component\Security\Http\FirewallMapInterface" alias="security.firewall.map"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" alias="security.password_hasher_factory"/>
    <service id="security.password_hasher" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\Security\Http\Authentication\UserAuthenticatorInterface" alias="security.user_authenticator"/>
    <service id="security.firewall" alias="debug.security.firewall"/>
    <service id="security.user_providers" alias="security.user.provider.concrete.sakkane"/>
    <service id="Symfony\Component\Security\Core\User\UserProviderInterface" alias="security.user.provider.concrete.sakkane"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="Symfony\Component\Security\Http\RememberMe\RememberMeHandlerInterface" alias="security.authenticator.firewall_aware_remember_me_handler"/>
    <service id="security.user_checker.main" alias="security.user_checker"/>
    <service id="security.firewall.context_locator" alias=".service_locator.zJyh7qS"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.w7.f4fT" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.JsBOv4p"/>
    <service id="doctrine.id_generator_locator" alias=".service_locator.KLVvNIq"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $messengerLogger" alias="monolog.logger.messenger"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id=".Psr\Log\LoggerInterface $asset_mapperLogger" alias="monolog.logger.asset_mapper"/>
    <service id="Psr\Log\LoggerInterface $assetMapperLogger" alias="monolog.logger.asset_mapper"/>
    <service id=".Psr\Log\LoggerInterface $http_clientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $httpClientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $mailerLogger" alias="monolog.logger.mailer"/>
    <service id="Psr\Log\LoggerInterface $translationLogger" alias="monolog.logger.translation"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $profilerLogger" alias="monolog.logger.profiler"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id="Psr\Log\LoggerInterface $debugLogger" alias="monolog.logger.debug"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $deprecationLogger" alias="monolog.logger.deprecation"/>
    <service id=".service_locator.80edgLI" alias="messenger.receiver_locator"/>
    <service id=".service_locator.h8Jkkd2" alias="messenger.retry_strategy_locator"/>
    <service id=".service_locator.bJ.4HC5" alias=".service_locator.w7.f4fT"/>
    <service id=".service_locator.HanvNFp" alias=".service_locator.GHuQGlo"/>
    <service id=".service_locator.v2QcDrS" alias=".service_locator.jgJPVaA"/>
    <service id=".service_locator.nSCATvA" alias=".service_locator.H_twZrM"/>
    <service id=".service_locator.9Cd9NKZ" alias=".service_locator.TrbL_Ht"/>
    <service id=".service_locator.eonjpmw" alias=".service_locator.nkRrMOH"/>
    <service id=".service_locator.OXOggCl" alias=".service_locator.6U8p9sv"/>
    <service id=".service_locator.sR2hw3j" alias=".service_locator.wXcqpiw"/>
    <service id=".service_locator.Gjc4Wnt" alias=".service_locator.AYYV.am"/>
    <service id=".service_locator.1tgU9gz" alias=".service_locator.Ui9XhIN"/>
    <service id=".service_locator.hCEntJf" alias=".service_locator.3aQkSBW"/>
    <service id=".service_locator.KzqZZcz" alias=".service_locator.im1kX7r"/>
    <service id=".service_locator.4twqZKc" alias=".service_locator.ORb6BpB"/>
    <service id=".service_locator.U5dYmBi" alias=".service_locator.hqE0hu0"/>
    <service id=".service_locator.aFZ3FzN" alias=".service_locator.iHHwidk"/>
    <service id=".service_locator.gSZm4fV" alias=".service_locator.cKLCI2S"/>
    <service id=".service_locator.cCyB9.m" alias=".service_locator..WiOQnA"/>
    <service id=".service_locator.EaeIyFC" alias=".service_locator.o4O0eww"/>
    <service id=".service_locator.m4pBB65" alias=".service_locator.0BS18HQ"/>
    <service id=".service_locator.T.l8Yaa" alias=".service_locator.RQY3Y3g"/>
    <service id=".service_locator.AbZyr95" alias=".service_locator.5Hn467b"/>
    <service id=".service_locator.X77kf3x" alias=".service_locator.foeGtlr"/>
    <service id=".service_locator.OsD0n76" alias=".service_locator.Xc.m5Mv"/>
    <service id=".service_locator.90G7c6l" alias=".service_locator.NttXpgM"/>
    <service id=".service_locator.3s7n9Ti" alias=".service_locator.lJ.UBt7"/>
    <service id=".service_locator.7uKRTFe" alias=".service_locator.IXV1LlJ"/>
    <service id=".service_locator.Pg.M0y9" alias=".service_locator._DImFIW"/>
    <service id=".service_locator.av1Uixy" alias=".service_locator.J0_MNy."/>
    <service id=".service_locator.oed6Hjs" alias=".service_locator.5CGjU28"/>
    <service id=".service_locator..L32Fb_" alias=".service_locator.K.OvH49"/>
    <service id=".service_locator.YCGI10m" alias=".service_locator.v5581n1"/>
    <service id=".service_locator.gDu0nhM" alias=".service_locator.A2hTFDL"/>
    <service id=".service_locator.bsYylfJ" alias=".service_locator.k4Bq10G"/>
    <service id=".service_locator.JOlI_5c" alias=".service_locator.PPeLVW6"/>
    <service id=".service_locator.hNnu4n8" alias=".service_locator.nCXI2As"/>
    <service id=".service_locator.yVvQ1jo" alias=".service_locator.4tqk5Qq"/>
    <service id=".service_locator.vOMEH8O" alias=".service_locator.hMbBiG."/>
    <service id=".service_locator.0_m4NdH" alias=".service_locator.0FQRyqG"/>
    <service id=".service_locator..C45JwD" alias=".service_locator.VZRjqOk"/>
    <service id=".service_locator.SI1eg7T" alias=".service_locator.JsBOv4p"/>
    <service id=".service_locator.BFrsqsn" alias=".service_locator.F9PKc.7"/>
    <service id=".service_locator.ku3Y.Ff" alias=".service_locator.mQ6TcDr"/>
    <service id=".service_locator.XtmiKbi" alias=".service_locator.MfxSDRP"/>
    <service id=".service_locator.O24_MAy" alias=".service_locator.yY.p4P7"/>
    <service id=".service_locator.jUv.zyj" alias=".service_locator.O2p6Lk7"/>
    <service id="validator" alias="debug.validator"/>
    <service id="http_client" alias=".debug.http_client"/>
    <service id=".debug.http_client.inner" alias="http_client.uri_template"/>
    <service id="asset_mapper.mapped_asset_factory" alias="asset_mapper.cached_mapped_asset_factory"/>
    <service id="assets._default_package" alias="asset_mapper.asset_package"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver"/>
    <service id="argument_resolver" alias="debug.argument_resolver"/>
    <service id="translator.data_collector.inner" alias="translator.default"/>
    <service id="serializer" alias="debug.serializer"/>
    <service id="doctrine.migrations.migrations_factory" alias="doctrine.migrations.container_aware_migrations_factory"/>
    <service id="var_dumper.cli_dumper" alias="var_dumper.contextualized_cli_dumper"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html"/>
    <service id="turbo.broadcaster.imux" alias="turbo.broadcaster.action_renderer"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager"/>
    <service id="security.firewall.authenticator.main" alias="debug.security.firewall.authenticator.main"/>
    <service id="messenger.bus.default" alias="debug.traced.messenger.bus.default"/>
    <service id="doctrine.orm.default_metadata_driver" alias=".doctrine.orm.default_metadata_driver"/>
    <service id="security.event_dispatcher.main" alias="debug.security.event_dispatcher.main"/>
    <service id=".service_locator.gFlme_s" alias=".service_locator.y4_Zrx."/>
    <service id=".service_locator.X5X7M3d" alias=".service_locator.IwVW4W."/>
    <service id=".service_locator.ETXDq0U" alias=".service_locator.c8ntken"/>
    <service id=".service_locator.yArDdtI" alias=".service_locator.ATt7aga"/>
    <service id=".service_locator.azJTith" alias=".service_locator.V.4pGB4"/>
    <service id=".service_locator.4smMW6m" alias=".service_locator.GHuQGlo"/>
    <service id=".service_locator.CAaGKyC" alias=".service_locator.izgUQZX"/>
    <service id=".service_locator.pjiKZj0" alias=".service_locator.36EpRsA"/>
    <service id=".service_locator.q5hA6x4" alias=".service_locator.872Jsnj"/>
    <service id=".service_locator.rOfWWo3" alias=".service_locator.bpW2Pi_"/>
    <service id=".service_locator.OA336rP" alias=".service_locator.CxwWrHG"/>
    <service id=".service_locator.zHWnEhq" alias=".service_locator.jgJPVaA"/>
    <service id=".service_locator.WvlBhMk" alias=".service_locator.zNobzAI"/>
    <service id=".service_locator.aZW.BIR" alias=".service_locator.H_twZrM"/>
    <service id=".service_locator.xohrb3m" alias=".service_locator.swmLS._"/>
    <service id=".service_locator.zdUiRyC" alias=".service_locator.KJUDKN5"/>
    <service id=".service_locator.CUydUbv" alias=".service_locator.SplMHih"/>
    <service id=".service_locator.41iMFoD" alias=".service_locator.a2YEA1b"/>
    <service id=".service_locator.n7LlTxy" alias=".service_locator._pA1AYV"/>
    <service id=".service_locator.4OLxJx2" alias=".service_locator.TrbL_Ht"/>
    <service id=".service_locator.imXEOFj" alias=".service_locator.nkRrMOH"/>
    <service id=".service_locator.zhT6ePG" alias=".service_locator.0n1fkzc"/>
    <service id=".service_locator.uKWuEOZ" alias=".service_locator.hxmsnV3"/>
    <service id=".service_locator.as4aesP" alias=".service_locator.zKlKQIW"/>
    <service id=".service_locator.AEAtmJv" alias=".service_locator.GP7DK30"/>
    <service id=".service_locator.vjD.PBu" alias=".service_locator.0_IFjR8"/>
    <service id=".service_locator.dqSYSFY" alias=".service_locator.veElpNM"/>
    <service id=".service_locator.Xyb.KOg" alias=".service_locator..b08g3n"/>
    <service id=".service_locator.J7lSc4B" alias=".service_locator.DFyL8OH"/>
    <service id=".service_locator.2whhcc6" alias=".service_locator.j7wOkYK"/>
    <service id=".service_locator.9e2t_lq" alias=".service_locator.CsMkqUa"/>
    <service id=".service_locator.ak5bs00" alias=".service_locator.ZOwK68s"/>
    <service id=".service_locator.s0WpMKf" alias=".service_locator.lTbvCHw"/>
    <service id=".service_locator.6O1FQxc" alias=".service_locator.vRUAr7Q"/>
    <service id=".service_locator.a8fd0Iv" alias=".service_locator.5DVS3ro"/>
    <service id=".service_locator.EaEm8Mt" alias=".service_locator.kyHFend"/>
    <service id=".service_locator.fsjcfkt" alias=".service_locator.6U8p9sv"/>
    <service id=".service_locator.0mjyu_L" alias=".service_locator.wXcqpiw"/>
    <service id=".service_locator.2IRTzUm" alias=".service_locator.AYYV.am"/>
    <service id=".service_locator..T501hi" alias=".service_locator.Ui9XhIN"/>
    <service id=".service_locator.GmlZE6." alias=".service_locator.3aQkSBW"/>
    <service id=".service_locator.R82pv.c" alias=".service_locator.YgYapZ6"/>
    <service id=".service_locator.LS_rcby" alias=".service_locator.L9F73kI"/>
    <service id=".service_locator.8CdGlak" alias=".service_locator.0TK7yZ8"/>
    <service id=".service_locator.mTQcJzk" alias=".service_locator.xpZJLkN"/>
    <service id=".service_locator.jOWRbK6" alias=".service_locator.nwITGr8"/>
    <service id=".service_locator.tTCNGLk" alias=".service_locator.f5JWNKP"/>
    <service id=".service_locator.1Vjew3i" alias=".service_locator.ZOtxAfx"/>
    <service id=".service_locator.x.f31xH" alias=".service_locator.dcCJG7q"/>
    <service id=".service_locator.p0qFY9Q" alias=".service_locator.s67.kI6"/>
    <service id=".service_locator.t1sVA35" alias=".service_locator.im1kX7r"/>
    <service id=".service_locator.770D3db" alias=".service_locator.ORb6BpB"/>
    <service id=".service_locator.SKWYF9z" alias=".service_locator.Hy7idLG"/>
    <service id=".service_locator.ONzJ9eu" alias=".service_locator.EppKkcr"/>
    <service id=".service_locator.fbc1qFP" alias=".service_locator.4iXt.WB"/>
    <service id=".service_locator.LNZ8sW9" alias=".service_locator.8r3DTNq"/>
    <service id=".service_locator.TeuD7Qs" alias=".service_locator.2_83HPM"/>
    <service id=".service_locator.tpHEddv" alias=".service_locator.JwMuhT7"/>
    <service id=".service_locator.011t0ne" alias=".service_locator.hqE0hu0"/>
    <service id=".service_locator.1T4rAjt" alias=".service_locator.je7oNoj"/>
    <service id=".service_locator.135c9af" alias=".service_locator.Q8RAY9A"/>
    <service id=".service_locator.3TxtYGS" alias=".service_locator.iZWTVGz"/>
    <service id=".service_locator..EdiTAe" alias=".service_locator.I3mS6IL"/>
    <service id=".service_locator.sjHli5i" alias=".service_locator.FjsgjXR"/>
    <service id=".service_locator.dQojMpm" alias=".service_locator.eheopyZ"/>
    <service id=".service_locator.GXIaWy9" alias=".service_locator.VSBSvo7"/>
    <service id=".service_locator.idPVmpr" alias=".service_locator.bembAWs"/>
    <service id=".service_locator.BsRT9aP" alias=".service_locator.4ZxvEnm"/>
    <service id=".service_locator.eg7j1zK" alias=".service_locator.iHHwidk"/>
    <service id=".service_locator.LUiKhDl" alias=".service_locator.txYFPqg"/>
    <service id=".service_locator.vCLeq2G" alias=".service_locator.2gmBvBo"/>
    <service id=".service_locator.FJ2sGAi" alias=".service_locator.Ai8TDKL"/>
    <service id=".service_locator.MXyPyXt" alias=".service_locator.5X2ZcxV"/>
    <service id=".service_locator.lIKxIcQ" alias=".service_locator.SdimP0A"/>
    <service id=".service_locator.EJVP5fv" alias=".service_locator.dy6wSj2"/>
    <service id=".service_locator.VG5hlDB" alias=".service_locator.WZwGqEX"/>
    <service id=".service_locator.pLDvYQP" alias=".service_locator.ZlrNvMC"/>
    <service id=".service_locator.LBSNOfM" alias=".service_locator.Rar7wEt"/>
    <service id=".service_locator.SqJ8X1_" alias=".service_locator.mol62a."/>
    <service id=".service_locator.1JSogNE" alias=".service_locator..lRN6Lf"/>
    <service id=".service_locator.Rggo2Ff" alias=".service_locator.hYKOxsG"/>
    <service id=".service_locator.xKxXxhG" alias=".service_locator.cKLCI2S"/>
    <service id=".service_locator.Z1SmXUD" alias=".service_locator.FMQ3BcF"/>
    <service id=".service_locator.Mp4ZcXx" alias=".service_locator.JI6lAHM"/>
    <service id=".service_locator.pbD9q0a" alias=".service_locator..WiOQnA"/>
    <service id=".service_locator.RhKrZcU" alias=".service_locator.o4O0eww"/>
    <service id=".service_locator.uDwHl7j" alias=".service_locator.0BS18HQ"/>
    <service id=".service_locator.WT8CWDO" alias=".service_locator.RQY3Y3g"/>
    <service id=".service_locator.m9tvYjl" alias=".service_locator.5Hn467b"/>
    <service id=".service_locator.tQx9znr" alias=".service_locator.foeGtlr"/>
    <service id=".service_locator..jMxXHD" alias=".service_locator.Xc.m5Mv"/>
    <service id=".service_locator.gaTSUXr" alias=".service_locator.9kKwU2t"/>
    <service id=".service_locator.rp4BYrR" alias=".service_locator.NttXpgM"/>
    <service id=".service_locator.fKJeN9g" alias=".service_locator.lJ.UBt7"/>
    <service id=".service_locator.2rRVLns" alias=".service_locator.TZ613Iz"/>
    <service id=".service_locator._mLgOL3" alias=".service_locator.fDTLJwW"/>
    <service id=".service_locator.l4uBQrA" alias=".service_locator.IXV1LlJ"/>
    <service id=".service_locator.zsjhl4m" alias=".service_locator.fYOg1aH"/>
    <service id=".service_locator.wKRSbkO" alias=".service_locator._DImFIW"/>
    <service id=".service_locator.bZ.pDt9" alias=".service_locator.J0_MNy."/>
    <service id=".service_locator.47Y54Vx" alias=".service_locator.5CGjU28"/>
    <service id=".service_locator.cBZNwNc" alias=".service_locator.w2rYZpG"/>
    <service id=".service_locator.zUxvwcc" alias=".service_locator.zHBsodI"/>
    <service id=".service_locator.WElS2Ha" alias=".service_locator.rF.gS75"/>
    <service id=".service_locator.cLHcQG2" alias=".service_locator.K.OvH49"/>
    <service id=".service_locator..q_4a69" alias=".service_locator.CQ8XLG_"/>
    <service id=".service_locator.i9Qv9IL" alias=".service_locator.tX7IRH1"/>
    <service id=".service_locator.CHG6KAy" alias=".service_locator.MJNrreu"/>
    <service id=".service_locator.Tw.rG9c" alias=".service_locator.SYGkLDo"/>
    <service id=".service_locator.3oVKiFP" alias=".service_locator.yWLnPqK"/>
    <service id=".service_locator.EYWEqYw" alias=".service_locator.v5581n1"/>
    <service id=".service_locator.C1ilVJF" alias=".service_locator.bqZJXZV"/>
    <service id=".service_locator.dMZ2O9f" alias=".service_locator.ViXcClx"/>
    <service id=".service_locator.AiM1Y8k" alias=".service_locator.gGA2khr"/>
    <service id=".service_locator.o.6jvIC" alias=".service_locator.G452JTc"/>
    <service id=".service_locator.v4kn4Db" alias=".service_locator.A2hTFDL"/>
    <service id=".service_locator.RWrG.Vf" alias=".service_locator.4lf9RTo"/>
    <service id=".service_locator.Qh_n7zA" alias=".service_locator.sKXD69h"/>
    <service id=".service_locator.EmZ4cZI" alias=".service_locator.Hz5btge"/>
    <service id=".service_locator.VPTmwQj" alias=".service_locator.SY0zWOw"/>
    <service id=".service_locator.MrWTsvT" alias=".service_locator.k4Bq10G"/>
    <service id=".service_locator.qq.giOo" alias=".service_locator.x5JG17."/>
    <service id=".service_locator.78yM1yL" alias=".service_locator.PjrYeyB"/>
    <service id=".service_locator.rcTgotL" alias=".service_locator.p6oBFqB"/>
    <service id=".service_locator.YmuaK52" alias=".service_locator.9seJ.96"/>
    <service id=".service_locator.ppzQ96B" alias=".service_locator.Nf.XpWv"/>
    <service id=".service_locator.tX5tuN_" alias=".service_locator..NLYUmE"/>
    <service id=".service_locator.06T8Fuo" alias=".service_locator.FvaKkR4"/>
    <service id=".service_locator.7NIAq8D" alias=".service_locator.rSTd.nA"/>
    <service id=".service_locator.pj4KVGG" alias=".service_locator.PPeLVW6"/>
    <service id=".service_locator.bBPB2xG" alias=".service_locator.E9I1y6q"/>
    <service id=".service_locator.KDT5jum" alias=".service_locator.nCXI2As"/>
    <service id=".service_locator.025Wi8b" alias=".service_locator.kPUOGb8"/>
    <service id=".service_locator.hqQ0USR" alias=".service_locator.4tqk5Qq"/>
    <service id=".service_locator.B1QuPSX" alias=".service_locator.hMbBiG."/>
    <service id=".service_locator.EqkvwWR" alias=".service_locator.bUYAhQD"/>
    <service id=".service_locator.OponzV8" alias=".service_locator.caIy2eX"/>
    <service id=".service_locator.i3BzVJ9" alias=".service_locator.0FQRyqG"/>
    <service id=".service_locator.oGFKOd9" alias=".service_locator.EZHsKb7"/>
    <service id=".service_locator.EYCeRep" alias=".service_locator.rxfCH_1"/>
    <service id=".service_locator.JKk4tXI" alias=".service_locator.s7Dxo1M"/>
    <service id=".service_locator.jZ5brON" alias=".service_locator.XkGCLle"/>
    <service id=".service_locator.CVmOjCW" alias=".service_locator.iOmYmBM"/>
    <service id=".service_locator.Vyo1sfD" alias=".service_locator.VZRjqOk"/>
    <service id=".service_locator.sM0wv7S" alias=".service_locator.Wz47QTF"/>
    <service id=".service_locator.ZAiDQte" alias=".service_locator.GzP66Op"/>
    <service id=".service_locator.1w1AT8B" alias=".service_locator.f26zfeA"/>
    <service id=".service_locator.tY50kvR" alias=".service_locator.BpNOuyb"/>
    <service id=".service_locator.IX16XH3" alias=".service_locator.Wn0oHAn"/>
    <service id=".service_locator.3IfNJ.O" alias=".service_locator.s6oL59b"/>
    <service id=".service_locator.bMMp9wr" alias=".service_locator.jDRi_o9"/>
    <service id=".service_locator.mEFOLdF" alias=".service_locator.5criBkT"/>
    <service id=".service_locator.Q1z.f9O" alias=".service_locator.O2p6Lk7"/>
    <service id=".service_locator.dGUCsbe" alias=".service_locator.oR77BOj"/>
    <service id=".service_locator._kIAbz1" alias=".service_locator.TpoC7U9"/>
    <service id=".service_locator.hnz5ZNh" alias=".service_locator.0TACwl3"/>
    <service id=".service_locator..Fs8Kd7" alias=".service_locator.e_.xxAP"/>
  </services>
</container>
