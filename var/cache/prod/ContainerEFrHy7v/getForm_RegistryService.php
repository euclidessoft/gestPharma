<?php

namespace ContainerEFrHy7v;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getForm_RegistryService extends App_KernelProdContainer
{
    /*
     * Gets the private 'form.registry' shared service.
     *
     * @return \Symfony\Component\Form\FormRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Form\\AbsenceType' => ['privates', 'App\\Form\\AbsenceType', 'getAbsenceTypeService', true],
            'App\\Form\\AchatType' => ['privates', 'App\\Form\\AchatType', 'getAchatTypeService', true],
            'App\\Form\\ApprouverType' => ['privates', 'App\\Form\\ApprouverType', 'getApprouverTypeService', true],
            'App\\Form\\ApprovisionnementType' => ['privates', 'App\\Form\\ApprovisionnementType', 'getApprovisionnementTypeService', true],
            'App\\Form\\AvoirType' => ['privates', 'App\\Form\\AvoirType', 'getAvoirTypeService', true],
            'App\\Form\\BanqueType' => ['privates', 'App\\Form\\BanqueType', 'getBanqueTypeService', true],
            'App\\Form\\CalendrierType' => ['privates', 'App\\Form\\CalendrierType', 'getCalendrierTypeService', true],
            'App\\Form\\CandidatureType' => ['privates', 'App\\Form\\CandidatureType', 'getCandidatureTypeService', true],
            'App\\Form\\CategorieType' => ['privates', 'App\\Form\\CategorieType', 'getCategorieTypeService', true],
            'App\\Form\\ClientType' => ['privates', 'App\\Form\\ClientType', 'getClientTypeService', true],
            'App\\Form\\CommandeType' => ['privates', 'App\\Form\\CommandeType', 'getCommandeTypeService', true],
            'App\\Form\\ContratType' => ['privates', 'App\\Form\\ContratType', 'getContratTypeService', true],
            'App\\Form\\CritereEvaluationType' => ['privates', 'App\\Form\\CritereEvaluationType', 'getCritereEvaluationTypeService', true],
            'App\\Form\\CvType' => ['privates', 'App\\Form\\CvType', 'getCvTypeService', true],
            'App\\Form\\DecisionType' => ['privates', 'App\\Form\\DecisionType', 'getDecisionTypeService', true],
            'App\\Form\\DemandeCongeType' => ['privates', 'App\\Form\\DemandeCongeType', 'getDemandeCongeTypeService', true],
            'App\\Form\\DemandeExplicationType' => ['privates', 'App\\Form\\DemandeExplicationType', 'getDemandeExplicationTypeService', true],
            'App\\Form\\DepartementType' => ['privates', 'App\\Form\\DepartementType', 'getDepartementTypeService', true],
            'App\\Form\\DepenseType' => ['privates', 'App\\Form\\DepenseType', 'getDepenseTypeService', true],
            'App\\Form\\DocumentType' => ['privates', 'App\\Form\\DocumentType', 'getDocumentTypeService', true],
            'App\\Form\\EmployeType' => ['privates', 'App\\Form\\EmployeType', 'getEmployeTypeService', true],
            'App\\Form\\EvaluationType' => ['privates', 'App\\Form\\EvaluationType', 'getEvaluationTypeService', true],
            'App\\Form\\FeedbackType' => ['privates', 'App\\Form\\FeedbackType', 'getFeedbackTypeService', true],
            'App\\Form\\FiltreBulletinType' => ['privates', 'App\\Form\\FiltreBulletinType', 'getFiltreBulletinTypeService', true],
            'App\\Form\\FinancementBanqueType' => ['privates', 'App\\Form\\FinancementBanqueType', 'getFinancementBanqueTypeService', true],
            'App\\Form\\FinancementType' => ['privates', 'App\\Form\\FinancementType', 'getFinancementTypeService', true],
            'App\\Form\\FormationType' => ['privates', 'App\\Form\\FormationType', 'getFormationTypeService', true],
            'App\\Form\\FournisseurType' => ['privates', 'App\\Form\\FournisseurType', 'getFournisseurTypeService', true],
            'App\\Form\\HeureSuplementaireType' => ['privates', 'App\\Form\\HeureSuplementaireType', 'getHeureSuplementaireTypeService', true],
            'App\\Form\\LivrerType' => ['privates', 'App\\Form\\LivrerType', 'getLivrerTypeService', true],
            'App\\Form\\MessageReplyType' => ['privates', 'App\\Form\\MessageReplyType', 'getMessageReplyTypeService', true],
            'App\\Form\\MessageType' => ['privates', 'App\\Form\\MessageType', 'getMessageTypeService', true],
            'App\\Form\\NoteServiceType' => ['privates', 'App\\Form\\NoteServiceType', 'getNoteServiceTypeService', true],
            'App\\Form\\PaieType' => ['privates', 'App\\Form\\PaieType', 'getPaieTypeService', true],
            'App\\Form\\PaiementFormType' => ['privates', 'App\\Form\\PaiementFormType', 'getPaiementFormTypeService', true],
            'App\\Form\\PosteType' => ['privates', 'App\\Form\\PosteType', 'getPosteTypeService', true],
            'App\\Form\\PrimePerformanceType' => ['privates', 'App\\Form\\PrimePerformanceType', 'getPrimePerformanceTypeService', true],
            'App\\Form\\PrimeType' => ['privates', 'App\\Form\\PrimeType', 'getPrimeTypeService', true],
            'App\\Form\\ProduitType' => ['privates', 'App\\Form\\ProduitType', 'getProduitTypeService', true],
            'App\\Form\\PromotionType' => ['privates', 'App\\Form\\PromotionType', 'getPromotionTypeService', true],
            'App\\Form\\RechercheType' => ['privates', 'App\\Form\\RechercheType', 'getRechercheTypeService', true],
            'App\\Form\\ReclamationType' => ['privates', 'App\\Form\\ReclamationType', 'getReclamationTypeService', true],
            'App\\Form\\RegistrationType' => ['privates', 'App\\Form\\RegistrationType', 'getRegistrationTypeService', true],
            'App\\Form\\RemboursementType' => ['privates', 'App\\Form\\RemboursementType', 'getRemboursementTypeService', true],
            'App\\Form\\RemboursementbancaireType' => ['privates', 'App\\Form\\RemboursementbancaireType', 'getRemboursementbancaireTypeService', true],
            'App\\Form\\ReponseAbsenceType' => ['privates', 'App\\Form\\ReponseAbsenceType', 'getReponseAbsenceTypeService', true],
            'App\\Form\\ReponseExplicationType' => ['privates', 'App\\Form\\ReponseExplicationType', 'getReponseExplicationTypeService', true],
            'App\\Form\\ReponseType' => ['privates', 'App\\Form\\ReponseType', 'getReponseTypeService', true],
            'App\\Form\\SanctionType' => ['privates', 'App\\Form\\SanctionType', 'getSanctionTypeService', true],
            'App\\Form\\ServiceType' => ['privates', 'App\\Form\\ServiceType', 'getServiceTypeService', true],
            'App\\Form\\SuggestionType' => ['privates', 'App\\Form\\SuggestionType', 'getSuggestionTypeService', true],
            'App\\Form\\TestType' => ['privates', 'App\\Form\\TestType', 'getTestTypeService', true],
            'App\\Form\\TransfertType' => ['privates', 'App\\Form\\TransfertType', 'getTransfertTypeService', true],
            'App\\Form\\TypeCongeType' => ['privates', 'App\\Form\\TypeCongeType', 'getTypeCongeTypeService', true],
            'App\\Form\\TypeContratType' => ['privates', 'App\\Form\\TypeContratType', 'getTypeContratTypeService', true],
            'App\\Form\\TypeSanctionType' => ['privates', 'App\\Form\\TypeSanctionType', 'getTypeSanctionTypeService', true],
            'App\\Form\\Type\\BloodGroupType' => ['privates', 'App\\Form\\Type\\BloodGroupType', 'getBloodGroupTypeService', true],
            'App\\Form\\Type\\FemmesType' => ['privates', 'App\\Form\\Type\\FemmesType', 'getFemmesTypeService', true],
            'App\\Form\\Type\\LinkType' => ['privates', 'App\\Form\\Type\\LinkType', 'getLinkTypeService', true],
            'App\\Form\\Type\\RegionType' => ['privates', 'App\\Form\\Type\\RegionType', 'getRegionTypeService', true],
            'App\\Form\\Type\\SexeType' => ['privates', 'App\\Form\\Type\\SexeType', 'getSexeTypeService', true],
            'App\\Form\\Type\\SituationType' => ['privates', 'App\\Form\\Type\\SituationType', 'getSituationTypeService', true],
            'App\\Form\\Type\\StatusType' => ['privates', 'App\\Form\\Type\\StatusType', 'getStatusTypeService', true],
            'App\\Form\\Type\\VerserType' => ['privates', 'App\\Form\\Type\\VerserType', 'getVerserTypeService', true],
            'App\\Form\\Type\\adresseType' => ['privates', 'App\\Form\\Type\\adresseType', 'getAdresseTypeService', true],
            'App\\Form\\Type\\evaluationType' => ['privates', 'App\\Form\\Type\\evaluationType', 'getEvaluationType2Service', true],
            'App\\Form\\Type\\promoType' => ['privates', 'App\\Form\\Type\\promoType', 'getPromoTypeService', true],
            'App\\Form\\Type\\reponseType' => ['privates', 'App\\Form\\Type\\reponseType', 'getReponseType2Service', true],
            'App\\Form\\UserType' => ['privates', 'App\\Form\\UserType', 'getUserTypeService', true],
            'App\\Form\\VersementType' => ['privates', 'App\\Form\\VersementType', 'getVersementTypeService', true],
            'App\\Form\\changePasswordType' => ['privates', 'App\\Form\\changePasswordType', 'getChangePasswordTypeService', true],
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => ['privates', 'form.type.entity', 'getForm_Type_EntityService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => ['privates', 'form.type.color', 'getForm_Type_ColorService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => ['privates', 'form.type.file', 'getForm_Type_FileService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService', true],
        ], [
            'App\\Form\\AbsenceType' => '?',
            'App\\Form\\AchatType' => '?',
            'App\\Form\\ApprouverType' => '?',
            'App\\Form\\ApprovisionnementType' => '?',
            'App\\Form\\AvoirType' => '?',
            'App\\Form\\BanqueType' => '?',
            'App\\Form\\CalendrierType' => '?',
            'App\\Form\\CandidatureType' => '?',
            'App\\Form\\CategorieType' => '?',
            'App\\Form\\ClientType' => '?',
            'App\\Form\\CommandeType' => '?',
            'App\\Form\\ContratType' => '?',
            'App\\Form\\CritereEvaluationType' => '?',
            'App\\Form\\CvType' => '?',
            'App\\Form\\DecisionType' => '?',
            'App\\Form\\DemandeCongeType' => '?',
            'App\\Form\\DemandeExplicationType' => '?',
            'App\\Form\\DepartementType' => '?',
            'App\\Form\\DepenseType' => '?',
            'App\\Form\\DocumentType' => '?',
            'App\\Form\\EmployeType' => '?',
            'App\\Form\\EvaluationType' => '?',
            'App\\Form\\FeedbackType' => '?',
            'App\\Form\\FiltreBulletinType' => '?',
            'App\\Form\\FinancementBanqueType' => '?',
            'App\\Form\\FinancementType' => '?',
            'App\\Form\\FormationType' => '?',
            'App\\Form\\FournisseurType' => '?',
            'App\\Form\\HeureSuplementaireType' => '?',
            'App\\Form\\LivrerType' => '?',
            'App\\Form\\MessageReplyType' => '?',
            'App\\Form\\MessageType' => '?',
            'App\\Form\\NoteServiceType' => '?',
            'App\\Form\\PaieType' => '?',
            'App\\Form\\PaiementFormType' => '?',
            'App\\Form\\PosteType' => '?',
            'App\\Form\\PrimePerformanceType' => '?',
            'App\\Form\\PrimeType' => '?',
            'App\\Form\\ProduitType' => '?',
            'App\\Form\\PromotionType' => '?',
            'App\\Form\\RechercheType' => '?',
            'App\\Form\\ReclamationType' => '?',
            'App\\Form\\RegistrationType' => '?',
            'App\\Form\\RemboursementType' => '?',
            'App\\Form\\RemboursementbancaireType' => '?',
            'App\\Form\\ReponseAbsenceType' => '?',
            'App\\Form\\ReponseExplicationType' => '?',
            'App\\Form\\ReponseType' => '?',
            'App\\Form\\SanctionType' => '?',
            'App\\Form\\ServiceType' => '?',
            'App\\Form\\SuggestionType' => '?',
            'App\\Form\\TestType' => '?',
            'App\\Form\\TransfertType' => '?',
            'App\\Form\\TypeCongeType' => '?',
            'App\\Form\\TypeContratType' => '?',
            'App\\Form\\TypeSanctionType' => '?',
            'App\\Form\\Type\\BloodGroupType' => '?',
            'App\\Form\\Type\\FemmesType' => '?',
            'App\\Form\\Type\\LinkType' => '?',
            'App\\Form\\Type\\RegionType' => '?',
            'App\\Form\\Type\\SexeType' => '?',
            'App\\Form\\Type\\SituationType' => '?',
            'App\\Form\\Type\\StatusType' => '?',
            'App\\Form\\Type\\VerserType' => '?',
            'App\\Form\\Type\\adresseType' => '?',
            'App\\Form\\Type\\evaluationType' => '?',
            'App\\Form\\Type\\promoType' => '?',
            'App\\Form\\Type\\reponseType' => '?',
            'App\\Form\\UserType' => '?',
            'App\\Form\\VersementType' => '?',
            'App\\Form\\changePasswordType' => '?',
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => '?',
        ]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.form.transformation_failure_handling'] ?? $container->load('getForm_TypeExtension_Form_TransformationFailureHandlingService'));
            yield 1 => ($container->privates['form.type_extension.form.http_foundation'] ?? $container->load('getForm_TypeExtension_Form_HttpFoundationService'));
            yield 2 => ($container->privates['form.type_extension.form.validator'] ?? $container->load('getForm_TypeExtension_Form_ValidatorService'));
            yield 3 => ($container->privates['form.type_extension.upload.validator'] ?? $container->load('getForm_TypeExtension_Upload_ValidatorService'));
            yield 4 => ($container->privates['form.type_extension.csrf'] ?? $container->load('getForm_TypeExtension_CsrfService'));
            yield 5 => ($container->privates['form.type_extension.form.password_hasher'] ?? $container->load('getForm_TypeExtension_Form_PasswordHasherService'));
        }, 6), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.repeated.validator'] ??= new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension());
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.submit.validator'] ??= new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension());
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\PasswordType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.password.password_hasher'] ?? $container->load('getForm_TypeExtension_Password_PasswordHasherService'));
        }, 1)], new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_guesser.validator'] ?? $container->load('getForm_TypeGuesser_ValidatorService'));
            yield 1 => ($container->privates['form.type_guesser.doctrine'] ?? $container->load('getForm_TypeGuesser_DoctrineService'));
        }, 2))], new \Symfony\Component\Form\ResolvedFormTypeFactory());
    }
}
