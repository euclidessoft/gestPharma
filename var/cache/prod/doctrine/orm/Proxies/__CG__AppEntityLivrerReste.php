<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class LivrerReste extends \App\Entity\LivrerReste implements \Doctrine\ORM\Proxy\InternalProxy
{
    use \Symfony\Component\VarExporter\LazyGhostTrait {
        initializeLazyObject as private;
        setLazyObjectAsInitialized as public __setInitialized;
        isLazyObjectInitialized as private;
        createLazyGhost as private;
        resetLazyObject as private;
    }

    public function __load(): void
    {
        $this->initializeLazyObject();
    }
    

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'client' => [parent::class, 'client', null, 16],
        "\0".parent::class."\0".'commande' => [parent::class, 'commande', null, 16],
        "\0".parent::class."\0".'date' => [parent::class, 'date', null, 16],
        "\0".parent::class."\0".'id' => [parent::class, 'id', null, 16],
        "\0".parent::class."\0".'livrer' => [parent::class, 'livrer', null, 16],
        "\0".parent::class."\0".'produit' => [parent::class, 'produit', null, 16],
        "\0".parent::class."\0".'quantite' => [parent::class, 'quantite', null, 16],
        "\0".parent::class."\0".'quantitelivre' => [parent::class, 'quantitelivre', null, 16],
        "\0".parent::class."\0".'session' => [parent::class, 'session', null, 16],
        "\0".parent::class."\0".'stock' => [parent::class, 'stock', null, 16],
        'client' => [parent::class, 'client', null, 16],
        'commande' => [parent::class, 'commande', null, 16],
        'date' => [parent::class, 'date', null, 16],
        'id' => [parent::class, 'id', null, 16],
        'livrer' => [parent::class, 'livrer', null, 16],
        'produit' => [parent::class, 'produit', null, 16],
        'quantite' => [parent::class, 'quantite', null, 16],
        'quantitelivre' => [parent::class, 'quantitelivre', null, 16],
        'session' => [parent::class, 'session', null, 16],
        'stock' => [parent::class, 'stock', null, 16],
    ];

    public function __isInitialized(): bool
    {
        return isset($this->lazyObjectState) && $this->isLazyObjectInitialized();
    }

    public function __serialize(): array
    {
        $properties = (array) $this;
        unset($properties["\0" . self::class . "\0lazyObjectState"]);

        return $properties;
    }
}
